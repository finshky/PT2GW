(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    325440,       6376]
NotebookOptionsPosition[    315201,       6177]
NotebookOutlinePosition[    317894,       6241]
CellTagsIndexPosition[    317807,       6236]
WindowTitle->kappaCollision
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["P T2G W SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "df1340e4-fa28-4f69-ab8d-3bf24c69fddd"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "ae98c7ff-959e-4a24-a9b0-f537a7fbbaeb"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "04416bd2-3abd-489e-979c-9192d99d43b6"]
         }],ExpressionUUID->"1d627e95-ff59-42bb-aa31-87036c8daf98"],
         StripOnInput->False],{
        "\"ComputeGW\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/ComputeGW"], 
         "\"KCollision\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/KCollision"], 
         "\"KSoundwaves\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/KSoundwaves"], 
         "\"kappaSoundwaves\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/KSoundwaves"], 
         "\"HRFun\"" :> Documentation`HelpLookup["paclet:PT2GW/ref/HRFun"], 
         "\"nBFun\"" :> Documentation`HelpLookup["paclet:PT2GW/ref/nBFun"], 
         "\"HRFromBetaH\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/HRFromBetaH"], 
         "\"BetaHFromHR\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/BetaHFromHR"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "08573c46-caea-4038-a6b5-194818ac585f"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "fb1d6eb9-3a46-4757-897c-fe621ff1070f"]
         }],ExpressionUUID->"15f0756a-d7db-4572-ade3-d39152ae5beb"],
         StripOnInput->False],{
        "\"Gravitational Wave Template\"" :> 
         Documentation`HelpLookup[
          "paclet:PT2GW/guide/GravitationalWaveTemplate"], "\"PT2GWFinder\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/guide/PT2GWFinder"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "789db952-7b00-426b-a43b-1b2a737c8aa5"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Tech Notes",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "d0506d5e-0134-43eb-96cc-39cd8563d4ad"]
         }],ExpressionUUID->"22a57c84-9d77-4978-be88-705a2eb7c18a"],
         StripOnInput->False],{
        "\"Coupled Fluid-Field Model\"" :> 
         Documentation`HelpLookup[
          "paclet:PT2GW/tutorial/CoupledFluid-FieldModel"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"Tutorials"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "2a1aa2ee-8320-401e-bc75-4688ea9cfebb"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "a2f1ac11-46f2-48af-8c1c-cd0d67b4c78b"]
         }],ExpressionUUID->"2198ed30-c97b-47a0-8153-75cc7ddba026"],
         StripOnInput->False],{
        "\"PT2GW/ref/kappaCollision\"" :> None, 
         "\"Copy Wolfram Documentation Center URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{Cell["PT2GW/ref/kappaCollision"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
         "\"Copy web URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell[BoxData[
                 MakeBoxes[
                  Hyperlink[
                   "http://reference.wolfram.com/language/PT2GW/ref/\
kappaCollision.html"], StandardForm]], "Input", TextClipboardType -> 
                 "PlainText"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], 
         "\"Go to web URL\"" :> 
         FrontEndExecute[{
           NotebookLocate[{
             URL[If[TrueQ[False], 
                 "http://reference.wolfram.com/system-modeler/", 
                 "http://reference.wolfram.com/language/"] <> 
               "PT2GW/ref/kappaCollision" <> ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "8816c54a-f1d3-4f32-94e4-6a394ec0d259"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "5651a3c0-c45d-4f94-961d-9108ba293930"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"236ef254-541e-48e6-9677-a1d96c9f2a20"],

Cell["PT2GW`", "ContextNameCell",ExpressionUUID->"5c03a01d-19be-4f54-9639-db4f739c3cf7"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "kappaCollision", "ObjectName",ExpressionUUID->
      "040a98fc-42a4-4ffc-991c-a2cd359b17fd"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"91961f41-6457-456f-b6be-d85e8120068e"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "eeb24211-7280-498f-801b-d785001dd779"]
    }],ExpressionUUID->"2e244954-1022-49b6-8302-8d63bf4f46cb"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"a44e4b85-cf28-41fe-947a-\
e4719c01b5d2"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"kappaCollision", "[", 
       RowBox[{
        SubscriptBox["\[Gamma]", "*"], ",", 
        SubscriptBox["\[Gamma]", "eq"], ",", "\[Alpha]", ",", 
        SubscriptBox["\[Alpha]", "\[Infinity]"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "8afb3e40-7c8f-400e-bb55-3b6744b1708c"],
     "\[LineSeparator]gives the efficiency coefficient for bubble wall \
collisions ",
     Cell[BoxData[
      SubscriptBox["\[Kappa]", "col"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "298340ff-f6a1-40fe-9e70-dda259bed689"],
     "."
    }],ExpressionUUID->"705331df-9b58-4709-92e5-0155fd319481"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"kappaCollision", "[", "assoc", "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "edbc1716-6587-4f53-94bb-31ade9c0684d"],
     "\[LineSeparator]computes ",
     Cell[BoxData[
      SubscriptBox["\[Kappa]", "col"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "7709838f-517d-4408-a641-7d0e16ac2c4e"],
     " by extracting the relevant quantities from an ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Association"]], "paclet:ref/Association"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "4825a3b4-3be0-49e6-8376-fc2f7e79e899"],
     ", which must include \"MasFunctions\", \"GaugeCouplings\", \"T0\", \
\"T\", \"Potential\", \"Phases\", \"WallVelocity\", \"ActionFunction\", \"\
\[Alpha]\" and \"\[Beta]/H\"."
    }],ExpressionUUID->"302d5ecd-0276-4728-bda9-da6e56037ae9"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"kappaCollision", "[", "None", "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "72503f86-ef39-44d2-ba3b-344aee76688d"],
     "\[LineSeparator]returns Indeterminate (for compatibility)."
    }],ExpressionUUID->"14972c07-41c8-4ae1-97ea-4745ebe428d6"]}
  }]], "Usage",
 CellID->781989143,ExpressionUUID->"be3a5c3b-1a87-48c8-9665-23f64c0f9eb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{
      13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
    ExpressionUUID->"24128bf3-f30e-45b2-bb13-fe02af6f0568"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"6171072f-acad-4a3d-a006-8ef97fe1c257"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"fb09e523-982a-4d14-bb82-4b298f0ed3c4"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"17c19077-6172-4dab-8774-1f1f24260ba8"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->555474409,ExpressionUUID->"20a3fc37-8657-4d7e-80c0-563dfcdee4af"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["kappaCollision"]], "paclet:PT2GW/ref/kappaCollision", 
    "PT2GW Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b9666d48-0262-48b8-86e9-a759af080491"],
 " implements the following relation (see, e.g., arXiv ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["1903.09642"]], "https://arxiv.org/abs/1903.09642"},
   "WebLink",
   BaseStyle->{"Notes"}]],ExpressionUUID->
  "b4de3d06-cd85-4d6d-b5f8-be706090b226"],
 "):\[LineSeparator]",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[Kappa]", "col"], "=", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{
           FractionBox[
            SubscriptBox["\[Gamma]", "eq"], 
            SubscriptBox["\[Gamma]", "*"]], "[", 
           RowBox[{"1", "-", 
            RowBox[{
             FractionBox[
              SubscriptBox["\[Alpha]", "\[Infinity]"], "\[Alpha]"], 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                SubscriptBox["\[Gamma]", "eq"], 
                SubscriptBox["\[Gamma]", "*"]], ")"}], "2"]}]}], "]"}], 
          RowBox[{
           SubscriptBox["\[Gamma]", "*"], ">", 
           SubscriptBox["\[Gamma]", "eq"]}]},
         {
          RowBox[{"1", "-", 
           FractionBox[
            SubscriptBox["\[Alpha]", "\[Infinity]"], "\[Alpha]"]}], 
          RowBox[{
           SubscriptBox["\[Gamma]", "*"], "\[LessEqual]", 
           SubscriptBox["\[Gamma]", "eq"]}]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3c7df22c-ac0c-4fea-9976-eaffa5a85bf1"]
}], "Notes",
 CellID->1403202643,ExpressionUUID->"c23af477-b2fe-4e56-bcb4-6114930bf9dd"],

Cell[TextData[{
 "If an ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Association"]], "paclet:ref/Association"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fb7c40dc-fa97-48cd-a63f-7f9ceff06347"],
 " (or a ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["List"]], "paclet:ref/List"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "03ab2650-8acf-4084-8e2f-e1943a2e4346"],
 " of ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Rule"]], "paclet:ref/Rule"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "301cf270-45d7-44bc-9b36-e8fa02deb865"],
 "s) is provided, ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[Gamma]", "*"], ",", 
   SubscriptBox["\[Gamma]", "eq"], ",", "\[Alpha]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6d1026be-8b16-451a-808b-a2321d02d1a4"],
 " and ",
 Cell[BoxData[
  SubscriptBox["\[Alpha]", "\[Infinity]"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "faf19a7b-7aa8-45f0-b5d6-70d09ab81e8e"],
 " are computed from the functions and parameters with the following keys\
\[LineSeparator]\"MassFunction\"\[LineSeparator]\"GaugeCouplings\"\
\[LineSeparator]\"T0\"\[LineSeparator]\"T\"\[LineSeparator]\"Potential\"\
\[LineSeparator]\"Phases\"\[LineSeparator]\"WallVelocity\"\[LineSeparator]\"\
ActionFunction\"\[LineSeparator]\"\[Alpha]\"\[LineSeparator]\"\[Beta]/H\""
}], "Notes",
 CellID->658145445,ExpressionUUID->"cf02e0a8-7fa3-44d4-9d9b-89b58a1107ef"],

Cell[TextData[{
 "For compatibility, the actual value of ",
 Cell[BoxData[
  SubscriptBox["\[Kappa]", "col"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "256e2190-7a0e-428f-bef1-dbbfad584950"],
 "  can be passed with the key \"\[Kappa]col\", neglecting the internal \
computations."
}], "Notes",
 CellID->380921360,ExpressionUUID->"06cab8d1-fa4e-4b3f-84e1-ac398606cf4f"],

Cell["The following options can be given: ", "Notes",
 CellID->395932024,ExpressionUUID->"21d257e4-4ef8-4b40-b585-1ee4bbd2bfc8"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "8de7c1c1-7e1e-42aa-89b0-9cc0e19438d3"], 
    TemplateBox[{
      Cell[
       TextData["Return"]], "paclet:ref/Return"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], "\"\<\[Kappa]col\>\"", Cell[TextData[{
     "what the function should return. The right-hand side of Return can be \
any function of the keys \"\[Kappa]col\" and \"Data\", corresponding to the \
collision efficiency and metadata ",
     Cell[BoxData[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["\[Gamma]", "*"], ",", 
        SubscriptBox["\[Gamma]", "eq"], ",", "\[Ellipsis]"}], ")"}]], 
      "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "8aeed350-0684-4cd1-b3f6-bb8b42e06f84"],
     "  resepctively.\nE.g., Return->{\"\[Kappa]col\",\"Data\"} returns a \
List of the two."
    }], "TableText",ExpressionUUID->"459cc0da-5712-4879-bfec-a1fb7b70986d"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{None}}},
 GridBoxDividers->{"Rows" -> {{True, True}}}},
 CellID->376556349,ExpressionUUID->"8e732928-050d-4f3d-94cd-a0bf68320fd5"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"ff7abb7f-53aa-4dfe-bf03-656f20e014b6"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"0e78a099-4708-4a81-836d-bb5a7b1f38af"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(4)", "ExampleCount",ExpressionUUID->
  "26eb82fd-b263-4a62-8325-693b8d4e5385"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->297545235,ExpressionUUID->"1bb624dc-e50f-4c76-80f5-8d4034da0128"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PT2GW`\>\"", "]"}]], "Input", "ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->1370366051,ExpressionUUID->"8d1feff4-75b6-435d-b864-9a5b6bea8104"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"50cacc7d-f67b-4c49-9aa0-7b93514611fa"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"c83454fd-30f6-47b7-9701-56cda8f57304"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "c048268b-ff9d-4ab6-b6db-4753de57e27e"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1870672253,ExpressionUUID->"21b6009a-8a59-45b5-b8f1-303016df15f9"],

Cell["Load a benchmark from the coupled fluid-field model:", "ExampleText",
 CellID->100999087,ExpressionUUID->"9827afd4-8c3e-4c9b-aa70-d1aba24b2003"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "PT2GW/Models.m"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"V", "=", 
  RowBox[{"CFFModel", "[", 
   RowBox[{"idx", "=", "6"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"tr", "=", 
  RowBox[{"CFFModel", "[", 
   RowBox[{"idx", ",", "\"\<Transition\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AutoComplete", "[", "tr", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[1]:=",
 CellID->154102048,ExpressionUUID->"f9199ec9-ba78-4c52-a93f-21a2ba61d7b8"],

Cell[BoxData["\<\"\[Checkmark] Imported \
\\!\\(\\*StyleBox[\\\"Models`\\\",\\nFontWeight->\\\"Bold\\\"]\\)\"\>"], \
"Print",
 CellLabel->"During evaluation of In[2]:=",
 CellID->231799791,ExpressionUUID->"6599439f-f925-40a5-acb4-5bcfc1b4152d"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Phi]$", ",", "T$"}], "}"}], ",", 
   RowBox[{
    RowBox[{"0.05555555555555555`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "19600.`"}], "+", 
       SuperscriptBox["T$", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Phi]$", "2"]}], "-", 
    RowBox[{"0.007320087176315692`", " ", "T$", " ", 
     SuperscriptBox["\[Phi]$", "3"]}], "+", 
    RowBox[{"0.00048225308641975306`", " ", 
     SuperscriptBox["\[Phi]$", "4"]}]}]}], "]"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1672954650,ExpressionUUID->"31e80717-831f-4bcf-921c-2caedec06f74"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Transition",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             GraphicsBox[{{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Hue[0.5, 0.5, 0.4]], 
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQnbH9ekxLQ6IDAxQs+Cu3TPUDgh84f3fMtNgkOJ/z
Xdhm3ysIftH7T3clnJPh/Edze1do7UbwTy+vfcBtmALnp6bkvWGYj+CznYud
YSOWCudHvvKV6GlF8FWSJrOu/oTgf2u7PkkgMw3Or4yT+dJ5HcFnfhz/1dM/
HWH+4R/JN48g+LtCJy2rMcqA80unanWmrUTwH7Uftk+RyITzQ9Wjp62YgOA7
KnlE7WHLgvPvnzf99LgEwW/WUtIKeoPgZ2+RvSr6C8EPtpNsuMmeDecrBwlc
S1BG8LnvcDeqGCL4n1PZdV7YIfi33zNdX+2D4B+u/NeYH4XgAwC092lp
                    "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Hue[0.08, 0.9, 0.8]], 
                   LineBox[CompressedData["
1:eJwV1Hs0VHsbB3AKHemIqJR0QejqUqJ0+IaGwinXcqljZs+M2eOS10vGKUWJ
pMhtZm/JqOWISL26EE6dLlSUS2hkRUXpJjQhhbz7/LHXXp+1fr+1nv0832cv
4+zz4E1TUFA4zDz/vtm/bZtzJScQSuvWwudvCuab5P2iokDccDrvbfwPBUWr
Mw+23AiEz38aGgfuUjhn9vlga0sgjD70lQY+pPDaIP3d6C9sPFR13tn4lIKg
QhaQEMdGXGhprc07Cqb5ComiVDa+ErLLwg8URo+vuBySy8bx+YcyUj9RSPA7
oOhdyUZZf8Lna4MU8icXFy4fYmOksOtszDcKz9LlNa2TbBhYhnU7fqcwy6iu
NV6Ng9tf1r5QGqcg+j1UsduIgyPdTdc5PymU9UDn5HoOBO81uQoKNN7s1zbd
ZM9BTpVDZIYiDXdpdYB4DwcWG3T9M5VomKimOYWGcDDkfCdpqQqNqQiOheMB
Ds6n1WVKZ9C4xFL9RU4x95vPPYiYSSPhygv5wwsc5DU+La1To+G/8EqX9AZT
z1rNfrVfaagO+Fx1a+Ng9c0j/eRsGhvCLuoY93Dw0VDXOFyDBndgMlZhiIOO
6GuGpCaN9DD33ueTHOh319d5zaFxa6DA+aoagb4KtwELLRqfwsYunVxAoH9m
7oHp2jR0Bl20+MYE/J7F/V7HeOs+qcjOkoCNkynrwFwaEYPyLh0HAkce227R
n0cDW1nzdT0ImIy3OT5grH6G3qnHJlB/dCrRfz6NF0P9yUvCmfNaJZ3djC+y
cG/ZYQLdH9s03XVoiHIzJwxSCei/Pjr5P8YseZ+l0VkCBw3uhCouoKHtvGmf
SSmBztLT5naMe86eKlpZTUD1vx/mBTNeIk1p6ntE4KFl85kExgH5yaPnOwis
9HmbcJIxfS5J7493BHoySqVHGD87f8xRd5RAlsLpSj5jrYKjwTIlLg6xZTnW
jHf+FZ+RqcUFy1CqMcbUk1p4+OYOfS7+VG7qKWDccCH2lZo5Fwt3aDy3Zbz3
9nh8vS0XPx/NEjUy3yd/FmOQ7MpYydPVjfGxgW/3nfy4ULCZtbya6Y+Oyn6+
ioCLjTPcm+czLtEbnlEbxcW3n0t1Caa/tpYRxUePcjEy7NuSy/Sfxw3rV5By
UReWV9zJzC/HvZ/9/hIXm3dc/u0hM99GW6GsqYaLcr2yRfnM/Ketfu9a0cBF
xqLxcfa/+VjAv5vXyUVV1uy0X9VpCFXeWCV+4MLaNiTp/CwaeV/Zl0LHuLjZ
lpi1lMmbSuMeavM8HqbPWZb/jMnn6Rb/40aGPHi4h89cw+RXt91XpGHBw5+e
57zCmHybvfDe/caNh+4S+4ArzD5UvfR0bvTnwV6ac+gKsy+Ove7WlSQPUSGH
tudMUPD96KZz8hgPlzMz0leMUfCgR0dMM3mYZu8t6hyh4OosbW3N58HCpvJs
5FcKtoVDqbo1PKRM5LGIAQrW3nTI7Uc8sP5aMbeC2W9zJfvthIyH8AazSvl7
CoacTOUSOQ8/Hz8YXtJL4VafTUW0Ih/3lDsUn7yksDv4jcBRg4+JFGm5/wsK
pyItH3et4cMn61aDbjsFk+9dsRc381FFHFN3baFwNzbRNNqFD3L5vmL/J8z/
JVGWoUHyMf1gNTGvlkLfMoXbL/cz57+1ZqndoSCrMflUlsAHi9TW6amhUCmP
cXDL52Oe0+6/za5RiNm7aDhZxodDXPKg/TkKM5sch+P7+OjyO1N09wyFXLvQ
4ZgRPtKRMEdHzNS/9NYwqRUEbwerH3YnKEzv/WNk244gBKqHFPLCKShNWfSO
7wnCwkKvC9kkY12VlkshQbgYaTYti8PYs7RU80QQtJft4o16UlC5N0Y8vx8E
Sz1Docl6CgEjLo9PPQ3CgoD3BlarKVw1lq63fxWEPdVz7802pBB4cqtyyXgQ
mpTTLXS0KFR5ZxQetBDA7KqrreeABOV73vb4bhFAadXnH4W9EhTzrJdY7RRg
eHaHqKhDAiqqW/IlVACf2Kz8C3ckSIs1b2s8KEDhRt8VedclSDyWoFGaIkBM
rcLy9cUSRGWvTOYXC+DRTWqvSZPg7tVJO1aFAFNvfdsjjkig8bR5dHmtAF59
dZpeURKUqkdz374SIONxSHW7rwQ/Vm/XrR0QgPcxLS7YRQInF72nBRMCiIxq
fZI2S9CTdM+Oq0OioGPDqg16EjQfENeHGJPQVUyI9VCT4PY+0jtqAwnWNvMn
VWNi5O6aHZzoReLlutcnbFrEOOHSM5JKkDBqX9xuWSOGyO56nCSCxFlVy7V2
hWJ4G/uLi06T+Gdx9CqTaDHK6zrUg6UkJlJND7vuFUOD75O0poyEhi15XN9R
jDDltqnBGhL14dzPCSZiNBS4i8obSGycDClnqYlh4tg0FNlJoovrKDPrz0Zi
rytp9YHEzYLivp/12dii7+xXoyKEfKPinOa4bAzLtrrFawuhFVG9q8o3G0Wn
HMDSF6Kv7FHI4NpsBDhsWadmJkSKit4a0VQWNL7bGjX/JoRa6P7R54+ycL9s
84JsFyHiZe++UClZEHE3zfLzFaK0xG/stV0WVi+0nlocJMTSxBbs7szEyyZL
eW+kECt73TNtRzPwf0HdpTE=
                    "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}}, {}}, {
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
               AxesOrigin -> {132.83398951148357`, 0}, 
               FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
               DisplayFunction -> Identity, PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.05], 
                  Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
               All, DisplayFunction -> Identity, AspectRatio -> 
               NCache[GoldenRatio^(-1), 0.6180339887498948], 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {132.83398951148328`, 0}, Background -> 
               GrayLevel[1], DisplayFunction :> Identity, Epilog -> {
                 Arrowheads[Small], 
                 
                 ArrowBox[{{147.94580347367875`, 0}, {147.09781740436307`, 
                   1601.2903828393285`}}]}, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{132.83398951148328`, 218.82611537368396`}, {0., 
                1606.3872257074204`}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.02], 
                  Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], Deploy, 
             DefaultBaseStyle -> "Deploy"], 
            GridBox[{{
               RowBox[{
                 TagBox["\"\[Alpha]: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.08490288963830596`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"\[Beta]/H: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3398.2575062983647`", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             GraphicsBox[{{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Hue[0.5, 0.5, 0.4]], 
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQnbH9ekxLQ6IDAxQs+Cu3TPUDgh84f3fMtNgkOJ/z
Xdhm3ysIftH7T3clnJPh/Edze1do7UbwTy+vfcBtmALnp6bkvWGYj+CznYud
YSOWCudHvvKV6GlF8FWSJrOu/oTgf2u7PkkgMw3Or4yT+dJ5HcFnfhz/1dM/
HWH+4R/JN48g+LtCJy2rMcqA80unanWmrUTwH7Uftk+RyITzQ9Wjp62YgOA7
KnlE7WHLgvPvnzf99LgEwW/WUtIKeoPgZ2+RvSr6C8EPtpNsuMmeDecrBwlc
S1BG8LnvcDeqGCL4n1PZdV7YIfi33zNdX+2D4B+u/NeYH4XgAwC092lp
                    "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Hue[0.08, 0.9, 0.8]], 
                   LineBox[CompressedData["
1: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
eW+kECt73TNtRzPwf0HdpTE=
                    "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}}, {}}, {
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
               AxesOrigin -> {132.83398951148357`, 0}, 
               FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
               DisplayFunction -> Identity, PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.05], 
                  Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
               All, DisplayFunction -> Identity, AspectRatio -> 
               NCache[GoldenRatio^(-1), 0.6180339887498948], 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {132.83398951148328`, 0}, Background -> 
               GrayLevel[1], DisplayFunction :> Identity, Epilog -> {
                 Arrowheads[Small], 
                 
                 ArrowBox[{{147.94580347367875`, 0}, {147.09781740436307`, 
                   1601.2903828393285`}}]}, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{132.83398951148328`, 218.82611537368396`}, {0., 
                1606.3872257074204`}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.02], 
                  Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], Deploy, 
             DefaultBaseStyle -> "Deploy"], 
            GridBox[{{
               RowBox[{
                 TagBox["\"\[Alpha]: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.08490288963830596`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"\[Beta]/H: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3398.2575062983647`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(p\\)]\\): \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "147.09781740436307`", "\"GeV\"", "gigaelectronvolts", 
                    "\"Gigaelectronvolts\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"\\!\\(\\*SubsuperscriptBox[\\(f\\), \\(GW\\), \\(peak\\)]\
\\): \"", "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.03495785682966103`", "\"Hz\"", "hertz", "\"Hertz\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"\\!\\(\\*SuperscriptBox[\\(h\\), \
\\(2\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(\[CapitalOmega]\\), \\(GW\\), \
\\(peak\\)]\\): \"", "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["3.71073682295788`*^-16", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PT2GW`Transition[<|
   "T0" -> 140, "\[Gamma]" -> Rational[1, 9], "A" -> 
    Rational[1, 72] Rational[5, 2]^Rational[1, 2], "\[Lambda]" -> 
    0.0019290123456790122`, "Unit" -> "GeV", "RelativisticDOF" -> 106.75, 
    "Phases" -> {
      Function[Private`T, 
       ConditionalExpression[0, 
        Or[
         Inequality[140., Less, Private`T, Less, 211.66010488516724`], 
         Private`T > 211.66010488516724`]]], 
      Function[Private`T, 
       ConditionalExpression[
       5.692099788303082 Private`T + 
        9.77509389444072*^-9 (1.1815080348299888`*^22 - 2.637294720602654*^17 
           Private`T^2)^Rational[1, 2], 
        Or[
         Inequality[0, Less, Private`T, Less, 140.], 
         Inequality[140., Less, Private`T, Less, 211.66010488516724`]]]]}, 
    "WallVelocity" -> 0.9, "Tc" -> 197.98989873223329`, "TnEstimate" -> 
    148.23092709361623`, "ActionFunction" -> 
    PT2GW`ActionFunction[<|"Function" -> Function[PT2GW`Private`T$, 
         Piecewise[{{-12319.929974830624` + 
            1.4451051581149155`*^-9 (197.98989873223329` - 
               PT2GW`Private`T$)^(-2) + 
            208302.13164024646`/(197.98989873223329` - PT2GW`Private`T$) + 
            238.05503471287327` (197.98989873223329` - PT2GW`Private`T$), 
            Inequality[
            188.03810440450985`, LessEqual, PT2GW`Private`T$, Less, 
             197.98989873223329`]}, {
            
            InterpolatingFunction[{{145.6113130637032, 
             188.03810440450985`}}, {
             5, 39, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{
             145.6113130637032, 145.61736625122506`, 145.811068251925, 
             146.19847225332487`, 147.7480882589243, 149.29770426452376`, 
             150.8473202701232, 152.39693627572262`, 153.94655228132208`, 
             155.49616828692152`, 157.04578429252098`, 158.5954002981204, 
             160.14501630371984`, 161.6946323093193, 163.24424831491876`, 
             164.7938643205182, 166.34348032611763`, 167.8930963317171, 
             169.44271233731652`, 170.99232834291598`, 172.54194434851541`, 
             174.09156035411485`, 175.64117635971428`, 177.19079236531374`, 
             178.74040837091317`, 180.29002437651263`, 181.83964038211207`, 
             183.3892563877115, 184.93887239331096`, 186.48848839891042`, 
             188.03810440450985`}}, {
              BSplineFunction[
              1, {{145.6113130637032, 188.03810440450985`}}, {3}, {
               False}, {{82.44935490630017, 84.51937756903413, 
                88.71786674228197, 114.30159839638887`, 135.28266615340274`, 
                183.67286515284619`, 230.93549410179102`, 292.12713311748996`,
                 351.7469730141841, 427.12833844032104`, 494.1707986319734, 
                580.2773666532115, 677.8648952179275, 779.6709137051021, 
                896.9504724447576, 1015.72551476125, 1173.7059050236003`, 
                1328.1330017694675`, 1513.0710905691717`, 1716.3402800463537`,
                 1955.7076414004878`, 2228.2842389517546`, 
                2548.2279094737646`, 2932.4706169595456`, 3390.917354981271, 
                3955.5569509127954`, 4661.704820543482, 5574.401268987877, 
                7178.033545359359, 9053.365747311855, 
                10980.256486385428`}, {}}, {{145.6113130637032, 
               145.6113130637032, 145.6113130637032, 145.6113130637032, 
               145.87563558549164`, 146.58587625472472`, 147.7480882589243, 
               149.29770426452376`, 150.8473202701232, 152.39693627572262`, 
               153.94655228132206`, 155.49616828692152`, 157.04578429252098`, 
               158.5954002981204, 160.14501630371984`, 161.6946323093193, 
               163.24424831491874`, 164.7938643205182, 166.34348032611763`, 
               167.89309633171706`, 169.44271233731652`, 170.99232834291598`, 
               172.54194434851541`, 174.09156035411485`, 175.64117635971428`, 
               177.1907923653137, 178.74040837091317`, 180.29002437651263`, 
               181.83964038211207`, 183.3892563877115, 184.93887239331096`, 
               188.03810440450985`, 188.03810440450985`, 188.03810440450985`, 
               188.03810440450985`}}, {0}, MachinePrecision, 
               "Unevaluated"], {}}, {Automatic}][PT2GW`Private`T$], 
            Inequality[
            145.6113130637032, LessEqual, PT2GW`Private`T$, Less, 
             188.03810440450985`]}}, Indeterminate]], "ActionMethod" -> 
       "PWLaurent", "Domain" -> {145.6113130637032, 197.98989873223329`}, 
       "Tc" -> 197.98989873223329`, "StandardDeviation" -> 
       0.00023067123823114393`, "NActionPoints" -> 31, "Unit" -> "GeV", 
       "Data" -> CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAIQdq4I8zYkDPthQ7wpxUQE5V3nbB
M2JAhK8pksSlVEDwGmhF9DliQPN93lLmi1VAM6Z74llGYkDgFYLbI95XQD/T
yVbwd2JADu3VpE7wYEBMABjLhqliQHjnKVoO2GZAWC1mPx3bYkCqkDZPOSht
QGRatLOzDGNAXijuuNc9ckBxhwIoSj5jQBkkNXj7JXZAfbRQnOBvY0DT40r7
0Jt6QIrhnhB3oWNAyBGrBZIVf0CWDu2EDdNjQOTqpeGGMYJAojs7+aMEZECo
RXU3izSFQK9oiW06NmRAKlGVqv9xiEC8ldfh0GdkQOFipQaZCYxAyMIlVmeZ
ZEAOrULyE/KPQNTvc8r9ymRAMAABa3RUkkDhHMI+lPxkQI4IM2ff1JRA7UkQ
syouZUA3uvlNgbCXQPp2XifBX2VAkzWRM23pmkAGpKybV5FlQHPBnVX4pJ5A
EtH6D+7CZUCaFUSFW3ihQB7+SISE9GVAGC9yiuP9o0ArK5f4GiZmQC7kfAit
AadAN1jlbLFXZkCLRu55O6GqQESFM+FHiWZArxMUiEgWr0BQsoFV3rpmQNRf
ZSwhWLJAXN/PyXTsZkCoJBk+vfa1QGkMHj4LHmdAu08pFdzDukB2OWyyoU9n
QEguGVcas8BAgma6JjiBZ0CkvovUIHLFQBHF4lo=
        "]|>], "Domain" -> {140.00000823092708`, 197.98989873223329`}, "Tn" -> 
    147.94580347367875`, "NucleationAction" -> 141.2120401272475, 
    "NucleationDecayOverHubble" -> 4037.0323778491597`, 
    "NucleationIntegralDecay" -> 0.9994850036707104, "Tp" -> 
    147.09781740436307`, "PercolationAction" -> 120.43106209035874`, 
    "PercolationIntegralValue" -> 0.33999999999995223`, 
    "TpCondition" -> -3.500360325607289*^-11, "TransitionTemperature" -> "Tp",
     "\[Alpha]" -> 0.08490288963830596, "\[Beta]/H" -> 3398.2575062983647`, 
    "\[CapitalDelta]mf" -> {}, "\[CapitalDelta]mv" -> {53.65453591389198}, 
    "nF" -> 1, "nV" -> 1, "gaugeCoup" -> {0.3}, "\[CapitalDelta]m2" -> 
    2878.8092241351246`, "g2\[CapitalDelta]mv" -> 4.828908232250279, "R0" -> 
    0.003926335665307685, "R*" -> 2.480509751538494*^10, 
    "\[Alpha]\[Infinity]" -> 0.00015784935506603706`, "\[Alpha]eq" -> 
    0.0009347518837123945, "\[Gamma]eq" -> 90.66046483551605, "\[Gamma]*" -> 
    4.211746800722755*^12, "\[Kappa]col" -> 2.152562087064642*^-11, "Kcol" -> 
    1.6845631352183102`*^-12, "\[Alpha]eff" -> 0.08490288963647837, 
    "\[Kappa]sw" -> 0.13382520009380108`, "Ksw" -> 0.0062837768998573375`, 
    "fp" -> 0.009172064997826914, "Treh" -> 150.1253197198512, "H*0" -> 
    0.00002453681303333016, "HR" -> 0.0007757697563309021, "f1sw" -> 
    0.00645599256189309, "f2sw" -> 0.04502090619377141, "\[CurlyEpsilon]" -> 
    0.5, "\[ScriptCapitalN]" -> 2, "\[CapitalOmega]s" -> 
    0.0031418884499286688`, "f1mhd" -> 0.0007834820348213916, "f2mhd" -> 
    0.07101591818082399, "Amhd" -> 0.00435731177561978, 
    "h2Omega" -> <|
     "Collisions" -> (
       1.0466099416180268`*^-34 (0.1437776946934871 #^(-0.6) + 
         40.06184695254345 #^0.6)^(-4.)& ), 
      "Soundwaves" -> (
       3.586381195621873*^-10 #^3 ((1 + 23992.41458168834 #^2)^(-1)/(1 + 
        243412.60857211848` #^4))& ), 
      "Turbulence" -> (
       3.107595152097045*^-11 #^3 (1 + 
         294.8392046582959 #^2.15)^(-1.7054263565891472`) (1 + 
         2.653895571012538*^12 #^4)^Rational[-1, 2]& ), 
      "Combined" -> (
       1.0466099416180268`*^-34 (0.1437776946934871 #^(-0.6) + 
          40.06184695254345 #^0.6)^(-4.) + #^3 (
         3.586381195621873*^-10 ((1 + 23992.41458168834 #^2)^(-1)/(1 + 
           243412.60857211848` #^4)) + 
         3.107595152097045*^-11 (1 + 
            294.8392046582959 #^2.15)^(-1.7054263565891472`) (1 + 
            2.653895571012538*^12 #^4)^Rational[-1, 2])& )|>, "fPeak" -> 
    0.03495785682966103, "h2OmegaPeak" -> 3.71073682295788*^-16|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[1]=",
 CellID->190851328,ExpressionUUID->"5258bf85-b53e-4445-9c8d-3e4b64083d26"]
}, Open  ]],

Cell["Load collision-specific data from the benchmark:", "ExampleText",
 CellID->963662196,ExpressionUUID->"a3bb1c35-fd5b-4629-a370-337363964bb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colData", "=", 
   RowBox[{"<|", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<GaugeCouplings\>\"", "->", 
      RowBox[{"{", "0.1", "}"}]}], ",", 
     "                                                         ", 
     RowBox[{"(*", " ", 
      RowBox[{"value", 
       RowBox[{"(", "s", ")"}], " ", "of", " ", "the", " ", "gauge", " ", 
       "coupling", 
       RowBox[{"(", "s", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<MassFunctions\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Bosons\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"MassFunction", "[", "V", "]"}], "}"}]}], "}"}]}], ",", " ", 
     
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "MassFunction", " ", "gives", " ", "a", " ", "simple", " ", "second"}],
        "-", "derivative"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\"\<T0\>\"", "->", 
      RowBox[{"tr", "[", "\"\<Tn\>\"", "]"}]}], ",", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"temperature", " ", "for", " ", "minimal"}], ",", " ", 
       RowBox[{"non", "-", "zero"}], ",", " ", 
       RowBox[{"critical", " ", "bubble"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<T\>\"", "->", 
      RowBox[{"tr", "[", "\"\<Tp\>\"", "]"}]}]}], "       ", 
    RowBox[{"(*", " ", 
     RowBox[{"transition", " ", "temperature"}], " ", "*)"}], 
    "\[IndentingNewLine]", "|>"}]}], ";"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[2]:=",
 CellID->181115339,ExpressionUUID->"47737365-0c08-4d5a-a3eb-103e19ec8ac9"],

Cell["\<\
The minimal data necessary to compute the efficiency coefficient for bubble \
collisions includes  the following transition data:\
\>", "ExampleText",
 CellID->1362934913,ExpressionUUID->"665bc70c-8ef4-470e-a5d6-33a2e50d2b66"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{"<|", 
     RowBox[{"\"\<Potential\>\"", "->", "V"}], "|>"}], "~", "Join", "~", 
    RowBox[{"KeyTake", "[", 
     RowBox[{
      RowBox[{"tr", "//", "Normal"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<ActionFunction\>\"", ",", "\"\<Phases\>\"", ",", " ", 
        "\"\<Potential\>\"", ",", " ", "\"\<WallVelocity\>\"", ",", " ", 
        "\"\<\[Alpha]\>\"", ",", " ", "\"\<\[Beta]/H\>\""}], "}"}]}], 
     "]"}]}]}], ";"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[3]:=",
 CellID->1647485944,ExpressionUUID->"128b4c20-c6fe-4014-9924-da5a01dca73f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Kappa]col", "=", 
  RowBox[{"kappaCollision", "[", 
   RowBox[{"colData", "~", "Join", "~", "data"}], "]"}]}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[4]:=",
 CellID->1069843478,ExpressionUUID->"05f0bb6d-d10f-42a4-be3b-7a90d85434f9"],

Cell[BoxData["1.9373346218434432`*^-10"], "Output",
 CellLabel->"Out[4]=",
 CellID->1042329354,ExpressionUUID->"70c6be75-33ff-4e84-997e-2b8f77a70cc6"]
}, Open  ]],

Cell["Missing data is flagged:", "ExampleText",
 CellID->1711252463,ExpressionUUID->"1a326a41-3675-4a3f-8044-4a1f793e115f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kappaCollision", "[", 
  RowBox[{"colData", "//", "Normal"}], "]"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[5]:=",
 CellID->1505486269,ExpressionUUID->"88226aa0-3108-4bbe-be31-99cc440ce637"],

Cell[BoxData["\<\"Missing {ActionFunction, Phases, Potential, WallVelocity, \
\[Alpha], \[Beta]/H} in \
CollisionData.\\n\\!\\(\\*SubscriptBox[\\(\[Kappa]\\), \\(col\\)]\\) is \
Indeterminate.\"\>"], "Print",
 CellLabel->"During evaluation of In[16]:=",
 CellID->885204619,ExpressionUUID->"cc0412dd-fc0d-46e9-bb4e-21bef9650895"],

Cell[BoxData["Indeterminate"], "Output",
 CellLabel->"Out[5]=",
 CellID->701974750,ExpressionUUID->"39af1e64-173c-4b3a-89e5-be2905a43171"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"e2968a3b-9dec-4003-afaa-d65a7ac75c16"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"ffde568a-c146-400f-9099-9de7faba2f63"],
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "5b66502a-3c09-4285-a1a8-0914af3ed4d8"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->357878193,ExpressionUUID->"689daf7d-c59e-4ecd-b476-8f13ad9b7367"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"36e67a58-ab79-4610-97e1-e9420ec5bc76"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"b72d2549-66a2-497d-86e6-aa5773e95576"],
 "Return",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "64d0b067-3698-4299-a382-e307b8e672e2"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1709655337,ExpressionUUID->"fd95d63f-bea2-40da-8cd1-e1c80bbbfc5c"],

Cell["\<\
The default option Return\[Rule]\"\[Kappa]col\" returns just the collision \
efficiency. Return the data computed along the way instead:\
\>", "ExampleText",
 CellID->1346979293,ExpressionUUID->"436b31ad-c705-4e5c-86ea-91252dbe235a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kappaCollision", "[", 
  RowBox[{
   RowBox[{"colData", "~", "Join", "~", "data"}], ",", 
   RowBox[{"Return", "->", "\"\<Data\>\""}]}], "]"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[1]:=",
 CellID->1174856114,ExpressionUUID->"8f77f9bd-3c27-412e-84d1-7cbbe7295fa9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"\[CapitalDelta]mf\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"\[CapitalDelta]mv\"\>", "\[Rule]", 
    RowBox[{"{", "53.653742816713525`", "}"}]}], ",", 
   RowBox[{"\<\"nF\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"nV\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"gaugeCoup\"\>", "\[Rule]", 
    RowBox[{"{", "0.1`", "}"}]}], ",", 
   RowBox[{"\<\"\[CapitalDelta]m2\"\>", "\[Rule]", "2878.724118242038`"}], 
   ",", 
   RowBox[{"\<\"g2\[CapitalDelta]mv\"\>", "\[Rule]", "0.5365374281671353`"}], 
   ",", 
   RowBox[{"\<\"R0\"\>", "\[Rule]", "0.003926335665307685`"}], ",", 
   RowBox[{"\<\"R*\"\>", "\[Rule]", "2.480509751538494`*^10"}], ",", 
   RowBox[{"\<\"\[Alpha]\[Infinity]\"\>", "\[Rule]", 
    "0.00015784468858441564`"}], ",", 
   RowBox[{"\<\"\[Alpha]eq\"\>", "\[Rule]", "0.00010385978518123959`"}], ",", 
   
   RowBox[{"\<\"\[Gamma]eq\"\>", "\[Rule]", "815.956289547855`"}], ",", 
   RowBox[{"\<\"\[Gamma]*\"\>", "\[Rule]", "4.211746800722755`*^12"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1599743110,ExpressionUUID->"23751ac6-6dad-4cf9-8677-6048c30cc854"]
}, Open  ]],

Cell["Any function of \"\[Kappa]col\" and \"Data\" can be returned:", \
"ExampleText",
 CellID->1059155441,ExpressionUUID->"3bdd5d01-cd4d-4c82-a2fa-4b31b10bcb35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kappaCollision", "[", 
  RowBox[{
   RowBox[{"colData", "~", "Join", "~", "data"}], ",", 
   RowBox[{"Return", "->", 
    RowBox[{"Dataset", "@", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Kappa]col\>\"", ",", "\"\<Data\>\""}], "}"}]}]}]}], 
  "]"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[2]:=",
 CellID->402411857,ExpressionUUID->"516d08c8-4789-4c24-8c4f-d9f5e8419bc3"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      1.9373346218434432`*^-10, <|
       "\[CapitalDelta]mf" -> {}, 
        "\[CapitalDelta]mv" -> {53.653742816713525`}, "nF" -> 1, "nV" -> 1, 
        "gaugeCoup" -> {0.1}, "\[CapitalDelta]m2" -> 2878.724118242038, 
        "g2\[CapitalDelta]mv" -> 0.5365374281671353, "R0" -> 
        0.003926335665307685, "R*" -> 2.480509751538494*^10, 
        "\[Alpha]\[Infinity]" -> 0.00015784468858441564`, "\[Alpha]eq" -> 
        0.00010385978518123959`, "\[Gamma]eq" -> 815.956289547855, 
        "\[Gamma]*" -> 4.211746800722755*^12|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`RowShape[{
         TypeSystem`PackageScope`AtomShape[60], 
         TypeSystem`PackageScope`HeaderShape[<|{2, "\[CapitalDelta]mf"} -> 
           1, {2, "\[CapitalDelta]mv"} -> 1, {2, "nF"} -> 1, {2, "nV"} -> 
           1, {2, "gaugeCoup"} -> 1, {2, "\[CapitalDelta]m2"} -> 
           1, {2, "g2\[CapitalDelta]mv"} -> 1, {2, "R0"} -> 1, {2, "R*"} -> 
           1, {2, "\[Alpha]\[Infinity]"} -> 1, {2, "\[Alpha]eq"} -> 
           1, {2, "\[Gamma]eq"} -> 1, {2, "\[Gamma]*"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "\[CapitalDelta]mf" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`UnknownShape[False]], 0, 
               DirectedInfinity[1], {2, "\[CapitalDelta]mf"}], 
             "\[CapitalDelta]mv" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`AtomShape[60]], 1, 
               DirectedInfinity[1], {2, "\[CapitalDelta]mv"}], "nF" -> 
             TypeSystem`PackageScope`AtomShape[34], "nV" -> 
             TypeSystem`PackageScope`AtomShape[34], "gaugeCoup" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`AtomShape[60]], 1, 
               DirectedInfinity[1], {2, "gaugeCoup"}], "\[CapitalDelta]m2" -> 
             TypeSystem`PackageScope`AtomShape[60], "g2\[CapitalDelta]mv" -> 
             TypeSystem`PackageScope`AtomShape[60], "R0" -> 
             TypeSystem`PackageScope`AtomShape[60], "R*" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Alpha]\[Infinity]" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Alpha]eq" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Gamma]eq" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Gamma]*" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {2}]]}], 
       DirectedInfinity[1], 2, {}], "InitialType" -> TypeSystem`Tuple[{
        TypeSystem`Atom[Real], 
        TypeSystem`Struct[{
         "\[CapitalDelta]mf", "\[CapitalDelta]mv", "nF", "nV", "gaugeCoup", 
          "\[CapitalDelta]m2", "g2\[CapitalDelta]mv", "R0", "R*", 
          "\[Alpha]\[Infinity]", "\[Alpha]eq", "\[Gamma]eq", "\[Gamma]*"}, {
          TypeSystem`Vector[TypeSystem`UnknownType, TypeSystem`AnyLength], 
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 1], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 1], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`RowShape[{
         TypeSystem`PackageScope`AtomShape[60], 
         TypeSystem`PackageScope`HeaderShape[<|{2, "\[CapitalDelta]mf"} -> 
           1, {2, "\[CapitalDelta]mv"} -> 1, {2, "nF"} -> 1, {2, "nV"} -> 
           1, {2, "gaugeCoup"} -> 1, {2, "\[CapitalDelta]m2"} -> 
           1, {2, "g2\[CapitalDelta]mv"} -> 1, {2, "R0"} -> 1, {2, "R*"} -> 
           1, {2, "\[Alpha]\[Infinity]"} -> 1, {2, "\[Alpha]eq"} -> 
           1, {2, "\[Gamma]eq"} -> 1, {2, "\[Gamma]*"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "\[CapitalDelta]mf" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`UnknownShape[False]], 0, 
               DirectedInfinity[1], {2, "\[CapitalDelta]mf"}], 
             "\[CapitalDelta]mv" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`AtomShape[60]], 1, 
               DirectedInfinity[1], {2, "\[CapitalDelta]mv"}], "nF" -> 
             TypeSystem`PackageScope`AtomShape[34], "nV" -> 
             TypeSystem`PackageScope`AtomShape[34], "gaugeCoup" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`AtomShape[60]], 1, 
               DirectedInfinity[1], {2, "gaugeCoup"}], "\[CapitalDelta]m2" -> 
             TypeSystem`PackageScope`AtomShape[60], "g2\[CapitalDelta]mv" -> 
             TypeSystem`PackageScope`AtomShape[60], "R0" -> 
             TypeSystem`PackageScope`AtomShape[60], "R*" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Alpha]\[Infinity]" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Alpha]eq" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Gamma]eq" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Gamma]*" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {2}]]}], 
       DirectedInfinity[1], 2, {}], "Type" -> TypeSystem`Tuple[{
        TypeSystem`Atom[Real], 
        TypeSystem`Struct[{
         "\[CapitalDelta]mf", "\[CapitalDelta]mv", "nF", "nV", "gaugeCoup", 
          "\[CapitalDelta]m2", "g2\[CapitalDelta]mv", "R0", "R*", 
          "\[Alpha]\[Infinity]", "\[Alpha]eq", "\[Gamma]eq", "\[Gamma]*"}, {
          TypeSystem`Vector[TypeSystem`UnknownType, TypeSystem`AnyLength], 
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 1], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 1], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}]}], "Path" -> {}, "DisplayedRowCount" -> 
     DirectedInfinity[1], "DisplayedColumnCount" -> 2, "DataRowCount" -> 2, 
     "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000193733"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalDelta]mf", 
                  Style[
                  "\[CapitalDelta]mf", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "\[CapitalDelta]mf"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "\[CapitalDelta]mf"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalDelta]mv", 
                  Style[
                  "\[CapitalDelta]mv", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "\[CapitalDelta]mv"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "\[CapitalDelta]mv"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["nF", 
                  Style[
                  "nF", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "nF"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, "nF"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["nV", 
                  Style[
                  "nV", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "nV"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, "nV"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["gaugeCoup", 
                  Style[
                  "gaugeCoup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "gaugeCoup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "gaugeCoup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalDelta]m2", 
                  Style[
                  "\[CapitalDelta]m2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "\[CapitalDelta]m2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "\[CapitalDelta]m2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["g2\[CapitalDelta]mv", 
                  Style[
                  "g2\[CapitalDelta]mv", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "g2\[CapitalDelta]mv"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "g2\[CapitalDelta]mv"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["R0", 
                  Style[
                  "R0", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "R0"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, "R0"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["R*", 
                  Style[
                  "R*", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "R*"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, "R*"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]\[Infinity]", 
                  Style[
                  "\[Alpha]\[Infinity]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "\[Alpha]\[Infinity]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "\[Alpha]\[Infinity]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Tooltip["\:203a", 
                   Row[{13, " total"}]], 
                  Style[
                   Tooltip["\:203a", 
                    Row[{13, " total"}]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2}, 
                   3]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, 14, ContextMenu -> {
                 MenuItem["Show 1 More Column at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {2}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Columns at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {2}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Column at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {2}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Columns at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {2}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show All Columns at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", All& , {2}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["\[CapitalDelta]mf"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["\[CapitalDelta]mf"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["53.6537"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["\[CapitalDelta]mv"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["nF"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["nV"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["gaugeCoup"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2878.72"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["\[CapitalDelta]m2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.536537"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["g2\[CapitalDelta]mv"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00392634"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["R0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["24805097515."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["R*"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000157845"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["\[Alpha]\[Infinity]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{776.71875, {33.8515625, 39.1484375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{776.71875, {33.8515625, 39.1484375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[2]=",
 CellID->1067958192,ExpressionUUID->"b37834b5-1779-4635-bd35-b9f86089a27c"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"0a54af83-de26-4a79-b396-00e987a66a0a"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"334712b8-f72e-4614-a94f-b8f3e9c602d5"],
 "Applications",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "227c1304-677b-4b6c-a51f-849b07022b34"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->907578478,ExpressionUUID->"67dc429c-c49e-4601-96f8-c73986bbe680"],

Cell[TextData[{
 "Collision data enter directly the computation of GW spectra with ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ComputeGW"]], "paclet:PT2GW/ref/ComputeGW", 
    "PT2GW Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f598b2a0-c25d-4937-ba55-d5857ed919bc"],
 ":"
}], "ExampleText",
 CellID->134069501,ExpressionUUID->"f17dad81-b1ad-4ef0-9da3-4f10daf53663"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeGW", "[", 
   RowBox[{
    RowBox[{"tr", "//", "Normal"}], ",", 
    RowBox[{"\"\<CollisionData\>\"", "->", 
     RowBox[{"colData", "~", "Join", "~", 
      RowBox[{"<|", 
       RowBox[{"\"\<Potential\>\"", "->", "V"}], "|>"}]}]}]}], "]"}], "//", 
  "Dataset"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[1]:=",
 CellID->253182131,ExpressionUUID->"d80cc8d4-452b-4a96-bdf8-0dfc63a9309f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "\[Kappa]col" -> 1.9373346218434432`*^-10, "Kcol" -> 
       1.516129315921359*^-11, "\[Alpha]eff" -> 0.08490288962185742, 
       "\[Kappa]sw" -> 0.13382520007335888`, "Ksw" -> 0.006283776897900041, 
       "fp" -> 0.009172064997826914, "Treh" -> 150.1253197198512, "H*0" -> 
       0.00002453681303333016, "HR" -> 0.0007757697563309021, "f1sw" -> 
       0.00645599256189309, "f2sw" -> 0.04502090619377141, "\[CurlyEpsilon]" -> 
       0.5, "\[ScriptCapitalN]" -> 2, "\[CapitalOmega]s" -> 
       0.0031418884489500206`, "f1mhd" -> 0.0007834820346993706, "f2mhd" -> 
       0.07101591818082399, "Amhd" -> 0.00435731177561978, 
       "h2Omega" -> <|
        "Collisions" -> (
          8.477792088691226*^-33 (0.1437776946934871 #^(-0.6) + 
            40.06184695254345 #^0.6)^(-4.)& ), 
         "Soundwaves" -> (
          3.586381193946222*^-10 #^3 ((1 + 23992.41458168834 #^2)^(-1)/(1 + 
           243412.60857211848` #^4))& ), 
         "Turbulence" -> (
          3.107595151129078*^-11 #^3 (1 + 
            294.8392046582959 #^2.15)^(-1.7054263565891472`) (1 + 
            2.65389557266583*^12 #^4)^Rational[-1, 2]& ), 
         "Combined" -> (
          8.477792088691226*^-33 (0.1437776946934871 #^(-0.6) + 
             40.06184695254345 #^0.6)^(-4.) + #^3 (
            3.586381193946222*^-10 ((1 + 23992.41458168834 #^2)^(-1)/(1 + 
              243412.60857211848` #^4)) + 
            3.107595151129078*^-11 (1 + 
               294.8392046582959 #^2.15)^(-1.7054263565891472`) (1 + 
               2.65389557266583*^12 #^4)^Rational[-1, 2])& )|>, 
       "\[CapitalDelta]mf" -> {}, 
       "\[CapitalDelta]mv" -> {53.653742816713525`}, "nF" -> 1, "nV" -> 1, 
       "gaugeCoup" -> {0.1}, "\[CapitalDelta]m2" -> 2878.724118242038, 
       "g2\[CapitalDelta]mv" -> 0.5365374281671353, "R0" -> 
       0.003926335665307685, "R*" -> 2.480509751538494*^10, 
       "\[Alpha]\[Infinity]" -> 0.00015784468858441564`, "\[Alpha]eq" -> 
       0.00010385978518123959`, "\[Gamma]eq" -> 815.956289547855, "\[Gamma]*" -> 
       4.211746800722755*^12|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[56.00000000000001], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 31], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[56.00000000000001], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 31], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     31, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Kappa]col", 
                  Style[
                  "\[Kappa]col", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Kappa]col"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]col"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000193733"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]col"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Kcol", 
                  Style[
                  "Kcol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Kcol"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Kcol"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000151613"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Kcol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]eff", 
                  Style[
                  "\[Alpha]eff", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Alpha]eff"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]eff"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0849029"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]eff"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Kappa]sw", 
                  Style[
                  "\[Kappa]sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Kappa]sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.133825"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ksw", 
                  Style[
                  "Ksw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ksw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ksw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00628378"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ksw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fp", 
                  Style[
                  "fp", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["fp"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["fp"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00917206"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["fp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Treh", 
                  Style[
                  "Treh", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Treh"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Treh"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["150.125"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Treh"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["H*0", 
                  Style[
                  "H*0", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["H*0"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H*0"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000245368"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H*0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HR", 
                  Style[
                  "HR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HR"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HR"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00077577"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f1sw", 
                  Style[
                  "f1sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f1sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00645599"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f2sw", 
                  Style[
                  "f2sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f2sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0450209"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CurlyEpsilon]", 
                  Style[
                  "\[CurlyEpsilon]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CurlyEpsilon]"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CurlyEpsilon]"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CurlyEpsilon]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[ScriptCapitalN]", 
                  Style[
                  "\[ScriptCapitalN]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[ScriptCapitalN]"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[ScriptCapitalN]"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[ScriptCapitalN]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalOmega]s", 
                  Style[
                  "\[CapitalOmega]s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CapitalOmega]s"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalOmega]s"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00314189"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalOmega]s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f1mhd", 
                  Style[
                  "f1mhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f1mhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1mhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000783482"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1mhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f2mhd", 
                  Style[
                  "f2mhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f2mhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2mhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0710159"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2mhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Amhd", 
                  Style[
                  "Amhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Amhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Amhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00435731"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Amhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["h2Omega", 
                  Style[
                  "h2Omega", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["h2Omega"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h2Omega"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 4], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Collisions", "Soundwaves", "Turbulence", 
                    "Combined"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 4], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Collisions", "Soundwaves", "Turbulence", 
                    "Combined"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["h2Omega"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h2Omega"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalDelta]mf", 
                  Style[
                  "\[CapitalDelta]mf", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CapitalDelta]mf"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalDelta]mf"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalDelta]mv", 
                  Style[
                  "\[CapitalDelta]mv", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CapitalDelta]mv"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalDelta]mv"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{53.653742816713525`}, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{53.653742816713525`}, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CapitalDelta]mv"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalDelta]mv"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 31, 1], {1, 31 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 31, 1], {1, 31 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[31, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[31, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 31, 1], {1, 31 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 31, 1], {1, 31 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{217., {296.8515625, 302.1484375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{217., {296.8515625, 302.1484375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[1]=",
 CellID->27451068,ExpressionUUID->"9322158e-c09f-498e-8402-3151b3d7fa83"]
}, Open  ]],

Cell[TextData[{
 "By default, the results of ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ComputeGW"]], "paclet:PT2GW/ref/ComputeGW", 
    "PT2GW Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f22f6291-3dc5-4c06-b5af-29a42672ed22"],
 " are stored as ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GWData"]], "paclet:PT2GW/ref/GWData", "PT2GW Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a507e3be-5c7d-4580-9353-6d27fde8bde6"],
 ":"
}], "ExampleText",
 CellID->1511069187,ExpressionUUID->"12cb6224-c9f5-4ac4-afb1-13cd43d7baaf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotGW", "[", 
  RowBox[{"GWData", "[", "\"\<h2Omega\>\"", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[2]:=",
 CellID->1845604542,ExpressionUUID->"1d3ab0ef-e323-4113-a432-fdfb1ac505f4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Xd2DBw/CrrL+4OXqe0GgWlbT6RJ28kgw7bXa7poH3EgTLricbv0fyPfYru0f
MbysuIMDMsy/PGir8nFbqbJHWAVpAyeM0GNVl+ZnlFcRjfHeNjvU0xyfe9Yx
MHeT+W3vuN9kEWITusomaFtMVswQS05n7shVlZRPuFxux+089dRTIIJXr14l
G6fwRhUKWFunDzwI7dy5097enjIAGP47p0+f3r59u7L+4OWkDap3YDg6vXLP
sWS4AW63db1tkFLEW86RGy+VUecaD0Z53ngxt8Wm8emQsnsdOQHWVknAt1S5
w4Os7IShlBD6oeHM2PGha446w5fiert6ojOq9hxLQdqq43KA9FKAT/+LtCqp
qZafAU+4TXjKPPPMMyCCYlnPB+75169fLysrG7tdWzkcTlVVFdinLNlCtLWh
oaGwsJB4h4sg2tvbi4qKuroEtr1AJqurq4uLi+HRgq/D6OhoZWUlOEht+FB8
fLy2tvbQ0BD9EDwjHT16VFl/8LL9Xhwut+B6G1qfkLRCe7R14Ge8N46tDT9n
1hnsMOBuwufcnnaGn91oY6W0My0YrK2SYLKlOv5WWaI1Q/0DCHKHCy6WV7ed
CCuwCvyGugZm+NsmHifPZVX3M/m/N1D6KOutRqII0ta4uDiQMysrK4r96aef
XrZsGbHr6uoKbr6+vjY2Ng899BAkNWfOnDGStkZGRsIpqKkZHP777z9yakZG
RnD6xYsXyUYQQTDu2rWLsPDVVk9Pz+eee45ox37vvfcuX75MyeqSJUtAfL/4
4gvkM2vWrPXr1zOZt0UTIF779u17+OGHiaRefPHFqKgosoOBgcEDDzyAjt55
553r1q2bUM2nDwSnLi4ugo5CrpqamgQdVWhkVZFbu3u8EzysA37RcT5IGaS0
/ch5r5gzV2Mc+x21O/9dfmN195baiROVNVhbJcGkSpU7OABBK6VPtkv9fe7Q
+I2oqbPS+8JB+7APCW21DV35z8GI8eZi89hjQXlFle0yn7mDtXUKCNJWEBew
m5iYUOygcaB0xC5ET+C2fPlykNStW7fa29vr6uqO3dRWkLa5c+fu3LkzKCjI
wcHhiSeeAOPx48eJ08EZLMnJyeRLoHP//fdfwkLX1v3794MPqKe5uTlo0J49
e+bNmzd//vyCggJyVv/v//4PhPLDDz8E6be1tX355ZfhLHV1dcIHQmk4Csal
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
1R2tLVe+qc9ZVZO+SJzaVnP+t0XixftUzdfFDkbySnZ0dCzj4e3tHRgYGBcX
V1xcLOkfGhq6TIbs7GyB8927d2NiYubNmzd58uTx48e/8cYba9asuXDhAudA
T6EbJXdBqa2tDQsLe+edd5ycnCZMmED3KhSKzMzMe/ck1jKoVKr4+Hh6kLOz
s4ODw6xZs7Zu3Xrr1q3uVt/LyysgIODo0aNkF/j4+Pjwb6RiJCQkzJ0719HR
0d7e/q233nJ3d6cy1NeLBug7Oy9evOjr6zt16lSqCFXHxcWFmqW5ubnL4gHj
x0heZPPA5FTAJDCzVr31bQi/07gu00vg8AdfyZTuI5kPyV8/GUgIkpOTBf4v
v/yynD/JGd8zLy/vmWeeIXv//v1feOGFiRMn/vnPf2aeixcvZj7p6el0SQIq
eEpkZOSwYcMoycrKytbWlu596qmn2L12dnZXrz6wEWt5eTkJNyVZWlqSzJF4
Pfroo3Q5cuRIyl97M8pVf+zYsSUlJXyfxx57jLurpaWFtJ6MAwYMIM8pU6bQ
vxYWFmTZsmULP//29nZXV1eW9Pjjj1PxqDqDBg2iy9GjR587d0578YDxg/V0
esTMVMBIMLNWrTowja+tt85t5pL0sr6VtDI4ca/uf9q1lYTjjobGxsaKiopj
x459+OGHJByU9Omnn/L9mbZSiFongrLi3M6cOTNw4EDSFApUKYmz//jjj5Tz
mDFj2KWktoaEhJBxxIgRFM/yg7uysjIKHocOHXrq1CnOSOHt008/Tf4LFy7k
HtTW1kZCT1JL0pybm6ulGQXVb2hooMxfeeUVMr700kssRhZrq5+fH1koGCdZ
55eEfhIcPHiQs6jV6rfffpv9Hjh58iQXcVOlYmNjbWxszGw6Yt8EwqpHzEwF
jAQza9WOpoqmoj03jv7f1eixpK1tNwoFDnrR1uzbNbr86aKt4iSSA9JHpqSc
kWkrv19XTEdHx7PPPktupDWSDpzeibX1p59+Ik0fPHiw3CMonOQrmouLC+Xw
/vvviz2joqIoiSRMqVTKFVWy+jdv3iQL2QsKCiR9xo0bR5bz58/LZcuIjo4m
N4rZJXun6SlFRUXacwDGD7RVjxiDClAZcnJyersU+sQYWtUQqFpq71w60KlW
CezGr63EunXrKHXmzJmcRRdt3b9/P/k4ODh0WQuxti5ZsoQs3t7eXd5LXLt2
jYSYfgDU1NRIOtjb21NuCQkJcjnIVf/VV18le3x8vKQPi5R//fVX7cWztbUl
N3G/OjAnoK16xBhUAHtHmDomoa1lZWWUOnTo0Pb2dmbRRVsXLlxIPps3b9bi
wxBrq7W1NVl0HIikt4Ccp0+fLuewadMm/vCuGLnqswHcw4cPS/pMmzaNLB4e
Hloi4oqKCvIZNmyYSiX8WQXMCYy36hFjUAFoq+mix/FWQ2srMXz4cHK4fPky
u2Ta+s9//vMjEdwUWScnJ/JJS0vrshYCbW1paWFTifhDt1rw8fEh59WrV8s5
pKamkoOzs7Ocg2T1MzIyLCws+vfvzyJTsU9eXh6lknHUqFEuLi5hYWFnzpzh
Ty3W5dHAPICw6hFjUAFoq6ljKtrKAsnCwt/Gi7XME6ZIjfmMHTuWLs+ePdtl
LQTaWlVVRZeDBg0SuO3bt28hj5iYGGZ3dXUl/88++0wuf5I8NulXzoFVf/Dg
wUEa/P3958yZwyZxLV++nO8jaKLMzMzJkyfzqz969OiIiAi1Ws2VWXtMDcwD
aKseMQYVgLaaOqairRSakQO33JVpKwVut0Rw82BZh6ou8wEE2trQ0NBPs2aH
UyjGihUr+CpGMTKze3p60mVAQIBc/llZWf00i4nkHCTX4Dz33HOhoaFcX66W
JqqsrNy/f79CoWA/J/gjxUlJSXT5+uuvd9kIwKRBn7AeMYaWND9tNYZW7RlM
qE+4qamJdX7evHmTWXQZb50xYwb5xMbGdlkLgbaSOg8ZMoQsghWsHGyWFKet
FLH206y+kcufItx+D87FEsCqP3z48F80lJeXi+f0dvnzo1Oz3IbkuJ9mxev1
6/e3CikoKKBLbrURMFf0+MVloO9AQ2RrQkXtbrY6aqsxFLUX8zTmbE1CWw8c
OECpf/vb3ziLLtoaFBREPgsWLOiyFuK5TGxPBrmFnwJtpfCZLq2trSU3ayLm
z59PDlQeuQLoopu6+DBefPFF8kxNTe3U7BoxdOhQ/lA1MEvcAABGxh95o3tA
W1taWuzs7CiVIjLOqIu2XrlyxdLScvDgwWVlZZIO3PRasbbGxcWxXlzJKbgC
bSVJff7558lCdrEziRqVgQJJbiBYjH61lYpNnsePH2eXbDh4yZIlcv5aphkD
AADoeQytrd99952zszMlTZw4sbW1lbProq3EqlWryO3vf/+7uHe3sLCQ66QV
a2tHRwd7xLx580jcBfeyCUKcthKHDh3qp9lOUDBeX19f7+joSEkKhUJLOR9O
W3fv3t3YKDyIIT8/f4CG2tpaZqmsrHziiSfo3rCwMMEIMuW5YcOGL7/8Ustz
AQAA9DD61VYrKys2BfeDDz6YPXv2mDFj2Myc6dOn37hxg+/PhI/sc0Xs2rWL
cyOJJAt5DhkyhLLdsWMH6cjmzZvffPNNCwsLCjaZm+Seh1VVVSwAfPLJJz09
PSlbupdi5/nz57PR2I0bN/L9g4ODWRUWL14cGxsbHx/v6+vLpmBRXdra2rQ0
48Npq42NDZXkvffei4iISExMJKl1c3NjZRMsCMrNzR0xYgTZ7e3tAwICqHhU
HaoU2x557969Wp4LAACgh9GvtnIMHDhw5MiRTk5OHh4eeXl5Yn8ta3D44WSn
ZnoPaSKFrnyfRx555F//+hfXSSu3Vz9FrP/+97//+te/Cso2Y8YMyWWzZJw0
aRLf2dramoSvy30bHk5bt2/f/tprr5GaC564bds2QXzaqekhX7RoEVWc7+zg
4EA6K3YGAADQi+hLW3uA6urqM2fOZGZmFhUVCTZY6BJS4fz8/KysrIsXL2qP
QNmDyDknJ6e0tPQPlFdXWltbL126lJ2dTcEpf4tjSZRKJVWfKkIllNuhEQAA
QO+ir3NwAAAAAMDQ1/mtAAAAAAAAAAAAAAD0Bdrb25OTk4OCggICAr766qum
pibt/vn5+Z9//rm/v//OnTuvXLkiSC0tLY2MjKTU0NDQ7777jp9UV1dXUFCQ
mJgYFRXFP2C6L9NlmzQ0NMTGxm7cuDE4ODgtLQ1HdAEAgPGjVqvDw8O9vLyO
Hj2akZGxZs2a9evXaznTitzc3Nz27t2bk5MTEhKybNky/nL4kpISd3d3ypBS
Y2JiyJO/RTnZyeLr60s+ctu49TW0twn9zvHx8aH/kZMnTx4+fJhae/fu3b1R
TAAAAN3g/Pnz9N3OnZlVXV29dOlSElBJZ/qq9/Dw4HZUUyqVa9euDQsL4xwC
AwMp/uW2M92zZ8+KFSs4pa6srLx9+3an5iAPaCtDe5skJCSQnnI7w+fm5tJ/
Vs8sqQAAAPDQREdHr1y5kr9qOzQ0VO6Yqry8PPpuZ0ckM1JSUkiLmTrU1NRQ
alZWFpd66dIlvnBzQFvFSLbJ6tWrd+7cyV3SjxmSWsndYgEAABgPJKPh4eF8
S2Jioru7u+SqdvpW//jjj/lCfPHiRVLPkpKSTs3OqIKoiiJWshw5ckSQD7RV
jLhNmpubqfWOHTvGNwYFBW3ZsqVHSwYAAKCbeHt7C4bw0tLS6CtdckYTeXKH
HTPKysrImc1ZysnJoc/V1dV8B9Lir776SpAPtFWMuE2oJQUD1sTWrVs3bNjQ
oyUDAADQTRQKxZ49e/iW48eP01e6+ExkIioqysfHh28pLy8n54KCAvqclZVF
nwWbmS9btiwuLk6QD7RVjLhNqqqqqD0F29hu27Zt/fr1PVoyAAAA3WTt2rWR
kZF8y+HDh+krXXK30tjY2OXLl/MtxcXF5Pzf//6XPp89e5Y+81fldHR0kOXg
wYOCfKCtYsRt0tDQQK2XkZHBN4aEhAQHB/doyQAAAHQTioP8/f35ll27dq1a
tUrSOT09XdBdnJ2dzcWqly9fps/ffvstl8p6NXNzcwX5QFvFiNtErVZT1C/o
Uff29hb0MwAAADA2vvnmm6VLl3Idue3t7Z988klMTIykM8Wkgl5KkmZfX1/2
WaVS0b3R0dFcKtPiuro6QT7QVjGSbbJ9+3Y/Pz9uTRP79XL69OmeLhwAAIDu
0NLSsnLlys2bN5O83rp1i2Kijz/++Nq1ayy1o6PD3d2df2ZxeHg4hU6XLl2i
G0mXBZNtjh07RkpN4kupP/zwg5eXF3+iVFVVVaEGT0/P0NBQ9pk8e6yyRoj2
NiktLaX2pPZvamoiz08//ZSkVqlU9m6ZAQAAdEl5efnatWvdNCgUCv5yVPoa
J+OXX37JWehLniSAOZMKHzp0iJ8VRVj79u0jOWYOFHbxt3hKTk52EyHeNbFP
0WWb5Ofn008UZt+4cSMpbC+WFgAAgO6o1Wr60q6srNTxsOb6+vqKigq5kPPO
nTuUyu0mBP4g7e3tV69evX79On9lMQAAAAAAAAAAAPoaHR0dyx7E29s7IiKi
uLhY4HnkyBG+2/Lly/39/ZOSkuTOuVCpVPHx8fPmzXN2dnZwcJg1a9bWrVsl
V5FrL5KXl1dAQMDRo0f5XUzMR7D2/N69ewkJCXPnznV0dLS3t3/rrbfc3d2p
DPX19eKnXLx40dfXd+rUqRMmTHBycnJxcYmJiWlubu66yQAAAJgpKUREYDf+
UlIk8yFl7CcDiRe/T37NmjWSbs8884x4A+3y8vLx48dTqqWlJckcidejjz5K
lyNHjkxPT9deNbkijR07lu01yvk89thj3F0tLS1vvPEGGQcMGECeU6ZMoX8t
LCzIItgzs7293dXVlSU9/vjjVDxbW9tBgwbR5ejRo8+dO6f7/wIAAABzgmlr
54UMXf661FYSqTu/c/Xq1bi4uBEjRpCdP2GeaWtISAhzu3nzJknqu+++S8YX
XniBr8K1tbVPP/002RcuXMitR2tra6O4laTWyspKvABcS5EaGhpOnTr1yiuv
kPGll15i67PE2urn50eWyZMnk6zzSxIZGcnfy4XK+fbbb5OnnZ3dyZMnudVe
FLHGxsba2NhgrRwAAPRZ9K6tAnt4eDjZ33//fc7CtJX0ke+mVCr/9Kc/kZ1/
YoWLi4vgXo6oqChKIgnTsq5Kskgk5WQhO9tuVOwzbtw4spw/f14uW0Z0dDT7
MSDZO01PKSoq0p4DAAAAc8XQ2pqQkED2Dz74gLNIaitha2tL9rKyMnZ57dq1
AQMGDBw4sKamRvKJ9vb25E/5y1VNrkivvvoq2ePj4yV9WKTMPw5SElba5ORk
7W4AAAD6IAbVVpVKNXv2bLLzN0KR1NbTp0+TklpbW3MTjf7zn/+Q2/Tp0+VK
vmnTJnJYvHixnIOctrIB3MOHD0v6TJs2jSweHh5aIuKKigryGTZsGFVQzgcA
AECfRb/aSmHmit/58MMPn332WUtLy48++oivU0xbKXhkbqRiM2fOJDcbG5v8
/HzOzcfHh9xWr14tV/LU1FRycHZ2lnOQ1NaMjAwLC4v+/fuzyFTsk5eXR6lk
HDVqlIuLS1hY2JkzZwSr17t8NAAAgL6MfrVVjIODg+A4J8l5wiTKnp6e/GMW
XV1dyf7ZZ5/JlZwkj036lXNgRRo8eHCQBn9//zlz5lB0TEbuUCpJ/c3MzJw8
eTK/eKNHj46IiODmWe3bt097TA0AAKAvo/c+4bu/U1dXl52d/Y9//IPsn3/+
OefJtHXLli3MraWlpaysjBysrKwodOXmA5PUkltAQIBcybOysshhwoQJcg6S
cv/cc8+FhoZyfbly/cZEZWXl/v37FQoFyTe719vbmyUlJSXR5euvv95V6wIA
AOiLGHouE2klRY5DhgxpaGhgFrm5TKtWreJ3AlPEylbfyJU8JiaGHGbOnCnn
wIo0fPjwXzSUl5eL5/Rq0VYOCldJjvtpVrxev36dLAUFBXQ5ZswYLXcBAADo
sxhaWwk7OztK4k59ktPWgwcP8oPBvLw8urS2tuaWjgqYP38+OQQFBclVTRfd
1MWH8eKLL5Jnampqp2bXiKFDh9Ll5cuXu7wRAABAX6MHtPXJJ5+kpKysLHYp
p607duxgc5zYJUnq888/T5b9+/eL8yRRo3CYAsmKigq5qulXWydMmECex48f
Z5dsOHjJkiVy/jjQEAAA+iw9s3fEsGHDbt++zSyS2nrjxg02rLlhwwbOeOjQ
oX6a7QS///57vnN9fb2joyMlKRQKLVV7OG3dvXt3Y2OjwC0/P3+AhtraWmap
rKx84okn6N6wsDDBKUuUJ9WCf74kAACAPoV+tdXKymrh77z77rtsgwULCwvx
+lYnJyfmtmDBgmnTprEuVjs7O4GuBQcHs2wXL14cGxsbHx/v6+s7atQoMs6e
PbutrU1L1R5OW21sbIYMGfLee+9FREQkJiZSyd3c3MjST7QgKDc3l+3oaG9v
HxAQQMXbtWuXp6fnU0891e/BbR4BAKYIfcPQz35dTgYBQIDh1uBYWlr+5S9/
IYXNy8vje4rX4FBUO3HixMDAwDt37ohzTktLmzRpEt/f2tqahK/LfRseTlu3
b9/+2muvkZoLnrht2zbxKcBXrlxZtGjRI488wnd2cHAgncWRwQCYLvT+7tmz
x03Djh075HxOnDghPo09IyMjLi5OYCwtLY2KipLbZQ6YH/rSVkNTXV2dn5+f
k5PD33DYcLS2tl66dCk7O5uCU/6m/ZIolcqioqKsrCwqId4dAMyA8+fPk6qW
lJTQ2y33M76iokKhUIh/RZOGrlq1SmAsKCigDDH7se+Q0n16u8gAAGBY0tLS
vLy8tPukpqZSbCu2Q1sBAAAAAbt37/bz83N3dw/V8Msvv0i6hYSEnD59Wmzv
UluLi4tDReDEZwAAAGbMhQsXdu7c6enpWaDh5s2bYp/W1lYSX/Gagk4dtLW2
tvYUj+joaEri76YOAAAAmB8pKSkrVqzQ4lBYWBgYGCiZRNq6dOnS1Q/yySef
SPYJV1VV0YMoUsbsRwAAAOZNl9oaFxeXlJQkmUTa6uXldfJBvvjiC7G2NjU1
+fn5hYSECE7aAgAAAMyPLrV1zZo1P//8s2SSjnOZlErlpk2b1q1bJ7n2EAAA
ADAztGtrdXX18uXL5YJNXbRVrVbv3LlToVDwD9YEAAAAzBjt2nrixInIyEi5
VF209euvv/bw8OiZ1foAAACAMaBdWyMiIrKzs+VSu9RW9jk5Ofk6j+bmZj2V
HQAAADBGtGirUqlctmwZd2yHmC61NTEx0U1Eenq6HssPAAAAmBAUYJ49e7a3
SwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgvPw/MON6BQ==
    "], {{0, 164.4}, {376.8, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{376.8, 164.4},
  PlotRange->{{0, 376.8}, {0, 164.4}}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1546873529,ExpressionUUID->"d0445564-cc3f-4d2c-9bf2-b3728789cecb"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"70241781-d984-414d-aabb-708fab11c458"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"ed06d2c5-782e-4529-bae4-60fda0ba9448"],
 "Properties & Relations",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "c7957a1b-4f39-479f-9a56-13118e23a786"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1956339133,ExpressionUUID->"f1f8bf86-6c46-4e04-80a0-af3f5ae7a42a"],

Cell["\<\
The efficiency coefficient can be provided by the user with the key \
\"\[Kappa]col\":\
\>", "ExampleText",
 CellID->33033217,ExpressionUUID->"b1811b00-641a-449c-95c2-9a8e55682726"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"kappaCollision", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<\[Kappa]col\>\"", "->", "0.1"}], "}"}], "]"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[1]:=",
 CellID->703952882,ExpressionUUID->"2cd2710c-9467-4c6c-a26d-9c2dd6775811"],

Cell[BoxData["0.1`"], "Output",
 CellLabel->"Out[1]=",
 CellID->1850415809,ExpressionUUID->"3a3c0a68-6863-479e-81a6-2baac1ba4bd5"]
}, Open  ]],

Cell[TextData[{
 "This option can be passed directly to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ComputeGW"]], "paclet:PT2GW/ref/ComputeGW", 
    "PT2GW Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e57afa3e-6f22-40dd-9c79-1c96f29041e2"],
 ":"
}], "ExampleText",
 CellID->821972539,ExpressionUUID->"eb3abc61-950c-4a0a-8ba2-e8e3dbce1f3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeGW", "[", 
   RowBox[{
    RowBox[{"tr", "//", "Normal"}], ",", 
    RowBox[{"\"\<CollisionData\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Kappa]col\>\"", "->", "0.1"}], "}"}]}]}], "]"}], "//", 
  "Dataset"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[2]:=",
 CellID->1694289087,ExpressionUUID->"22bffa62-5ff5-475c-a914-cc4a1c394f67"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "\[Kappa]col" -> 0.1, "Kcol" -> 0.007825851553092608, "\[Alpha]eff" -> 
       0.07641260067447536, "\[Kappa]sw" -> 0.12182339486150269`, "Ksw" -> 
       0.005188814634013793, "fp" -> 0.009172064997826914, "Treh" -> 
       150.1253197198512, "H*0" -> 0.00002453681303333016, "HR" -> 
       0.0007757697563309021, "f1sw" -> 0.00645599256189309, "f2sw" -> 
       0.04502090619377141, "\[CurlyEpsilon]" -> 0.5, "\[ScriptCapitalN]" -> 
       2, "\[CapitalOmega]s" -> 0.0025944073170068964`, "f1mhd" -> 
       0.0007119553239205281, "f2mhd" -> 0.07101591818082399, "Amhd" -> 
       0.00435731177561978, 
       "h2Omega" -> <|
        "Collisions" -> (
          2.258777651357039*^-15 (0.1437776946934871 #^(-0.6) + 
            40.06184695254345 #^0.6)^(-4.)& ), 
         "Soundwaves" -> (
          2.691085814270808*^-10 #^3 ((1 + 23992.41458168834 #^2)^(-1)/(1 + 
           243412.60857211848` #^4))& ), 
         "Turbulence" -> (
          2.5660896974490447`*^-11 #^3 (1 + 
            294.8392046582959 #^2.15)^(-1.7054263565891472`) (1 + 
            3.8921451861480913`*^12 #^4)^Rational[-1, 2]& ), 
         "Combined" -> (
          2.258777651357039*^-15 (0.1437776946934871 #^(-0.6) + 
             40.06184695254345 #^0.6)^(-4.) + #^3 (
            2.691085814270808*^-10 ((1 + 23992.41458168834 #^2)^(-1)/(1 + 
              243412.60857211848` #^4)) + 
            2.5660896974490447`*^-11 (1 + 
               294.8392046582959 #^2.15)^(-1.7054263565891472`) (1 + 
               3.8921451861480913`*^12 #^4)^Rational[-1, 2])& )|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[56.00000000000001], 
         TypeSystem`PackageScope`UnknownShape[False]]], 18, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 18], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[56.00000000000001], 
         TypeSystem`PackageScope`UnknownShape[False]]], 18, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 18], "Path" -> {}, 
     "DisplayedRowCount" -> 18, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     18, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Kappa]col", 
                  Style[
                  "\[Kappa]col", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Kappa]col"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]col"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]col"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Kcol", 
                  Style[
                  "Kcol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Kcol"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Kcol"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00782585"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Kcol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]eff", 
                  Style[
                  "\[Alpha]eff", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Alpha]eff"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]eff"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0764126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]eff"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Kappa]sw", 
                  Style[
                  "\[Kappa]sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Kappa]sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.121823"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ksw", 
                  Style[
                  "Ksw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ksw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ksw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00518881"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ksw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fp", 
                  Style[
                  "fp", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["fp"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["fp"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00917206"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["fp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Treh", 
                  Style[
                  "Treh", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Treh"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Treh"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["150.125"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Treh"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["H*0", 
                  Style[
                  "H*0", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["H*0"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H*0"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000245368"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H*0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HR", 
                  Style[
                  "HR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HR"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HR"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00077577"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f1sw", 
                  Style[
                  "f1sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f1sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00645599"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f2sw", 
                  Style[
                  "f2sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f2sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0450209"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CurlyEpsilon]", 
                  Style[
                  "\[CurlyEpsilon]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CurlyEpsilon]"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CurlyEpsilon]"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CurlyEpsilon]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[ScriptCapitalN]", 
                  Style[
                  "\[ScriptCapitalN]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[ScriptCapitalN]"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[ScriptCapitalN]"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[ScriptCapitalN]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalOmega]s", 
                  Style[
                  "\[CapitalOmega]s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CapitalOmega]s"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalOmega]s"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00259441"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalOmega]s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f1mhd", 
                  Style[
                  "f1mhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f1mhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1mhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000711955"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1mhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f2mhd", 
                  Style[
                  "f2mhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f2mhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2mhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0710159"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2mhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Amhd", 
                  Style[
                  "Amhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Amhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Amhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00435731"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Amhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["h2Omega", 
                  Style[
                  "h2Omega", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["h2Omega"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h2Omega"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 4], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Collisions", "Soundwaves", "Turbulence", 
                    "Combined"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 4], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"Collisions", "Soundwaves", "Turbulence", 
                    "Combined"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["h2Omega"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h2Omega"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{157., {257.8515625, 263.1484375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{157., {257.8515625, 263.1484375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[2]=",
 CellID->1479101137,ExpressionUUID->"23cebcc7-cbfd-42de-9c02-765a67c2c2e5"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["ComputeGW"]], "paclet:PT2GW/ref/ComputeGW", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"7dffedc1-cdc0-4066-b9f8-1872f38045e5",ExpressionUUID->
         "531aa277-1741-4932-a66b-f050e861afdd"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["KCollision"]], "paclet:PT2GW/ref/KCollision", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "87244b4d-6953-4ee2-9943-d6e2cf2e0188"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["KSoundwaves"]], "paclet:PT2GW/ref/KSoundwaves", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"5c539e25-de36-4816-8ed3-02a39adaf3c6",ExpressionUUID->
         "243d4341-a358-4b49-b2c3-60174359e9e5"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["kappaSoundwaves"]], "paclet:PT2GW/ref/KSoundwaves", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"5c539e25-de36-4816-8ed3-02a39adaf3c6",ExpressionUUID->
         "f63b17ad-0434-4ee7-aff1-aaa8ae1e2e73"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["HRFun"]], "paclet:PT2GW/ref/HRFun", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "a0f0e786-4a36-4a8e-83a2-a6568697f5b0"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["nBFun"]], "paclet:PT2GW/ref/nBFun"},
          "RefLink",
          BaseStyle->{"InlineFormula", "TI"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "43f58310-e2ef-4357-8886-4a4ccb683dd3"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["HRFromBetaH"]], "paclet:PT2GW/ref/HRFromBetaH", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "1af8c11c-a8ed-4226-98a1-8644c74f2d07"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["BetaHFromHR"]], "paclet:PT2GW/ref/BetaHFromHR", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"e339fdc4-fe28-41ab-8f83-85262d0df088",ExpressionUUID->
         "0fd5046c-1b7b-4d51-9c8e-f78261347717"]
       }], "SeeAlso",ExpressionUUID->"7b23be87-1b68-4b78-be97-8df1e4e9c268"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"116fc912-5a4c-4290-aa17-\
ccad264cc980"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedTechNote.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Tech", " ", "Notes"}], "TechNotesSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Coupled Fluid-Field Model"]], 
           "paclet:PT2GW/tutorial/CoupledFluid-FieldModel"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "0e6d57f4-139d-407e-8dbf-f363734f7374"]}]}
     }]}
  }]], "TechNotesSection",ExpressionUUID->"dd5b7ee4-5d45-43ef-8934-\
1a18a69829be"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Gravitational Wave Template"]], 
           "paclet:PT2GW/guide/GravitationalWaveTemplate"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "5a124a08-1c17-4773-94cf-82cc45ebbad1"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["PT2GWFinder"]], "paclet:PT2GW/guide/PT2GWFinder"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "594ea61a-f845-427a-a1dc-b2b90bfca901"]}]}
     }]}
  }]], "MoreAboutSection",ExpressionUUID->"d9207b7c-303e-4216-bd33-\
614c433c070b"],

Cell[" ", "FooterCell",ExpressionUUID->"385564dc-00a6-4ca3-9638-19285960eed8"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830.25},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"kappaCollision",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {
     "0" -> Open, "1" -> Closed, "2" -> Closed, "3" -> Closed}, 
    "AllOptsTable" -> Closed, "NotesSection" -> Closed, 
    "ExampleSubsection" -> {"0" -> Closed}}, "NewStyles" -> True, 
  "CitationPopupData" -> $Failed, "ShowCitation" -> False, "HasOptions" -> 
  True, "RootCaptions" -> "", "HeaderCoreAreaLink" -> {}, 
  "Metadata" -> {
   "built" -> "{2025, 5, 8, 12, 42, 39.540143}", 
    "history" -> {"XX", "", "", ""}, "context" -> "PT2GW`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "P T2G W Symbol", "language" -> "en", "paclet" -> "PT2GW", 
    "status" -> "None", "summary" -> 
    "kappaCollision[\\[Gamma]*, \\[Gamma]eq, \\[Alpha], \
\\[Alpha]\\[Infinity]] gives the efficiency coefficient for bubble wall \
collisions \\[Kappa]col. kappaCollision[assoc] computes \\[Kappa]col by \
extracting the relevant quantities from an Association, which must include \
\"MasFunctions\", \"GaugeCouplings\", \"T0\", \"T\", \"Potential\", \
\"Phases\", \"WallVelocity\", \"ActionFunction\", \"\\[Alpha]\" and \
\"\\[Beta]/H\". kappaCollision[None] returns Indeterminate (for \
compatibility).", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "kappaCollision", "titlemodifier" -> "", "metadescription" -> "", 
    "windowtitle" -> "kappaCollision", "type" -> "Symbol", "uri" -> 
    "PT2GW/ref/kappaCollision"}},
CellContext->"Global`",
FrontEndVersion->"14.0 for Linux x86 (64-bit) (December 12, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "14.0 for Linux x86 (64-bit) (December 12, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"a0a6c162-427f-45b2-8176-415ea6fec846"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[19025, 500, 1420, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"1bb624dc-e50f-4c76-80f5-8d4034da0128",
   CellTags->"PrimaryExamplesSection",
   CellID->297545235]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 317607, 6229}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[586, 21, 6906, 168, 57, "AnchorBarGrid",ExpressionUUID->"236ef254-541e-48e6-9677-a1d96c9f2a20",
 CellID->1],
Cell[7495, 191, 88, 0, 23, "ContextNameCell",ExpressionUUID->"5c03a01d-19be-4f54-9639-db4f739c3cf7"],
Cell[CellGroupData[{
Cell[7608, 195, 557, 14, 59, "ObjectNameGrid",ExpressionUUID->"a44e4b85-cf28-41fe-947a-e4719c01b5d2"],
Cell[8168, 211, 2190, 49, 282, "Usage",ExpressionUUID->"be3a5c3b-1a87-48c8-9665-23f64c0f9eb0",
 CellID->781989143]
}, Open  ]],
Cell[CellGroupData[{
Cell[10395, 265, 1919, 48, 37, "NotesSection",ExpressionUUID->"20a3fc37-8657-4d7e-80c0-563dfcdee4af",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->555474409],
Cell[12317, 315, 3185, 89, 70, "Notes",ExpressionUUID->"c23af477-b2fe-4e56-bcb4-6114930bf9dd",
 CellID->1403202643],
Cell[15505, 406, 1677, 46, 70, "Notes",ExpressionUUID->"cf02e0a8-7fa3-44d4-9d9b-89b58a1107ef",
 CellID->658145445],
Cell[17185, 454, 396, 9, 70, "Notes",ExpressionUUID->"06cab8d1-fa4e-4b3f-84e1-ac398606cf4f",
 CellID->380921360],
Cell[17584, 465, 128, 1, 70, "Notes",ExpressionUUID->"21d257e4-4ef8-4b40-b585-1ee4bbd2bfc8",
 CellID->395932024],
Cell[17715, 468, 1183, 26, 70, "3ColumnTableMod",ExpressionUUID->"8e732928-050d-4f3d-94cd-a0bf68320fd5",
 CellID->376556349]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[19025, 500, 1420, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"1bb624dc-e50f-4c76-80f5-8d4034da0128",
 CellTags->"PrimaryExamplesSection",
 CellID->297545235],
Cell[20448, 539, 195, 3, 27, "Input",ExpressionUUID->"8d1feff4-75b6-435d-b864-9a5b6bea8104",
 CellID->1370366051],
Cell[CellGroupData[{
Cell[20668, 546, 1399, 36, 30, "ExampleSection",ExpressionUUID->"21b6009a-8a59-45b5-b8f1-303016df15f9",
 CellID->1870672253],
Cell[22070, 584, 150, 1, 39, "ExampleText",ExpressionUUID->"9827afd4-8c3e-4c9b-aa70-d1aba24b2003",
 CellID->100999087],
Cell[CellGroupData[{
Cell[22245, 589, 557, 14, 93, "Input",ExpressionUUID->"f9199ec9-ba78-4c52-a93f-21a2ba61d7b8",
 CellID->154102048],
Cell[22805, 605, 244, 4, 23, "Print",ExpressionUUID->"6599439f-f925-40a5-acb4-5bcfc1b4152d",
 CellID->231799791],
Cell[23052, 611, 642, 17, 38, "Output",ExpressionUUID->"31e80717-831f-4bcf-921c-2caedec06f74",
 CellID->1672954650],
Cell[23697, 630, 26100, 482, 70, "Output",ExpressionUUID->"5258bf85-b53e-4445-9c8d-3e4b64083d26",
 CellID->190851328]
}, Open  ]],
Cell[49812, 1115, 146, 1, 39, "ExampleText",ExpressionUUID->"a3bb1c35-fd5b-4629-a370-337363964bb4",
 CellID->963662196],
Cell[49961, 1118, 1591, 39, 70, "Input",ExpressionUUID->"47737365-0c08-4d5a-a3eb-103e19ec8ac9",
 CellID->181115339],
Cell[51555, 1159, 236, 4, 70, "ExampleText",ExpressionUUID->"665bc70c-8ef4-470e-a5d6-33a2e50d2b66",
 CellID->1362934913],
Cell[51794, 1165, 649, 17, 70, "Input",ExpressionUUID->"128b4c20-c6fe-4014-9924-da5a01dca73f",
 CellID->1647485944],
Cell[CellGroupData[{
Cell[52468, 1186, 275, 6, 70, "Input",ExpressionUUID->"05f0bb6d-d10f-42a4-be3b-7a90d85434f9",
 CellID->1069843478],
Cell[52746, 1194, 150, 2, 36, "Output",ExpressionUUID->"70c6be75-33ff-4e84-997e-2b8f77a70cc6",
 CellID->1042329354]
}, Open  ]],
Cell[52911, 1199, 123, 1, 70, "ExampleText",ExpressionUUID->"1a326a41-3675-4a3f-8044-4a1f793e115f",
 CellID->1711252463],
Cell[CellGroupData[{
Cell[53059, 1204, 231, 5, 70, "Input",ExpressionUUID->"88226aa0-3108-4bbe-be31-99cc440ce637",
 CellID->1505486269],
Cell[53293, 1211, 328, 5, 70, "Print",ExpressionUUID->"cc0412dd-fc0d-46e9-bb4e-21bef9650895",
 CellID->885204619],
Cell[53624, 1218, 138, 2, 36, "Output",ExpressionUUID->"39af1e64-173c-4b3a-89e5-be2905a43171",
 CellID->701974750]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[53911, 1228, 1414, 37, 70, "ExampleSection",ExpressionUUID->"689daf7d-c59e-4ecd-b476-8f13ad9b7367",
 CellID->357878193],
Cell[CellGroupData[{
Cell[55350, 1269, 1423, 37, 70, "ExampleSubsection",ExpressionUUID->"fd95d63f-bea2-40da-8cd1-e1c80bbbfc5c",
 CellID->1709655337],
Cell[56776, 1308, 243, 4, 70, "ExampleText",ExpressionUUID->"436b31ad-c705-4e5c-86ea-91252dbe235a",
 CellID->1346979293],
Cell[CellGroupData[{
Cell[57044, 1316, 306, 7, 70, "Input",ExpressionUUID->"8f77f9bd-3c27-412e-84d1-7cbbe7295fa9",
 CellID->1174856114],
Cell[57353, 1325, 1201, 25, 55, "Output",ExpressionUUID->"23751ac6-6dad-4cf9-8677-6048c30cc854",
 CellID->1599743110]
}, Open  ]],
Cell[58569, 1353, 162, 2, 70, "ExampleText",ExpressionUUID->"3bdd5d01-cd4d-4c82-a2fa-4b31b10bcb35",
 CellID->1059155441],
Cell[CellGroupData[{
Cell[58756, 1359, 410, 11, 70, "Input",ExpressionUUID->"516d08c8-4789-4c24-8c4f-d9f5e8419bc3",
 CellID->402411857],
Cell[59169, 1372, 55093, 1005, 70, "Output",ExpressionUUID->"b37834b5-1779-4635-bd35-b9f86089a27c",
 CellID->1067958192]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, Closed]]]],
Cell[CellGroupData[{
Cell[114526, 2388, 1419, 37, 70, "ExampleSection",ExpressionUUID->"67dc429c-c49e-4601-96f8-c73986bbe680",
 CellID->907578478],
Cell[115948, 2427, 474, 13, 70, "ExampleText",ExpressionUUID->"f17dad81-b1ad-4ef0-9da3-4f10daf53663",
 CellID->134069501],
Cell[CellGroupData[{
Cell[116447, 2444, 444, 12, 70, "Input",ExpressionUUID->"d80cc8d4-452b-4a96-bdf8-0dfc63a9309f",
 CellID->253182131],
Cell[116894, 2458, 83862, 1558, 70, "Output",ExpressionUUID->"9322158e-c09f-498e-8402-3151b3d7fa83",
 CellID->27451068]
}, Open  ]],
Cell[200771, 4019, 736, 22, 70, "ExampleText",ExpressionUUID->"12cb6224-c9f5-4ac4-afb1-13cd43d7baaf",
 CellID->1511069187],
Cell[CellGroupData[{
Cell[201532, 4045, 235, 5, 70, "Input",ExpressionUUID->"1d3ab0ef-e323-4113-a432-fdfb1ac505f4",
 CellID->1845604542],
Cell[201770, 4052, 40911, 675, 185, "Output",ExpressionUUID->"d0445564-cc3f-4d2c-9bf2-b3728789cecb",
 CellID->1546873529]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"}, Closed]]]],
Cell[CellGroupData[{
Cell[242830, 4735, 1430, 37, 70, "ExampleSection",ExpressionUUID->"f1f8bf86-6c46-4e04-80a0-af3f5ae7a42a",
 CellID->1956339133],
Cell[244263, 4774, 191, 4, 70, "ExampleText",ExpressionUUID->"b1811b00-641a-449c-95c2-9a8e55682726",
 CellID->33033217],
Cell[CellGroupData[{
Cell[244479, 4782, 263, 6, 70, "Input",ExpressionUUID->"2cd2710c-9467-4c6c-a26d-9c2dd6775811",
 CellID->703952882],
Cell[244745, 4790, 130, 2, 36, "Output",ExpressionUUID->"3a3c0a68-6863-479e-81a6-2baac1ba4bd5",
 CellID->1850415809]
}, Open  ]],
Cell[244890, 4795, 447, 13, 70, "ExampleText",ExpressionUUID->"eb3abc61-950c-4a0a-8ba2-e8e3dbce1f3f",
 CellID->821972539],
Cell[CellGroupData[{
Cell[245362, 4812, 400, 11, 70, "Input",ExpressionUUID->"22bffa62-5ff5-475c-a914-cc4a1c394f67",
 CellID->1694289087],
Cell[245765, 4825, 62676, 1165, 70, "Output",ExpressionUUID->"23cebcc7-cbfd-42de-9c02-765a67c2c2e5",
 CellID->1479101137]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "3"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[308683, 5999, 4607, 123, 70, "SeeAlsoSection",ExpressionUUID->"116fc912-5a4c-4290-aa17-ccad264cc980"],
Cell[313293, 6124, 751, 20, 70, "TechNotesSection",ExpressionUUID->"dd5b7ee4-5d45-43ef-8934-1a18a69829be"],
Cell[314047, 6146, 1069, 27, 70, "MoreAboutSection",ExpressionUUID->"d9207b7c-303e-4216-bd33-614c433c070b"],
Cell[315119, 6175, 78, 0, 70, "FooterCell",ExpressionUUID->"385564dc-00a6-4ca3-9638-19285960eed8"]
}
]
*)

(* End of internal cache information *)

