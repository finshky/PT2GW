(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    472923,       9162]
NotebookOptionsPosition[    458041,       8871]
NotebookOutlinePosition[    460641,       8933]
CellTagsIndexPosition[    460554,       8928]
WindowTitle->ComputeGW
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["P T2G W SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "23b46934-bb4e-40d2-8d6b-e7ae1829b6da"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "e747f74a-a813-43a0-acf9-4821a9a17568"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "ef0ad684-468b-41b2-be11-594021e40c33"]
         }],ExpressionUUID->"a981e586-8cb1-4417-b4be-34499b39ee49"],
         StripOnInput->False],{
        "\"kappaCollision\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/kappaCollision"], 
         "\"KCollision\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/KCollision"], 
         "\"KSoundwaves\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/KSoundwaves"], 
         "\"kappaSoundwaves\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/KSoundwaves"], 
         "\"HRFun\"" :> Documentation`HelpLookup["paclet:PT2GW/ref/HRFun"], 
         "\"nBFun\"" :> Documentation`HelpLookup["paclet:PT2GW/ref/nBFun"], 
         "\"HRFromBetaH\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/HRFromBetaH"], 
         "\"BetaHFromHR\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/ref/BetaHFromHR"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "3cc5192b-a4e7-4119-adad-8294fc19c07c"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "12f7e13d-f404-4f19-afbe-bee5efe6a1bb"]
         }],ExpressionUUID->"1b2fccc4-781d-4787-a69e-394f592c9f10"],
         StripOnInput->False],{
        "\"Gravitational Wave Template\"" :> 
         Documentation`HelpLookup[
          "paclet:PT2GW/guide/GravitationalWaveTemplate"], "\"PT2GWFinder\"" :> 
         Documentation`HelpLookup["paclet:PT2GW/guide/PT2GWFinder"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "d3c60cbe-8e30-4c55-90eb-b59d73dc8e73"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Tech Notes",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "4496afb7-2660-4d73-a6de-dabe4fcd7392"]
         }],ExpressionUUID->"b6e893ec-6992-4abc-b3d3-44447eed2c59"],
         StripOnInput->False],{
        "\"Coupled Fluid-Field Model\"" :> 
         Documentation`HelpLookup[
          "paclet:PT2GW/tutorial/CoupledFluid-FieldModel"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"Tutorials"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "266fe82d-a09f-490c-8f24-067cde6f3ec6"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "6ae03a23-6594-4a20-aca2-b41a348e7fa3"]
         }],ExpressionUUID->"2c7c45c5-2cde-49d9-a617-cb045377e477"],
         StripOnInput->False],{
        "\"PT2GW/ref/ComputeGW\"" :> None, 
         "\"Copy Wolfram Documentation Center URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{Cell["PT2GW/ref/ComputeGW"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
         "\"Copy web URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell[BoxData[
                 MakeBoxes[
                  Hyperlink[
                   "http://reference.wolfram.com/language/PT2GW/ref/ComputeGW.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
               False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], 
         "\"Go to web URL\"" :> 
         FrontEndExecute[{
           NotebookLocate[{
             URL[If[TrueQ[False], 
                 "http://reference.wolfram.com/system-modeler/", 
                 "http://reference.wolfram.com/language/"] <> 
               "PT2GW/ref/ComputeGW" <> ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "afc92ecd-bedc-4420-bdee-d28ae3d0519c"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "7a292572-c032-4d34-a15b-2caa9e954b54"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"89355532-4f38-4544-8fb7-faef9d020753"],

Cell["PT2GW`", "ContextNameCell",ExpressionUUID->"a3a06750-93f7-4f50-b38b-e00c9445c304"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "ComputeGW", "ObjectName",ExpressionUUID->
      "fd988c17-c9e2-4f4f-9eb0-4422bf6f851f"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"0825a629-b7ba-438e-9bcc-91518f0afa0b"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "e3808f86-f962-4886-b986-34434a2118e9"]
    }],ExpressionUUID->"5f964b48-4b73-4bfe-8bc3-164e09746837"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"80ab3d82-e8be-4f36-946b-\
0c1c6957ba61"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"ComputeGW", "[", 
       RowBox[{"T", ",", "\[Alpha]", ",", 
        RowBox[{"\[Beta]", "/", "H"}], ",", 
        SubscriptBox["\[Xi]", "w"], ",", 
        SubscriptBox["g", "*"], ",", "$Unit"}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "c760cf4d-914a-d747-a6e0-bc3fe5f45ef3"],
     "\[LineSeparator]computes the stochastic gravitational wave background \
for given phase transition parameters. "
    }],ExpressionUUID->"361c9285-34e9-4f9d-ab0c-b90d8bdebe1e"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"ComputeGW", "[", 
       RowBox[{"T", ",", "\[Alpha]", ",", 
        RowBox[{"\[Beta]", "/", "H"}], ",", 
        SubscriptBox["\[Xi]", "w"], ",", 
        SubscriptBox["g", "*"], ",", "$Unit", ",", 
        RowBox[{"\"\<CollisionData\>\"", "->", "association"}]}], "]"}]], 
      "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "fccfc9a4-5fb9-684f-a60c-c76a14c94a60"],
     "\[LineSeparator]includes the contribution from bubble wall collisions."
    }],ExpressionUUID->"641a5266-0a25-465c-a38c-e335e870d160"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"ComputeGW", "[", "association", "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "164053fd-b07d-0348-b7ca-a8c50ced47ad"],
     "\[LineSeparator]extracts the relevant parameters from an ",
     Cell[BoxData[
      TemplateBox[{
        Cell[
         TextData["Association"]], "paclet:ref/Association"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "803041f2-9d91-c843-b67c-d1baf53bfe10"],
     "."
    }],ExpressionUUID->"fc2404d1-4b9b-4db7-aaef-c8990b432af8"]}
  }]], "Usage",
 CellID->186103519,ExpressionUUID->"6db6ec0a-7333-46f3-87c2-9c219b795069"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{
      13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
    ExpressionUUID->"254baa23-acaa-4b83-be08-1ed1b5fe4615"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"1ebc0f1e-6fe0-481d-aaaf-d03a7fc017fe"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"4158ae78-c106-4019-b5bc-28543f1bbf59"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"f09dbe9c-252d-49f5-9d82-4c2c952a952c"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->1797595199,ExpressionUUID->"a95aba45-fe05-4249-9336-76b82c4119a1"],

Cell[TextData[{
 "ComputeGW implements the spectral templates from arXiv ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["2403.03723"]], "https://arxiv.org/abs/2403.03723"},
   "WebLink",
   BaseStyle->{"Notes"}]],ExpressionUUID->
  "591e95ed-269a-4a02-9577-0a46a2290cc6"],
 "."
}], "Notes",
 CellID->23380038,ExpressionUUID->"b5a0da20-fbde-6544-a463-a7ea2425a837"],

Cell["\<\
It returns double broken power laws for the gravitational wave spectra \
generated by soundwaves and MHD turbulence.\
\>", "Notes",
 CellID->4807250,ExpressionUUID->"20e40e02-5e0f-774e-975f-6edaa9252e8a"],

Cell["\<\
If \"CollisionData\" is provided, it includes the contribution from bubble \
wall collisions, returning a broken power law for its spectrum.\
\>", "Notes",
 CellID->229311797,ExpressionUUID->"445c7261-71de-4e49-8c76-f4365dcf8585"],

Cell["The following options can be given: ", "Notes",
 CellID->240075433,ExpressionUUID->"0af5761e-2c4b-4f74-b4ba-5a692b703cdb"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "48c48873-b2eb-4a3a-8c61-d8d0d0ce314f"], "\"\<CollisionData\>\"", 
    TemplateBox[{
      Cell[
       TextData["None"]], "paclet:ref/None"},
     "RefLink",
     BaseStyle->{"3ColumnTableMod"}], Cell["\<\
data required to compute the contribution from bubble wall collisions.\
\>", "TableText",ExpressionUUID->"1ee7a3b5-7679-46b3-9a18-86a0dd6688c3"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "5030efd2-22a4-422c-aaeb-53bb615ae74f"], "\"\<Sources\>\"", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Collisions\>\"", ",", " ", "\"\<Soundwaves\>\"", ",", " ", 
      "\"\<Turbulence\>\"", ",", " ", "\"\<Combined\>\""}], "}"}], Cell["\<\
sources to include. \"Combined\" computes the sum of the available sources.\
\>", "TableText",ExpressionUUID->"149c0619-eb64-4cf4-91fa-d8a06cbf9383"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "687690c3-4265-426d-ae22-e6b0cbf64c0c"], "\"\<SpeedOfSound\>\"", Cell[
    TextData[Cell[BoxData[
     FormBox[
      RowBox[{"1", "/", 
       SqrtBox["3"]}], TraditionalForm]], "InlineFormula",
     FontFamily->"Source Sans Pro",ExpressionUUID->
     "ef1beed6-6035-264a-9340-c9eb2a20bda9"]],ExpressionUUID->
     "c959bb2f-7cea-8045-b41f-56fb9f0d6c2c"], Cell[
    "speed of sound in the false vacuum.", "TableText",ExpressionUUID->
     "f2633473-8fe2-4d59-aaec-ca91017bafa1"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "8bb125a3-c816-422b-9f85-7b1214b008b7"], "\"\<\[CurlyEpsilon]\>\"", 
    "0.5", Cell["\<\
fraction of kinetic energy in buil motion that is converted to MHD turbulence.\
\>", "TableText",ExpressionUUID->"c055a17c-f7f4-4dfc-b9d0-69ff01aacac5"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "7d3c614b-2528-4877-b6b0-c0afdf08c124"], "\"\<\[ScriptCapitalN]\>\"", 
    "2", Cell[
    "parametrizes the eddie turnover time.", "TableText",ExpressionUUID->
     "7f8cc09b-a3c1-4f85-a5f8-5f70fdf83b84"]},
   {Cell["      ", "TableRowIcon",ExpressionUUID->
     "b4690e4d-86df-45de-9310-7542be415b66"], "\"\<ShapeParameters\>\"", 
    RowBox[{"Dataset", "[", "\[Ellipsis]", "]"}], Cell["\<\
shape parameters for the broken and double broken power laws, for collision, \
soundwaves, \
\>", "TableText",ExpressionUUID->"407c3d09-5c77-486c-b833-c64d8dd4bb6b"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "Rows" -> {None, None, None, None, None, {None}}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True, True, True, True}}}},
 CellID->1505614016,ExpressionUUID->"463054de-0792-449b-9903-7d6dfd784fb0"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"378827f0-4860-43c3-89bf-a19ec7c3e3e9"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"443dc12d-ea1a-46da-8d5a-a963dd252760"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(8)", "ExampleCount",ExpressionUUID->
  "6dee0de5-1847-4ef7-984c-c1d260fce8a7"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->60121153,ExpressionUUID->"ae1bdc4c-87b8-4f83-96aa-ef033f25ad1b"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PT2GW`\>\"", "]"}]], "Input", "ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->2073788670,ExpressionUUID->"d681469b-948d-48ae-8e2f-54c2c2a2d260"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"1bab0b14-a403-4119-90bf-631195a9394f"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"362b017d-7c63-4607-a0bd-376d8d4346c9"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "fcb2e2cc-b20f-49e0-a603-0327d482fe3d"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->859040811,ExpressionUUID->"7dfda84d-398d-47e8-b542-556b7e1d240f"],

Cell[TextData[{
 "Load a benchmark and its ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Transition"]], "paclet:PT2GW/ref/Transition", 
    "PT2GW Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "35b276af-6cd7-1841-a015-316b9db88696"],
 " from the Models package:"
}], "ExampleText",
 CellID->1802083417,ExpressionUUID->"2b9974f7-b8bc-6f42-b953-43f9fbb4d844"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"<<", "PT2GW/Models.m"}], "\[IndentingNewLine]", 
 RowBox[{"tr", "=", 
  RowBox[{"CFFModel", "[", 
   RowBox[{
    RowBox[{"idx", "=", "1"}], ",", "\"\<Transition\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AutoComplete", "[", "tr", "]"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"optional", ":", " ", 
    RowBox[{
     RowBox[{"enable", " ", "a", " ", "drop"}], "-", 
     RowBox[{
     "down", " ", "menu", " ", "for", " ", "the", " ", "transition", " ", 
      "keys"}]}]}], " ", "*)"}]}]}], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[1]:=",
 CellID->436753814,ExpressionUUID->"e61f6d0f-b8ed-4640-bef4-0520f467cb26"],

Cell[BoxData["\<\"\[Checkmark] Imported \
\\!\\(\\*StyleBox[\\\"Models`\\\",\\nFontWeight->\\\"Bold\\\"]\\)\"\>"], \
"Print",
 CellLabel->"During evaluation of In[38]:=",
 CellID->110892428,ExpressionUUID->"22f1b8e5-e4c9-504a-8441-cee22bd8ead9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Transition",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             GraphicsBox[{{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Hue[0.5, 0.5, 0.4]], 
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQnbH9ekxLQ6IDAxQs+Cu3TPUDgh84f3fMtNgkOJ/z
Xdhm3ysIftH7T3clnJPh/Edze1do7UbwTy+vfcBtmALnp6bkvWGYj+CznYud
YSOWCudHvvKV6GlF8FWSJrOu/oTgf2u7PkkgMw3Or4yT+dJ5HcFnfhz/1dM/
HWH+4R/JN48g+LtCJy2rMcqA80unanWmrUTwH7Uftk+RyITzQ9Wjp62YgOA7
KnlE7WHLgvPvnzf99LgEwW/WUtIKeoPgZ2+RvSr6C8EPtpNsuMmeDecrBwlc
S1BG8LnvcDeqGCL4n1PZdV7YIfi33zNdX+2D4B+u/NeYH4XgAwC092lp
                    "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Hue[0.08, 0.9, 0.8]], 
                   LineBox[CompressedData["
1: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
PTLshiPxf5xslVE=
                    "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}}, {}}, {
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
               AxesOrigin -> {132.83398951148357`, 0}, 
               FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
               DisplayFunction -> Identity, PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.05], 
                  Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
               All, DisplayFunction -> Identity, AspectRatio -> 
               NCache[GoldenRatio^(-1), 0.6180339887498948], 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {132.83398951148328`, 0}, Background -> 
               GrayLevel[1], DisplayFunction :> Identity, Epilog -> {
                 Arrowheads[Small], 
                 
                 ArrowBox[{{170.05229281884584`, 0}, {168.3654445326382, 
                   400.5652336457855}}]}, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{132.83398951148328`, 218.82611537368396`}, {0., 
                401.5968064268551}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.02], 
                  Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], Deploy, 
             DefaultBaseStyle -> "Deploy"], 
            GridBox[{{
               RowBox[{
                 TagBox["\"\[Alpha]: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.00154778937383443`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"\[Beta]/H: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1677.1033887941285`", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             GraphicsBox[{{{{}, {}, 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Hue[0.5, 0.5, 0.4]], 
                   LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQnbH9ekxLQ6IDAxQs+Cu3TPUDgh84f3fMtNgkOJ/z
Xdhm3ysIftH7T3clnJPh/Edze1do7UbwTy+vfcBtmALnp6bkvWGYj+CznYud
YSOWCudHvvKV6GlF8FWSJrOu/oTgf2u7PkkgMw3Or4yT+dJ5HcFnfhz/1dM/
HWH+4R/JN48g+LtCJy2rMcqA80unanWmrUTwH7Uftk+RyITzQ9Wjp62YgOA7
KnlE7WHLgvPvnzf99LgEwW/WUtIKeoPgZ2+RvSr6C8EPtpNsuMmeDecrBwlc
S1BG8LnvcDeqGCL4n1PZdV7YIfi33zNdX+2D4B+u/NeYH4XgAwC092lp
                    "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
                 TagBox[{
                   Directive[
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    Hue[0.08, 0.9, 0.8]], 
                   LineBox[CompressedData["
1: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
PTLshiPxf5xslVE=
                    "]]}, Annotation[#, "Charting`Private`Tag#2"]& ]}}, {}}, {
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
               AxesOrigin -> {132.83398951148357`, 0}, 
               FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
               DisplayFunction -> Identity, PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.05], 
                  Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
               All, DisplayFunction -> Identity, AspectRatio -> 
               NCache[GoldenRatio^(-1), 0.6180339887498948], 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {132.83398951148328`, 0}, Background -> 
               GrayLevel[1], DisplayFunction :> Identity, Epilog -> {
                 Arrowheads[Small], 
                 
                 ArrowBox[{{170.05229281884584`, 0}, {168.3654445326382, 
                   400.5652336457855}}]}, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultMeshStyle" -> AbsolutePointSize[6], 
                 "ScalingFunctions" -> None, 
                 "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
               PlotRange -> {{132.83398951148328`, 218.82611537368396`}, {0., 
                401.5968064268551}}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {
                  Scaled[0.02], 
                  Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], Deploy, 
             DefaultBaseStyle -> "Deploy"], 
            GridBox[{{
               RowBox[{
                 TagBox["\"\[Alpha]: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.00154778937383443`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"\[Beta]/H: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1677.1033887941285`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"\\!\\(\\*SubscriptBox[\\(T\\), \\(p\\)]\\): \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "168.3654445326382`", "\"GeV\"", "gigaelectronvolts", 
                    "\"Gigaelectronvolts\""}, "Quantity", SyntaxForm -> Mod], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"\\!\\(\\*SubsuperscriptBox[\\(f\\), \\(GW\\), \\(peak\\)]\
\\): \"", "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.01935341596339277`", "\"Hz\"", "hertz", "\"Hertz\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"\\!\\(\\*SuperscriptBox[\\(h\\), \
\\(2\\)]\\)\\!\\(\\*SubsuperscriptBox[\\(\[CapitalOmega]\\), \\(GW\\), \
\\(peak\\)]\\): \"", "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["1.116492577627163`*^-20", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PT2GW`Transition[<|
   "T0" -> 140, "\[Gamma]" -> Rational[1, 18], "A" -> 
    Rational[1, 36] Rational[5, 2]^Rational[1, 2], "\[Lambda]" -> 
    Rational[5, 324], "Unit" -> "GeV", "RelativisticDOF" -> 106.75, "Phases" -> {
      Function[Private`T, 
       ConditionalExpression[0, 
        Or[
         Inequality[140., Less, Private`T, Less, 211.66010488516724`], 
         Private`T > 211.66010488516724`]]], 
      Function[Private`T, 
       ConditionalExpression[
       1.4230249470757705` Private`T + 
        2.44377347361018*^-9 (1.1815080348299888`*^22 - 2.637294720602654*^17 
           Private`T^2)^Rational[1, 2], 
        Or[
         Inequality[0, Less, Private`T, Less, 140.], 
         Inequality[140., Less, Private`T, Less, 211.66010488516724`]]]]}, 
    "WallVelocity" -> 0.9, "Tc" -> 197.98989873223329`, "TnEstimate" -> 
    170.70272073686266`, "ActionFunction" -> 
    PT2GW`ActionFunction[<|"Function" -> Function[PT2GW`Private`T$, 
         Piecewise[{{-2575.5437645177385` + 
            1.226627592440911*^-8 (197.98989873223329` - 
               PT2GW`Private`T$)^(-2) + 
            27915.49663902605/(197.98989873223329` - PT2GW`Private`T$) + 
            51.02078917607874 (197.98989873223329` - PT2GW`Private`T$), 
            Inequality[
            192.53246313315915`, LessEqual, PT2GW`Private`T$, Less, 
             197.98989873223329`]}, {
            
            InterpolatingFunction[{{148.87297834056616`, 
             192.53246313315915`}}, {
             5, 39, 0, {32}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{
             148.87297834056616`, 150.2813488177466, 151.68971929492702`, 
             153.09808977210741`, 154.50646024928784`, 155.91483072646827`, 
             157.3232012036487, 158.7315716808291, 160.13994215800952`, 
             161.54831263518992`, 162.95668311237034`, 164.36505358955077`, 
             165.7734240667312, 167.18179454391162`, 168.59016502109205`, 
             169.99853549827245`, 171.40690597545287`, 172.81527645263327`, 
             174.2236469298137, 175.63201740699412`, 177.04038788417455`, 
             178.44875836135498`, 179.85712883853537`, 181.2654993157158, 
             182.67386979289623`, 184.08224027007662`, 185.49061074725708`, 
             186.89898122443748`, 188.30735170161788`, 189.71572217879833`, 
             191.12409265597873`, 192.53246313315915`}}, {
              BSplineFunction[
              1, {{148.87297834056616`, 192.53246313315915`}}, {3}, {
               False}, {{14.957201344024103`, 17.82425275366827, 
                21.47614997171516, 28.360922648861965`, 33.30631939356383, 
                39.59440158899992, 44.97946833696151, 52.01367891857808, 
                59.904862796254854`, 68.05983512609215, 77.23801662301258, 
                86.93499552417934, 97.69313955399427, 111.30525743962511`, 
                124.4465515181607, 140.08415036555834`, 157.19550738023477`, 
                176.7000967701422, 199.40802679815366`, 225.185381217268, 
                255.83073448849058`, 291.6895470710488, 334.79000016120597`, 
                387.8369830053195, 453.4157089947676, 537.1412905601984, 
                646.6483870308422, 796.5268796071572, 999.7840955999725, 
                1419.041278684159, 1985.911088142312, 
                2818.029449987053}, {}}, {{148.87297834056616`, 
               148.87297834056616`, 148.87297834056616`, 148.87297834056616`, 
               151.689719294927, 153.09808977210741`, 154.50646024928784`, 
               155.91483072646827`, 157.3232012036487, 158.7315716808291, 
               160.1399421580095, 161.54831263518992`, 162.95668311237034`, 
               164.36505358955077`, 165.7734240667312, 167.18179454391162`, 
               168.59016502109205`, 169.99853549827245`, 171.40690597545284`, 
               172.81527645263327`, 174.2236469298137, 175.63201740699412`, 
               177.04038788417455`, 178.44875836135495`, 179.85712883853537`, 
               181.2654993157158, 182.6738697928962, 184.08224027007662`, 
               185.49061074725705`, 186.89898122443748`, 188.3073517016179, 
               189.7157221787983, 192.53246313315915`, 192.53246313315915`, 
               192.53246313315915`, 192.53246313315915`}}, {0}, 
               MachinePrecision, "Unevaluated"], {}}, {Automatic}][
            PT2GW`Private`T$], 
            Inequality[
            148.87297834056616`, LessEqual, PT2GW`Private`T$, Less, 
             192.53246313315915`]}}, Indeterminate]], "ActionMethod" -> 
       "PWLaurent", "Domain" -> {148.87297834056616`, 197.98989873223329`}, 
       "Tc" -> 197.98989873223329`, "StandardDeviation" -> 
       0.00003620672109833112, "NActionPoints" -> 32, "Unit" -> "GeV", 
       "Data" -> CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAAI9tFcO+bYkCiimhLFuotQK1fPM8A
yWJAYyLBWUwSM0A35DIuEvZiQN82idCEXTdAwGgpjSMjY0Cl3ANKFlM8QErt
H+w0UGNAB2OiU9rDQEDUcRZLRn1jQATV0q7RuENAXvYMqleqY0AQsB6+jaBG
QOd6Awlp12NApPqXcggUSkBx//lnegRkQGk7Ry5z+U1A+oPwxosxZEA6VMJh
vg5RQIQI5yWdXmRAHcq+U8RUU0AOjd2ErotkQDldqKcox1VAmBHU47+4ZEBQ
l1SmzYpYQCKWykLR5WRA9MbNrIPOW0CsGsGh4hJlQJLqVOA0N19ANZ+3APQ/
ZUDkDuyHjYphQL8jrl8FbWVAEIQJKAWzY0BIqKS+FpplQF3HC9J8J2ZA0iyb
HSjHZUA2m8xXbf1oQFyxkXw59GVAzRKDFeU/bEDmNYjbSiFmQOB+TL4xC3BA
cLp+OlxOZkDCbOoCWE5yQPk+dZlte2ZA691FASoHdUCDw2v4fqhmQBNQJEnP
XnhADUhiV5DVZkAq01j/Cod8QJbMWLahAmdAls4XdIHrgEAhUU8Vsy9nQP25
9f8Da4RAqtVFdMRcZ0DV4q38YiuJQDNaPNPViWdAOhcfNIXSj0C+3jIy57Zn
QAewNwEZ+ZRAR2MpkfjjZ0AX4I3wAy+dQNHnH/AJEWhAhZYRFA8EpkAVr+PE

        "]|>], "Domain" -> {148.87297834056616`, 197.98989873223329`}, "Tn" -> 
    170.05229281884584`, "NucleationAction" -> 140.9571523000086, 
    "NucleationDecayOverHubble" -> 1979.1476530867283`, 
    "NucleationIntegralDecay" -> 0.99989891654535, "Tp" -> 168.3654445326382, 
    "PercolationAction" -> 122.59638162702801`, "PercolationIntegralValue" -> 
    0.3400000000000292, "TpCondition" -> -2.344304644766823*^-11, 
    "TransitionTemperature" -> "Tp", "\[Alpha]" -> 0.00154778937383443, 
    "\[Beta]/H" -> 1677.1033887941285`, "\[Kappa]col" -> Indeterminate, 
    "Kcol" -> Indeterminate, "\[Alpha]eff" -> 0.00154778937383443, 
    "\[Kappa]sw" -> 0.0027777775584667355`, "Ksw" -> 2.5756621701847357`*^-6, 
    "fp" -> 0.005181045518281545, "Treh" -> 168.43055531464088`, "H*0" -> 
    0.000028084382941009768`, "HR" -> 0.001571915849210865, "f1sw" -> 
    0.0035746498555424104`, "f2sw" -> 0.024927844057918605`, 
    "\[CurlyEpsilon]" -> 0.5, "\[ScriptCapitalN]" -> 2, "\[CapitalOmega]s" -> 
    1.2878310850923676`*^-6, "f1mhd" -> 8.78281227891213*^-6, "f2mhd" -> 
    0.03932114841096652, "Amhd" -> 0.00435731177561978, 
    "h2Omega" -> <|
     "Soundwaves" -> (
       6.364816488961093*^-14 #^3 ((1 + 78258.76385491327 #^2)^(-1)/(1 + 
        2.58976956856626*^6 #^4))& ), 
      "Turbulence" -> (
       3.080874519455274*^-13 #^3 (1 + 
         1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
         1.6806047957030093`*^20 #^4)^Rational[-1, 2]& ), 
      "Combined" -> (#^3 (
        6.364816488961093*^-14 ((1 + 78258.76385491327 #^2)^(-1)/(1 + 
          2.58976956856626*^6 #^4)) + 
        3.080874519455274*^-13 (1 + 
           1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
           1.6806047957030093`*^20 #^4)^Rational[-1, 2])& )|>, "fPeak" -> 
    0.01935341596339277, "h2OmegaPeak" -> 1.116492577627163*^-20|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[1]=",
 CellID->4970362,ExpressionUUID->"ab83a36a-9101-414e-868f-27459f38ca82"]
}, Open  ]],

Cell[TextData[{
 "ComputeGW returns an ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Association"]], "paclet:ref/Association"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "239a8dec-6b0f-9340-a7d1-913478130430"],
 " of GW parameters, and stores it in the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GWData"]], "paclet:PT2GW/ref/GWData", "PT2GW Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ba723021-1dcf-ee43-8288-c09bf9eb1feb"],
 " symbol, from the GW package:"
}], "ExampleText",
 CellID->89755690,ExpressionUUID->"5eb811d6-73ce-5843-991e-e8b323ae3ad3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gwData", "=", 
   RowBox[{"ComputeGW", "[", 
    RowBox[{"tr", "//", "Normal"}], "]"}]}], ";"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[2]:=",
 CellID->151779823,ExpressionUUID->"332544f1-1e87-194a-84ec-aacfcc839296"],

Cell[BoxData["\<\"No GWs from bubble collisions: \\!\\(\\*SubscriptBox[\\(\
\[Kappa]\\), \\(col\\)]\\) is Indeterminate. \\n    Collisions' efficiency \
must be provided or computed via mass functions.\"\>"], "Print",
 CellLabel->"During evaluation of In[53]:=",
 CellID->226095267,ExpressionUUID->"cf704080-56cc-7143-9d5d-4cb195b20ff6"]
}, Open  ]],

Cell["Access the results:", "ExampleText",
 CellID->190385744,ExpressionUUID->"2325a2cf-745f-2f4c-8347-23f806df34fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GWData", "[", "\"\<h2Omega\>\"", "]"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[3]:=",
 CellID->2059106148,ExpressionUUID->"d0c07938-98f5-f040-b226-8004844c0f7d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Soundwaves\"\>", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"6.364816488961093`*^-14", " ", 
        SuperscriptBox["#1", "3"]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"78258.76385491327`", " ", 
           SuperscriptBox["#1", "2"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2.58976956856626`*^6", " ", 
           SuperscriptBox["#1", "4"]}]}], ")"}]}]], "&"}], ")"}]}], ",", 
   RowBox[{"\<\"Turbulence\"\>", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"3.080874519455274`*^-13", " ", 
        SuperscriptBox["#1", "3"]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"1050.881349222809`", " ", 
            SuperscriptBox["#1", "2.15`"]}]}], ")"}], "1.7054263565891472`"], 
        " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"1.6806047957030093`*^20", " ", 
           SuperscriptBox["#1", "4"]}]}]]}]], "&"}], ")"}]}], ",", 
   RowBox[{"\<\"Combined\"\>", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["#1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["6.364816488961093`*^-14", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"78258.76385491327`", " ", 
              SuperscriptBox["#1", "2"]}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2.58976956856626`*^6", " ", 
              SuperscriptBox["#1", "4"]}]}], ")"}]}]], "+", 
         FractionBox["3.080874519455274`*^-13", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"1050.881349222809`", " ", 
               SuperscriptBox["#1", "2.15`"]}]}], ")"}], 
            "1.7054263565891472`"], " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             RowBox[{"1.6806047957030093`*^20", " ", 
              SuperscriptBox["#1", "4"]}]}]]}]]}], ")"}]}], "&"}], ")"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->704863717,ExpressionUUID->"e3094d7e-00e8-4140-84f6-2ba4ef52d58c"]
}, Open  ]],

Cell["Plot the gravitational wave spectrum:", "ExampleText",
 CellID->57857835,ExpressionUUID->"37430a2f-40b5-1548-9d71-fb2fcb54e83b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotGW", "[", 
  RowBox[{"GWData", "[", "\"\<h2Omega\>\"", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[4]:=",
 CellID->217156973,ExpressionUUID->"8d55486b-2a22-2849-9a65-e35afdaa7f99"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
VEENdYCFOjkiI+nwMx3yYyCcwEydU+4/sZK4P1s1KytLpOEHMNmGJC8+i5k6
9YdT2HoiQVJ1JqSHUxL3I0o5B+XhFOVpGu8w7D4VuPL6Ttc7bJ2BiqkQ9bb9
1shY38UbJ0+eONWyk7a+rpab1/1+ksuCqN9e/0ENdYCFOilCVFY2YK0kVSfZ
UF6gQFlhgB+clL9V+lSVbGm/siQCHaIsiWCtTuslEcjOyrfKigoeYbFeOuN6
h20i7WlCzlAqJpWn9UHa29v1owYGBlo1hoeHlWSjo6N6MjpWzzA85zX8eym0
1ztwtuNwQ826HcffWFWZs2zdi6+tfeEP97Y3/rig9b3v9BZ/jbejRdMPlDzZ
uKvi8tBt/Sx+AnWmCtTpAOvXhIn19Hg9AcOF+AxzE8viGa5rR8nEonkJbSE+
PVt5IT4lQ+VYhsusnNTmQnxm6/i5jvWitW6dws7DKV4v8adUzJKSkj88yPLl
y/Wjdu/e/QeNnp4eJdnQ0JCejI7VMwzPed94442QX+/ebWWNG+Y3rvlZR9G3
SIvtqx6ZtXCTnuzt3Jeb3pku7EnbO0t//9SirYvXNu5r6xsbn9BP5wNQZ6pA
nSBCBBJ1sitFtrPTWHLBPkrFpDCn50H6+vr0o8gRPRojIyNKsvHxcT0ZHatn
GJ7z1tbWhu16u7vP1B08+kFV3aL3tmxZ/rPOwv8iC5G2ZxdVzF64Tt7yFi8g
e3664n/IyV7JLfnVwhrensvbWb6z49rwHf2kngJ1pgrUCSKEdcTHz2a6rs6E
yUJ8noKKqRCetv3WrZH6o+dWVhye/cftQnmly59TvEnbGyuL3yw/RCrc3njm
ePflC1dutbUdIXXu272jr6vlyL7yAxWv1q2eSSGnyIe3F/64af+Hz/efOebb
RYXn9kYF1FAQLfSXRzNiLaAAXzTmIqiYCoG37aN3brft/eBAyZMN7/2tYjra
FuUtJVeeKPw2JTj4SW5H89bbN9Wp/gTFqqTO1tZWeeeNW6O1TZ8vKNovcit5
80WWL+XWe+qQD1cX+O2NHKihIHKIJQUUKDYM9h2dLoKKqRBg295zoqGh7IXu
oodEOPnS62VfRYhLat/d0Lr3cJedINFQnYKuviEKZufkbjxV+LAcvdaX/Kq3
67jbl/UAUGeqoIaCKKIsvS46UeOkTrdWLIkH/rftY+MTe1rObln1rN4TW7Bs
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
UHcXPdRaOW/kxgU7y93cHh3quVjf3PnBzTvq8Bzt0eO1rYde1TMhyV66dtJB
RGkHt1YTujLcs+tI3rs1jxrOwnUgU7PbSwKt+2TZ6aJvKrNwq0tzeweup1zu
GJFpNRSASJA5K5ZcHrpdtv3Ec3k7uXtw1mtV7aseoca5p/jrRza+RNLkZGZt
O5mOJFLZ8KI8PdUwTiTRiASF2x6jQ1q6yry7LkPcXYiP/K5P1k1MPkxasf+Z
lIJl679Mbl4fbNy0QAj0TPHXX8ktoX+sFeub+y4aFCDeZE7dBCByZELF7Oob
Kqo68tSircqklJL8+Uc2PD9y9YycuLFpn+HDGhRm6uGkYU8sRaNtZ9b1XW42
1I0/+LCG7dDNs6Jfek3t43TJdiJoO0E9CfTgxpzuoocqVvxa/GPRPx/9I164
ksIs4ngQnhqal5dXXl5ukYC+pTTd3d3KftpTUFCQN0lNTc3goOlUavqKk1mk
kcujQ2VQClBXV0f76ad+Li6w4VEKbW1tnJIuhD4nLRuIPeGpmK5z49bo9sYz
fyjYXvLmi+XLn5aluXB1fXPHBV579spwT3vv5n3H36pqfFk8REk7ldz0nliz
bsww4IM66Y7pN6TjbI31UfaXf796+dzHWxufzt0m/8ORQDdVlF7qO5l28SND
+jW0OkXM8pkyZcqMGTMsTkTfUhpZUqSnmTNnTtHIyckxzIEUxgmsHS3KY4ac
P/mO9tBP+VjeqUDl15VNrp82bZqdlCCjiJ86SYhHOy+trDj87OLNxcteOVX4
sOj6o4Z3xfpmCkLl9KQ/PZw07IRcXzdrR8uClq4yikD1Uc5QMTAwUFJS4ukb
fyimpvi6aMeP5PtGd8b6qFTfnHJt+E7Z9hOix4C72XuKv96wbi65NY3iRwZX
1Ln64z/Y38zycaBO3kM/SYV1k1DUxiZSXMZkZWVNm4Q+JL0utljdg1D+U6dO
leWrq5P30FkoMR9FiUVR5VOwyilD+sCupOCUvEw7qYSwZyYTG3WSMY93X169
+egLS2qpgS1YNo/a2GNr/ryh9D9v/ei/rv/44VWbpr9b89f6gYZr0xn2xAKd
iS/unjy3/aM9/9tsmSMFZy8du3DlFne5y5O7uoseygSBuqXOz29ss7O5qM62
tjbDQ8g4UydR9pOVKP2cSehD0n5RVqe+n+JEVhv/qquTz66Lj8svzsvlMUzJ
9jSLnUEkqK+vl9+PJn/Fr0sjsrOzzQ6P+lQE2ZiiW48fc/h4/TftrIg+eL1L
XnNgW9173k18jTH9g62GIef5q0fbezeLubjpvK+TBLrvw9/2PPg8EQl0e+X7
FJw6zja0uFU3g1InfTCLLnmQUdnJjquZhB1qfV1m6lS+0tVpdiE8KioGPdng
hl3HJFO2qnUJQWhhb4oXc5MihT3pgzAm1R0ze0ZUmsKYv13x0dz8Bb97518e
GBFbWH2kcPr2j75h57l+atVlUeJdzO7CCwkWbnusufODe328ad/egbMdDaXP
CIGeKnz4+dfLn87dVrb9xK2RMVfKHCqiq06O2qZNm2azY5NSChkZhqV6eQzV
qXhNVyf3GCeNarnj1+xb8rs+9QhEhdLSUjnSZJN2dnYqSk1MmtRwAkDk1Nl3
8cb62rbfFyz5l5Knlmz4ckGeP61/jKVJsWfJlmOneq/ePL3xUPVP5SdE9h1/
60hPRdIxSqjTRTiil+cRffzZPFeGiUmgjaX/ROosefNF8SfTc3k7N+05HTOB
RledifuBGzmIPljPYuXeXRFpWkR8cnkM1caunDlzpvyrrE4xGYnSmM2YNett
BrFEUaf8Vf4k+iFRUSeFmU3tAwtX11MLSaLUw8nizQ0Uh/KkWYaaaIoxU129
HOp0Ebr/a2ofV/6lDF+a5ozeU4feXbdXeeaIBLpz24Zbw1fdOkuwRFqdiUlz
cfjGUMRHWtQdyq6kUI5/tWMuzlB5OCUrK4tlLYRoOMNWmTdL6Umjcsm5txnq
zBBIjtwxKxwqvqKoM6LqHBuf2NNyNnvlbtE2/n7VXLkpXlH5yEef/kJ/nMQZ
UKe7THxxt+v8bnlR3P5Blx+Z6R24vqSsSfz3mL1ow6nCh08XfdP/l6t6QdTV
yZCqcnJy2GuMElHqPbSsNotAdYoJdBa5DIbqZPhpTS42I8JeqDNzoApiNu7J
X5mpM7TThEian+zvEOv/iG3p2zn3VlXd+K2tH33jwAcPda/+2qXaJDMK7BMP
dV6+fLmqqqq3tzfognwFGZPizdVb/0H/ShludkZHz+DitY333hMnvaD8ROG3
oyvQqE8TMoQXPWBPCS1yDyq5Uo8fLWaxcibKwyn6uKqFOmWoDPJTLTxQC3WG
ED0wTDw4XVaYjsWnoEym5TSlpaXyTrKnyCpaHbYkzS0NLX9Y+/LSjdNn5VYI
ac5dsat2RzU1icdLvppm2f/x39w8vdGtU8dDnT4sieCMQ81N+s723s2F2x5r
Or0m/fWXSKCHV/+dshAuCbRh/y65Mz9CRFedFGmaCUvRmeGyCaKD16I8FtN4
zM7FkaZhMKtEmtbThNjUSc8O3IWMyVKT1cneFJN5hD2TqpMTWCwDkpjssFXE
Ks7iziW5xK2RsYrdTf+65jdvbvoL7t/7fcHvSJrzV9U1tQ9w63ex5pcPSHPC
zZdXQp2eYnh7P9z9JP9b52/5/p5jS6/f6k/zLJ1NG9tW/1Cos33VI7Neq8pe
uXtfW1/kBBpddfKvFpJinfGEWENFcuApBkD18jhQJ/9qNgFJvkbrqUpcNizK
5yekMGFAZTjScLqsndx0b8qdt2xqecKtnMzhZbgNSXPD7lZZml9um/7qSOeA
nHLkfKMX0mSgTk/Rb2//YKsyj2jFJ9/Z0bIg/XMdq/+4pfieQPOX5oiOi8gJ
NLrqLCgomGKyZh2HmexETmbYMcsduWKurF4eZ1EnzwvSna6UxGJJBC6YnSWP
gFuICJGVJ5tR73HV9xjmZuhEWcSKlJVTpHwNbkPS3LTn9HN5O3+96JMlFT+Q
W9HyzTMuXTNasNQDaTJQp6cY3t6u87sr9j8j/7vvOpJkZMo+R+s3/esqdRbu
/FV1Rw7u8O5/kYuESp08A0eHEyjqJONwaMaDmGZL3lmEbxyQmoWuztSZkB6Z
IUvy45n0U+yURWm4EB9nKE/iBX6iqJMDQyV4zM7ONhygFIj1gmTkmUKGA6My
8oHNvnOwqbmoYu9zf/pqie9/fmc+N55lG6YfnRzQPPbZe34WaePGjX6eziN2
7NhB6qysrAy6ICoWt3d3w4bSHc8sr8qira5xq7vnXb+l/pU3d4j/Zq/klpwp
/npL4Q9qN77t7oncQq6YaTY1LqrTDE5guPw7K0mBdgoTWQ9o8uGGY6aO1ZnQ
HplhqPy6DcX0IRnSPbwZFIo6lYFOJqk60yeoqHNsfGJbY9dLyz5VwoGitcUb
Kx89Ks0CGqj8qZ8Fa0bU6SVJb+/QzbPHPq/U998Zu3HwVFGqT+nK3J34Yl9b
Hz/lVPn2P4r/YIeKf3KqZafjbL0mPOo0fMkXwwksXjpm9novszeCCXhWj+GA
o3xqCyxeOsYTmey8SowzwUvHwkDGqpOkWdNw7F/f//2Sih/MWrxeSHPx2saT
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
AAAAAAAAAAAAAAAAAJnG/wdB8ZUj
    "], {{0, 168.}, {370.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{370.2, 168.},
  PlotRange->{{0, 370.2}, {0, 168.}}]], "Output",
 CellLabel->"Out[4]=",
 CellID->362321055,ExpressionUUID->"f1bdb915-a013-f146-90bd-10070bd8623c"]
}, Open  ]],

Cell["Visualize the full dataset:", "ExampleText",
 CellID->1373189798,ExpressionUUID->"f7e52852-77fa-c14a-bbd4-c9380c739270"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GWData", "//", "Dataset"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[5]:=",
 CellID->553953049,ExpressionUUID->"0e84b454-e1bd-964f-863b-280f8e78275a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "\[Kappa]col" -> Indeterminate, "Kcol" -> Indeterminate, "\[Alpha]eff" -> 
       0.00154778937383443, "\[Kappa]sw" -> 0.0027777775584667355`, "Ksw" -> 
       2.5756621701847366`*^-6, "fp" -> 0.005181045518281545, "Treh" -> 
       168.43055531464088`, "H*0" -> 0.000028084382941009768`, "HR" -> 
       0.001571915849210865, "f1sw" -> 0.0035746498555424104`, "f2sw" -> 
       0.024927844057918605`, "\[CurlyEpsilon]" -> 0.5, "\[ScriptCapitalN]" -> 
       2, "\[CapitalOmega]s" -> 1.2878310850923683`*^-6, "f1mhd" -> 
       8.78281227891213*^-6, "f2mhd" -> 0.03932114841096652, "Amhd" -> 
       0.00435731177561978, 
       "h2Omega" -> <|
        "Soundwaves" -> (
          6.364816488961093*^-14 #^3 ((1 + 78258.76385491327 #^2)^(-1)/(1 + 
           2.58976956856626*^6 #^4))& ), 
         "Turbulence" -> (
          3.080874519455274*^-13 #^3 (1 + 
            1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
            1.6806047957030093`*^20 #^4)^Rational[-1, 2]& ), 
         "Combined" -> (#^3 (
           6.364816488961093*^-14 ((1 + 78258.76385491327 #^2)^(-1)/(1 + 
             2.58976956856626*^6 #^4)) + 
           3.080874519455274*^-13 (1 + 
              1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
              1.6806047957030093`*^20 #^4)^Rational[-1, 2])& )|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[56.00000000000001], 
         TypeSystem`PackageScope`UnknownShape[False]]], 18, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 18], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[56.00000000000001], 
         TypeSystem`PackageScope`UnknownShape[False]]], 18, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 18], "Path" -> {}, 
     "DisplayedRowCount" -> 18, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     18, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Kappa]col", 
                  Style[
                  "\[Kappa]col", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Kappa]col"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]col"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "Indeterminate", FontFamily -> "Source Code Pro", FontSize -> 
                 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]col"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Kcol", 
                  Style[
                  "Kcol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Kcol"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Kcol"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "Indeterminate", FontFamily -> "Source Code Pro", FontSize -> 
                 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Kcol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]eff", 
                  Style[
                  "\[Alpha]eff", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Alpha]eff"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]eff"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00154779"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]eff"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Kappa]sw", 
                  Style[
                  "\[Kappa]sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Kappa]sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00277778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ksw", 
                  Style[
                  "Ksw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ksw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ksw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000257566"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ksw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fp", 
                  Style[
                  "fp", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["fp"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["fp"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00518105"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["fp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Treh", 
                  Style[
                  "Treh", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Treh"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Treh"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["168.431"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Treh"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["H*0", 
                  Style[
                  "H*0", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["H*0"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H*0"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000280844"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H*0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HR", 
                  Style[
                  "HR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HR"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HR"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00157192"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f1sw", 
                  Style[
                  "f1sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f1sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00357465"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f2sw", 
                  Style[
                  "f2sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f2sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0249278"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CurlyEpsilon]", 
                  Style[
                  "\[CurlyEpsilon]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CurlyEpsilon]"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CurlyEpsilon]"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CurlyEpsilon]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[ScriptCapitalN]", 
                  Style[
                  "\[ScriptCapitalN]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[ScriptCapitalN]"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[ScriptCapitalN]"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[ScriptCapitalN]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalOmega]s", 
                  Style[
                  "\[CapitalOmega]s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CapitalOmega]s"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalOmega]s"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000128783"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalOmega]s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f1mhd", 
                  Style[
                  "f1mhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f1mhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1mhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000878281"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1mhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f2mhd", 
                  Style[
                  "f2mhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f2mhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2mhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0393211"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2mhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Amhd", 
                  Style[
                  "Amhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Amhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Amhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00435731"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Amhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["h2Omega", 
                  Style[
                  "h2Omega", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["h2Omega"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h2Omega"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"Soundwaves" -> (
                    6.364816488961093*^-14 #^3 ((1 + 
                    78258.76385491327 #^2)^(-1)/(1 + 
                    2.58976956856626*^6 #^4))& ), 
                    "Turbulence" -> (
                    3.080874519455274*^-13 #^3 (1 + 
                    1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
                    1.6806047957030093`*^20 #^4)^Rational[-1, 2]& ), 
                    "Combined" -> (#^3 (
                    6.364816488961093*^-14 ((1 + 78258.76385491327 #^2)^(-1)/(
                    1 + 2.58976956856626*^6 #^4)) + 
                    3.080874519455274*^-13 (1 + 
                    1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
                    1.6806047957030093`*^20 #^4)^Rational[-1, 2])& )|>, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"Soundwaves" -> (
                    6.364816488961093*^-14 #^3 ((1 + 
                    78258.76385491327 #^2)^(-1)/(1 + 
                    2.58976956856626*^6 #^4))& ), 
                    "Turbulence" -> (
                    3.080874519455274*^-13 #^3 (1 + 
                    1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
                    1.6806047957030093`*^20 #^4)^Rational[-1, 2]& ), 
                    "Combined" -> (#^3 (
                    6.364816488961093*^-14 ((1 + 78258.76385491327 #^2)^(-1)/(
                    1 + 2.58976956856626*^6 #^4)) + 
                    3.080874519455274*^-13 (1 + 
                    1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
                    1.6806047957030093`*^20 #^4)^Rational[-1, 2])& )|>, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["h2Omega"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h2Omega"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1197., {265.8515625, 271.1484375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1197., {265.8515625, 271.1484375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[5]=",
 CellID->555644279,ExpressionUUID->"b4693e49-004f-2f4d-8911-f6248b97b5ed"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GWData"]], "paclet:PT2GW/ref/GWData", "PT2GW Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b0a059c2-f3d6-f546-a0fb-ee385fdd73fa"],
 " matches the output of ComputeGW:"
}], "ExampleText",
 CellID->1147522641,ExpressionUUID->"fd75679c-93f1-d847-a4cf-9547d35cb1b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gwData", "==", "GWData"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[6]:=",
 CellID->685969004,ExpressionUUID->"badad2fc-3eec-fe41-8f32-a2b28c36cb55"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[6]=",
 CellID->483517730,ExpressionUUID->"92242ec9-f0d6-0448-9b7b-da7ac195d373"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"dca18e90-7fdd-4d9f-ba31-785b55a8c385"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"00d4b9e1-b1b1-4f39-98dd-22f894814c95"],
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(7)", "ExampleCount",ExpressionUUID->
  "11689c78-291c-4796-8fef-d3c2902e5da6"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->2064310248,ExpressionUUID->"d9be4058-e3a2-40a8-8ac1-25d87aab02f8"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"97ded803-f2ac-43b6-93b9-35b035214eb9"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"e7ee02fc-875d-48f7-a7dc-48bb38c3edcb"],
 "\"CollisionData\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",ExpressionUUID->
  "b12f568b-fb57-4582-b4c7-8161b0666c9a"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1151142186,ExpressionUUID->"0409f560-54cf-4fc5-aee8-02e3ed9a7393"],

Cell["\<\
To add the contribution from bubble wall collisions, we must include, to the \
least, the following information:
\[Bullet] a bosonic mass function
\[Bullet] a gauge coupling value
\[Bullet] characteristic temperatures for bubble growth, T0 and T* (see \
1903.09642)\
\>", "ExampleText",
 CellID->130795962,ExpressionUUID->"24d76ea6-5e9c-a94c-bcd0-cf076319bee2"],

Cell[TextData[{
 "Load the benchmark for the ",
 ButtonBox["fluid-field model",
  BaseStyle->"Link",
  ButtonData->"paclet:PT2GW/tutorial/CoupledFluid-FieldModel"],
 ":"
}], "ExampleText",
 CellID->49741612,ExpressionUUID->"533b7177-be9a-f347-8ad8-1d8352cd600e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V", "=", 
  RowBox[{"CFFModel", "[", "idx", "]"}]}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[1]:=",
 CellID->146660263,ExpressionUUID->"e97308b5-972c-4045-9f81-a898dc77faf4"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Phi]$", ",", "T$"}], "}"}], ",", 
   RowBox[{
    RowBox[{"0.027777777777777776`", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "19600.`"}], "+", 
       SuperscriptBox["T$", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Phi]$", "2"]}], "-", 
    RowBox[{"0.014640174352631385`", " ", "T$", " ", 
     SuperscriptBox["\[Phi]$", "3"]}], "+", 
    RowBox[{"0.0038580246913580245`", " ", 
     SuperscriptBox["\[Phi]$", "4"]}]}]}], "]"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->12849945,ExpressionUUID->"158f437f-1ab8-cf45-b771-5584f566f15d"]
}, Open  ]],

Cell["Compute the mass function with a second derivative:", "ExampleText",
 CellID->555880485,ExpressionUUID->"3f1bbc1a-3149-144a-b027-04f3e6abd233"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "MassFunction", " ", "is", " ", "just", " ", "the", " ", "square", " ", 
     "root", " ", "of", " ", "the", " ", "second", " ", "field"}], "-", 
    RowBox[{"derivative", ":", " ", 
     RowBox[{
      RowBox[{"\[PartialD]", 
       RowBox[{"_\[Phi]", "^", "2"}]}], " ", "V", 
      RowBox[{"(", 
       RowBox[{"\[Phi]", ",", "T"}], ")"}]}]}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"m\[Phi]", "=", 
     RowBox[{"MassFunction", "[", "V", "]"}]}], ";"}], "\n", 
   RowBox[{"m\[Phi]", "[", 
    RowBox[{"\[Phi]", ",", "T"}], "]"}]}]}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[2]:=",
 CellID->1855751815,ExpressionUUID->"fe973c8a-ad7b-a847-bada-3c0edaf055fc"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   RowBox[{"0.05555555555555555`", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "19600.`"}], "+", 
      SuperscriptBox["T", "2"]}], ")"}]}], "-", 
   RowBox[{"0.0878410461157883`", " ", "T", " ", "\[Phi]"}], "+", 
   RowBox[{"0.046296296296296294`", " ", 
    SuperscriptBox["\[Phi]", "2"]}]}]]], "Output",
 CellLabel->"Out[2]=",
 CellID->253923255,ExpressionUUID->"fcc103df-7275-c746-802a-9d6b854a52f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"m\[Phi]", "[", 
       RowBox[{
        RowBox[{"#", "[", "T", "]"}], ",", " ", "T"}], "]"}], " ", "&"}], " ",
      "/@", " ", 
     RowBox[{"tr", "[", "\"\<Phases\>\"", "]"}]}], " ", "//", " ", 
    "Evaluate"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"T", ",", " ", "100", ",", " ", "200"}], "}"}]}], "]"}]], "Input",\

 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[3]:=",
 CellID->925166502,ExpressionUUID->"b122b058-6f92-7544-8173-cee7a2fe3ca3"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwVkWk01HsAhi2hhBCulBhbsrQgijJvdOmISvdWtrp+fzP8KakjFVGUtCAm
hcbamVLJ0jIRWUJTqZF1kjKkzOV2I0ULotv98J7nPF+eLy+DCtvClpGSktr5
a/+zzGdCJB1LoLJ94uIr+xLmTIZyzftfzpFz0+DukDCD58k9+BFH8HjivSFv
/0fmU7WpOpXjBHZ0sueZY6NMC8UvDfrxBD1hVdaZN74yk2WGBFYnCHzTPWvU
9o0zhyf6H69LIGg/6RV3bWSSuXm0u3HbSYLnFL+J7zDNVO8XNkWdJmAGiYz4
S6QR3v2wOekMAc+06Gmhvgw6OqpacxMJNghcqorlZZEhKBLVJxOUh1qKp/gz
sOBqkljxHIFH+dvSjeUKiMmL712QRpDJe9ZlHjwTPRnRfUvOE0wfa2oz0ZqF
/FO7JVvSCapO2/NHKUUYh7gPcbkEr6tcglRblLD3q/bnq1kE/hv8dzX4K6Py
mOQrP5sgxuVLeMOwMjZnHZFqziXQbX1q6Sg7B9HCm3NleQRDLz6y606pomOJ
pv2uGwQTCe7uLbvUoXe/z/FQEcEyjjS39bI6QlxLnE8UEygsOzu5WKwOKX9X
j7xSAtf6VoVvG+bCghPp337n1x8TL7nnDDQQPypOcKgi0Ji26j5Zronmo4WJ
66sJGqLXmRkPakJH6WDq1hqCWR/P+fhoa+GmkSo37AGB9TlNUfpBLXRvdSrm
PSTQMgjnZC3/Ddb3CtpnNxHkzrMIKLigjbfRYfrdYgJSw1s7bjofF21Y2p09
BPJV3pc4HvOx+YOXalsvQfa7OOvJffNR6+sk9aSPoC/ySfO6yvnIttd8c0dC
sMqoR0WwfgG2f6/MSxwimMoXnJLbqQthuLyewxRBuMKhSNtQPZSH5OhyF1Bw
HzkSrcFlYMvJWrtCXQp/li3VzL7OwDCvz7NyIYWujawJrQoGTMTGCa/0Kci9
PrhkoJOB9E0lwzrGFJKv9N0f0zDAfpva2ixLCh6NVyp7kgxgNf2G5DhS2F2h
fPv6fkOUcIwK8v0piG5Zzeg0NUZ1Wtl3w3wKsfXJ6TZKpliTGipF91Bwo1Nk
i7PM0CuISRtjBODLoT1z1ppZ4uKLzJEp/wC8HBj8xGYtRYS+ctemKwEoupR8
K0u0DPWsggPUYAC8Q/f52UqWwyTereeTCQtOkaZ59Z1WKO52bW0MYeFmbmpU
U4c1NqhuPruwkIXEAfV9/9yzgY9jjJTNIAvNThZp/ZwVSLwiO80xZ4NREfr1
0QFbdAycF+wOYaM0lHftpYsdmAFHtVNL2LAaCM6YY7gS9RX7VywbZqPGye6q
2YeVKFNMUeBYBCJiVHf4cPEqCM/LsO33BiJn7RlXHLbHxHhskn9pIEru2r74
184BbplezObRQBgzG/WkpVdj9vKtV6dtgzDQcPqTa8Nq9F/26yqMCELJnsGk
9xFr0OtZnZ5XEQQ3hzV6UzaO+NxlulBtPAj5QzvrNCSOiPCr8HG2oyFW+P0W
P4UJHW2eQU0UDacxQbSfIdBZksG/W0FjWybLuP0gELOcL35eSaPSfJG3WyRg
yG+RH7xPw8fcOrouCgirmOWtU0MjcO2q1NIYQOHh4akj9TQkhlEjZ44Ddl1/
uax/RkOn5cYFxxQgQ9b05atuGuwbvpyLBcCahHXSY2Iaq4OEZSrXgHcziZly
L423QjXh8evAUhVuNLOPxqxE80ehRcBjbSXGZQmNeHO1cdwGvlmOBIcO0zD0
2rKjvxrIuamUlvCRRra8wjGvWsDZenFV3ggNm4j2dOEDIGUlpdL2mQZT72Eq
vwFY5Nxx2/YbDWWjQ4+ONwJNgpHXm77TMPbbufvbUyB8vbJc8PivnnOMzC4h
UOvhsj1rksZYZMRPz2aA3ULF8n/QSPi0LVDQAsz+4+j1pika3cFx1SvbgFui
rLa/p2n4jn6fUdQObPe6N/nzJ43O7LrVeiLgPwvVuTU=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJwVzX040wkAB/DtWHRaddUtdFx6EaXUXcnVo99XZttvpRe9MIltbPtR4q66
SuhFp1vnMTsqTY7CqnWoOG4pytOcTpi3nNq4KOmeSJrycnK7P77P9/k83z++
TuJof8knNBrNz5z/23+zwppGEyDZuDw3ZSYfqYONSe/pAuQm5skPmd1wdhaj
z0KAGc2bREKzNxou0J9YCcD093m+wmxORN5o8TQBNtIVni0z+FibqH0t+1KA
3uGHdiyzF5R16xvWCfBrubwsZTofQ46eF7LjzX8tOxduY/JhFKZBzwhC+qKK
HScY5j3QMm70VBCEqYnl7uMk+n0rndT0XfjTw7F/qonEkny3jq4fd+Fl0SyN
zSsSGbeLltlZBcPlrHKg2EiCv/7F2b8VwUh4r/P9Rk/CWBEuc2XthstF/ruq
+ySy34482pO2G0fyCioXFpNQn/MmiTkhoB+Rb7e5TMLw9hfBFFUInJu0Hh2p
JEzenJYgVijGC042GxNIbLHMkazJCkXWNj/viQgSURWndXKmEHWHqvVrd5Bo
Lc7ortgqxHV2/FyuF4mC3PrSknQhNBPKfGIBiax907YvahbiVaj10UQbEkXf
XYvrYonAqlmmc3jDQ/vWTdH2O0W4dOZkDKuZh4WRG/tUKhEe162cPnGLh664
6LkGowhtBfmmQiUPZZFZDqovxNhr3TjRF8NDoXKBOkcoxhalwe7UBh7uppUO
z88R4yuJfI/WmQev1Cga1SFGdubTpY9pPHTq4tNMTmFIDXCQZLZyceFxxsC4
MAylT5e/drvOxcG5zPbN+WGQ7u/dVxvLRVW4+ntxbxi232T/XMnjwvkUv+Ot
czgqb10c1MzmosDAbXwYGQ6TZe3A9U4ONkzfkuKoCcfI4QMNeVc5CFoXT1vZ
G44WZleSKZqDn/ItPiqXSLBafyNrsTsHLS/TdXsjJVDNPjFn3xtfEGHHbFML
JbBg2tbHqn1RpT2wanm/BDNbn9/bH+KL0k8VVko3KWKmBcYaZ/riUfonkjUx
Uozy7QYdKtgYHTmeLCySIrRxco99BBv8jECi4Z0Uhz/fc2Z4Ehs2K3Zc+egh
Q0z53rK2bB88zwtu1xyUIffhZadmTx90br17LlsrQ5Nrj05zbz0G210cPxuR
4dkM2roQ7nocDNYG+aym8M6fwTpW7Q1729x5FbEUOOf+UR9Y6o22wvMlv2kp
0GNXBmQpgPgVJcb62xSiWHcUpcnA/BL9pN5yCjHsB8J6ORCtnSywr6BQknK6
eiQRsHpwdDyhikIzpT5EHAZWt4dyeLUUumtWOf4gBM5buPz1xEBBWloU3O8O
eCWx6SYjBV5j9+U2N6DbWrSY2UnhCLfPr9IVcJ+qiiOeUYieh1r5fOAP2ylO
eS8o6Lyk7jazgQ9LByKi+ikkJsteHx0jkHVjSlrSGwrEeUt/uyECPl+73ske
oHDJxGIX9xNQeIqnNg1SONnDu2t4RmCRT8stjw8UREajglFDoE438HTzMIX7
YwEvku4T2M9jMiJGKAw5NORblhOo9OMEZI5RqKsR7BwqICDRi4+X/EshN0Dj
RV0hYLPt2LW6cQpj1d8mtOUQuNma2dTzkcLVJM9ZPioCAYG/j01MUKhiJIxq
0gj8B2LON70=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    StyleBox[
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJwVkWk01HsAhi2hhBCulBhbsrQgijJvdOmISvdWtrp+fzP8KakjFVGUtCAm
hcbamVLJ0jIRWUJTqZF1kjKkzOV2I0ULotv98J7nPF+eLy+DCtvClpGSktr5
a/+zzGdCJB1LoLJ94uIr+xLmTIZyzftfzpFz0+DukDCD58k9+BFH8HjivSFv
/0fmU7WpOpXjBHZ0sueZY6NMC8UvDfrxBD1hVdaZN74yk2WGBFYnCHzTPWvU
9o0zhyf6H69LIGg/6RV3bWSSuXm0u3HbSYLnFL+J7zDNVO8XNkWdJmAGiYz4
S6QR3v2wOekMAc+06Gmhvgw6OqpacxMJNghcqorlZZEhKBLVJxOUh1qKp/gz
sOBqkljxHIFH+dvSjeUKiMmL712QRpDJe9ZlHjwTPRnRfUvOE0wfa2oz0ZqF
/FO7JVvSCapO2/NHKUUYh7gPcbkEr6tcglRblLD3q/bnq1kE/hv8dzX4K6Py
mOQrP5sgxuVLeMOwMjZnHZFqziXQbX1q6Sg7B9HCm3NleQRDLz6y606pomOJ
pv2uGwQTCe7uLbvUoXe/z/FQEcEyjjS39bI6QlxLnE8UEygsOzu5WKwOKX9X
j7xSAtf6VoVvG+bCghPp337n1x8TL7nnDDQQPypOcKgi0Ji26j5Zronmo4WJ
66sJGqLXmRkPakJH6WDq1hqCWR/P+fhoa+GmkSo37AGB9TlNUfpBLXRvdSrm
PSTQMgjnZC3/Ddb3CtpnNxHkzrMIKLigjbfRYfrdYgJSw1s7bjofF21Y2p09
BPJV3pc4HvOx+YOXalsvQfa7OOvJffNR6+sk9aSPoC/ySfO6yvnIttd8c0dC
sMqoR0WwfgG2f6/MSxwimMoXnJLbqQthuLyewxRBuMKhSNtQPZSH5OhyF1Bw
HzkSrcFlYMvJWrtCXQp/li3VzL7OwDCvz7NyIYWujawJrQoGTMTGCa/0Kci9
PrhkoJOB9E0lwzrGFJKv9N0f0zDAfpva2ixLCh6NVyp7kgxgNf2G5DhS2F2h
fPv6fkOUcIwK8v0piG5Zzeg0NUZ1Wtl3w3wKsfXJ6TZKpliTGipF91Bwo1Nk
i7PM0CuISRtjBODLoT1z1ppZ4uKLzJEp/wC8HBj8xGYtRYS+ctemKwEoupR8
K0u0DPWsggPUYAC8Q/f52UqWwyTereeTCQtOkaZ59Z1WKO52bW0MYeFmbmpU
U4c1NqhuPruwkIXEAfV9/9yzgY9jjJTNIAvNThZp/ZwVSLwiO80xZ4NREfr1
0QFbdAycF+wOYaM0lHftpYsdmAFHtVNL2LAaCM6YY7gS9RX7VywbZqPGye6q
2YeVKFNMUeBYBCJiVHf4cPEqCM/LsO33BiJn7RlXHLbHxHhskn9pIEru2r74
184BbplezObRQBgzG/WkpVdj9vKtV6dtgzDQcPqTa8Nq9F/26yqMCELJnsGk
9xFr0OtZnZ5XEQQ3hzV6UzaO+NxlulBtPAj5QzvrNCSOiPCr8HG2oyFW+P0W
P4UJHW2eQU0UDacxQbSfIdBZksG/W0FjWybLuP0gELOcL35eSaPSfJG3WyRg
yG+RH7xPw8fcOrouCgirmOWtU0MjcO2q1NIYQOHh4akj9TQkhlEjZ44Ddl1/
uax/RkOn5cYFxxQgQ9b05atuGuwbvpyLBcCahHXSY2Iaq4OEZSrXgHcziZly
L423QjXh8evAUhVuNLOPxqxE80ehRcBjbSXGZQmNeHO1cdwGvlmOBIcO0zD0
2rKjvxrIuamUlvCRRra8wjGvWsDZenFV3ggNm4j2dOEDIGUlpdL2mQZT72Eq
vwFY5Nxx2/YbDWWjQ4+ONwJNgpHXm77TMPbbufvbUyB8vbJc8PivnnOMzC4h
UOvhsj1rksZYZMRPz2aA3ULF8n/QSPi0LVDQAsz+4+j1pika3cFx1SvbgFui
rLa/p2n4jn6fUdQObPe6N/nzJ43O7LrVeiLgPwvVuTU=
              "]]}, "Charting`Private`Tag#1"], 
           Annotation[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Line[CompressedData["
1:eJwVzX040wkAB/DtWHRaddUtdFx6EaXUXcnVo99XZttvpRe9MIltbPtR4q66
SuhFp1vnMTsqTY7CqnWoOG4pytOcTpi3nNq4KOmeSJrycnK7P77P9/k83z++
TuJof8knNBrNz5z/23+zwppGEyDZuDw3ZSYfqYONSe/pAuQm5skPmd1wdhaj
z0KAGc2bREKzNxou0J9YCcD093m+wmxORN5o8TQBNtIVni0z+FibqH0t+1KA
3uGHdiyzF5R16xvWCfBrubwsZTofQ46eF7LjzX8tOxduY/JhFKZBzwhC+qKK
HScY5j3QMm70VBCEqYnl7uMk+n0rndT0XfjTw7F/qonEkny3jq4fd+Fl0SyN
zSsSGbeLltlZBcPlrHKg2EiCv/7F2b8VwUh4r/P9Rk/CWBEuc2XthstF/ruq
+ySy34482pO2G0fyCioXFpNQn/MmiTkhoB+Rb7e5TMLw9hfBFFUInJu0Hh2p
JEzenJYgVijGC042GxNIbLHMkazJCkXWNj/viQgSURWndXKmEHWHqvVrd5Bo
Lc7ortgqxHV2/FyuF4mC3PrSknQhNBPKfGIBiax907YvahbiVaj10UQbEkXf
XYvrYonAqlmmc3jDQ/vWTdH2O0W4dOZkDKuZh4WRG/tUKhEe162cPnGLh664
6LkGowhtBfmmQiUPZZFZDqovxNhr3TjRF8NDoXKBOkcoxhalwe7UBh7uppUO
z88R4yuJfI/WmQev1Cga1SFGdubTpY9pPHTq4tNMTmFIDXCQZLZyceFxxsC4
MAylT5e/drvOxcG5zPbN+WGQ7u/dVxvLRVW4+ntxbxi232T/XMnjwvkUv+Ot
czgqb10c1MzmosDAbXwYGQ6TZe3A9U4ONkzfkuKoCcfI4QMNeVc5CFoXT1vZ
G44WZleSKZqDn/ItPiqXSLBafyNrsTsHLS/TdXsjJVDNPjFn3xtfEGHHbFML
JbBg2tbHqn1RpT2wanm/BDNbn9/bH+KL0k8VVko3KWKmBcYaZ/riUfonkjUx
Uozy7QYdKtgYHTmeLCySIrRxco99BBv8jECi4Z0Uhz/fc2Z4Ehs2K3Zc+egh
Q0z53rK2bB88zwtu1xyUIffhZadmTx90br17LlsrQ5Nrj05zbz0G210cPxuR
4dkM2roQ7nocDNYG+aym8M6fwTpW7Q1729x5FbEUOOf+UR9Y6o22wvMlv2kp
0GNXBmQpgPgVJcb62xSiWHcUpcnA/BL9pN5yCjHsB8J6ORCtnSywr6BQknK6
eiQRsHpwdDyhikIzpT5EHAZWt4dyeLUUumtWOf4gBM5buPz1xEBBWloU3O8O
eCWx6SYjBV5j9+U2N6DbWrSY2UnhCLfPr9IVcJ+qiiOeUYieh1r5fOAP2ylO
eS8o6Lyk7jazgQ9LByKi+ikkJsteHx0jkHVjSlrSGwrEeUt/uyECPl+73ske
oHDJxGIX9xNQeIqnNg1SONnDu2t4RmCRT8stjw8UREajglFDoE438HTzMIX7
YwEvku4T2M9jMiJGKAw5NORblhOo9OMEZI5RqKsR7BwqICDRi4+X/EshN0Dj
RV0hYLPt2LW6cQpj1d8mtOUQuNma2dTzkcLVJM9ZPioCAYG/j01MUKhiJIxq
0gj8B2LON70=
              "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PanelPlotLayout" -> <||>, 
           "PlotRange" -> {{100, 200}, {0., 52.15279044996268}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {100.00000000000023`, 0}, 
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
           "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PanelPlotLayout" -> <||>, 
          "PlotRange" -> {{100, 200}, {0., 52.15279044996268}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {100.00000000000023`, 0}, 
          "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}],
     Selectable->False]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwVkWk01HsAhi2hhBCulBhbsrQgijJvdOmISvdWtrp+fzP8KakjFVGUtCAm
hcbamVLJ0jIRWUJTqZF1kjKkzOV2I0ULotv98J7nPF+eLy+DCtvClpGSktr5
a/+zzGdCJB1LoLJ94uIr+xLmTIZyzftfzpFz0+DukDCD58k9+BFH8HjivSFv
/0fmU7WpOpXjBHZ0sueZY6NMC8UvDfrxBD1hVdaZN74yk2WGBFYnCHzTPWvU
9o0zhyf6H69LIGg/6RV3bWSSuXm0u3HbSYLnFL+J7zDNVO8XNkWdJmAGiYz4
S6QR3v2wOekMAc+06Gmhvgw6OqpacxMJNghcqorlZZEhKBLVJxOUh1qKp/gz
sOBqkljxHIFH+dvSjeUKiMmL712QRpDJe9ZlHjwTPRnRfUvOE0wfa2oz0ZqF
/FO7JVvSCapO2/NHKUUYh7gPcbkEr6tcglRblLD3q/bnq1kE/hv8dzX4K6Py
mOQrP5sgxuVLeMOwMjZnHZFqziXQbX1q6Sg7B9HCm3NleQRDLz6y606pomOJ
pv2uGwQTCe7uLbvUoXe/z/FQEcEyjjS39bI6QlxLnE8UEygsOzu5WKwOKX9X
j7xSAtf6VoVvG+bCghPp337n1x8TL7nnDDQQPypOcKgi0Ji26j5Zronmo4WJ
66sJGqLXmRkPakJH6WDq1hqCWR/P+fhoa+GmkSo37AGB9TlNUfpBLXRvdSrm
PSTQMgjnZC3/Ddb3CtpnNxHkzrMIKLigjbfRYfrdYgJSw1s7bjofF21Y2p09
BPJV3pc4HvOx+YOXalsvQfa7OOvJffNR6+sk9aSPoC/ySfO6yvnIttd8c0dC
sMqoR0WwfgG2f6/MSxwimMoXnJLbqQthuLyewxRBuMKhSNtQPZSH5OhyF1Bw
HzkSrcFlYMvJWrtCXQp/li3VzL7OwDCvz7NyIYWujawJrQoGTMTGCa/0Kci9
PrhkoJOB9E0lwzrGFJKv9N0f0zDAfpva2ixLCh6NVyp7kgxgNf2G5DhS2F2h
fPv6fkOUcIwK8v0piG5Zzeg0NUZ1Wtl3w3wKsfXJ6TZKpliTGipF91Bwo1Nk
i7PM0CuISRtjBODLoT1z1ppZ4uKLzJEp/wC8HBj8xGYtRYS+ctemKwEoupR8
K0u0DPWsggPUYAC8Q/f52UqWwyTereeTCQtOkaZ59Z1WKO52bW0MYeFmbmpU
U4c1NqhuPruwkIXEAfV9/9yzgY9jjJTNIAvNThZp/ZwVSLwiO80xZ4NREfr1
0QFbdAycF+wOYaM0lHftpYsdmAFHtVNL2LAaCM6YY7gS9RX7VywbZqPGye6q
2YeVKFNMUeBYBCJiVHf4cPEqCM/LsO33BiJn7RlXHLbHxHhskn9pIEru2r74
184BbplezObRQBgzG/WkpVdj9vKtV6dtgzDQcPqTa8Nq9F/26yqMCELJnsGk
9xFr0OtZnZ5XEQQ3hzV6UzaO+NxlulBtPAj5QzvrNCSOiPCr8HG2oyFW+P0W
P4UJHW2eQU0UDacxQbSfIdBZksG/W0FjWybLuP0gELOcL35eSaPSfJG3WyRg
yG+RH7xPw8fcOrouCgirmOWtU0MjcO2q1NIYQOHh4akj9TQkhlEjZ44Ddl1/
uax/RkOn5cYFxxQgQ9b05atuGuwbvpyLBcCahHXSY2Iaq4OEZSrXgHcziZly
L423QjXh8evAUhVuNLOPxqxE80ehRcBjbSXGZQmNeHO1cdwGvlmOBIcO0zD0
2rKjvxrIuamUlvCRRra8wjGvWsDZenFV3ggNm4j2dOEDIGUlpdL2mQZT72Eq
vwFY5Nxx2/YbDWWjQ4+ONwJNgpHXm77TMPbbufvbUyB8vbJc8PivnnOMzC4h
UOvhsj1rksZYZMRPz2aA3ULF8n/QSPi0LVDQAsz+4+j1pika3cFx1SvbgFui
rLa/p2n4jn6fUdQObPe6N/nzJ43O7LrVeiLgPwvVuTU=
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwVzX040wkAB/DtWHRaddUtdFx6EaXUXcnVo99XZttvpRe9MIltbPtR4q66
SuhFp1vnMTsqTY7CqnWoOG4pytOcTpi3nNq4KOmeSJrycnK7P77P9/k83z++
TuJof8knNBrNz5z/23+zwppGEyDZuDw3ZSYfqYONSe/pAuQm5skPmd1wdhaj
z0KAGc2bREKzNxou0J9YCcD093m+wmxORN5o8TQBNtIVni0z+FibqH0t+1KA
3uGHdiyzF5R16xvWCfBrubwsZTofQ46eF7LjzX8tOxduY/JhFKZBzwhC+qKK
HScY5j3QMm70VBCEqYnl7uMk+n0rndT0XfjTw7F/qonEkny3jq4fd+Fl0SyN
zSsSGbeLltlZBcPlrHKg2EiCv/7F2b8VwUh4r/P9Rk/CWBEuc2XthstF/ruq
+ySy34482pO2G0fyCioXFpNQn/MmiTkhoB+Rb7e5TMLw9hfBFFUInJu0Hh2p
JEzenJYgVijGC042GxNIbLHMkazJCkXWNj/viQgSURWndXKmEHWHqvVrd5Bo
Lc7ortgqxHV2/FyuF4mC3PrSknQhNBPKfGIBiax907YvahbiVaj10UQbEkXf
XYvrYonAqlmmc3jDQ/vWTdH2O0W4dOZkDKuZh4WRG/tUKhEe162cPnGLh664
6LkGowhtBfmmQiUPZZFZDqovxNhr3TjRF8NDoXKBOkcoxhalwe7UBh7uppUO
z88R4yuJfI/WmQev1Cga1SFGdubTpY9pPHTq4tNMTmFIDXCQZLZyceFxxsC4
MAylT5e/drvOxcG5zPbN+WGQ7u/dVxvLRVW4+ntxbxi232T/XMnjwvkUv+Ot
czgqb10c1MzmosDAbXwYGQ6TZe3A9U4ONkzfkuKoCcfI4QMNeVc5CFoXT1vZ
G44WZleSKZqDn/ItPiqXSLBafyNrsTsHLS/TdXsjJVDNPjFn3xtfEGHHbFML
JbBg2tbHqn1RpT2wanm/BDNbn9/bH+KL0k8VVko3KWKmBcYaZ/riUfonkjUx
Uozy7QYdKtgYHTmeLCySIrRxco99BBv8jECi4Z0Uhz/fc2Z4Ehs2K3Zc+egh
Q0z53rK2bB88zwtu1xyUIffhZadmTx90br17LlsrQ5Nrj05zbz0G210cPxuR
4dkM2roQ7nocDNYG+aym8M6fwTpW7Q1729x5FbEUOOf+UR9Y6o22wvMlv2kp
0GNXBmQpgPgVJcb62xSiWHcUpcnA/BL9pN5yCjHsB8J6ORCtnSywr6BQknK6
eiQRsHpwdDyhikIzpT5EHAZWt4dyeLUUumtWOf4gBM5buPz1xEBBWloU3O8O
eCWx6SYjBV5j9+U2N6DbWrSY2UnhCLfPr9IVcJ+qiiOeUYieh1r5fOAP2ylO
eS8o6Lyk7jazgQ9LByKi+ikkJsteHx0jkHVjSlrSGwrEeUt/uyECPl+73ske
oHDJxGIX9xNQeIqnNg1SONnDu2t4RmCRT8stjw8UREajglFDoE438HTzMIX7
YwEvku4T2M9jMiJGKAw5NORblhOo9OMEZI5RqKsR7BwqICDRi4+X/EshN0Dj
RV0hYLPt2LW6cQpj1d8mtOUQuNma2dTzkcLVJM9ZPioCAYG/j01MUKhiJIxq
0gj8B2LON70=
          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PanelPlotLayout" -> <||>, 
       "PlotRange" -> {{100, 200}, {0., 52.15279044996268}}, 
       "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {100.00000000000023`, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{100.00000000000023`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{100, 200}, {0., 52.15279044996268}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[3]=",
 CellID->65649865,ExpressionUUID->"c64bf0ed-f246-d34b-b6f0-fa0ae727d9f5"]
}, Open  ]],

Cell["The minimal collision data is then", "ExampleText",
 CellID->704656635,ExpressionUUID->"1d214be9-c325-bf47-bdba-d9699c6e7ea6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<GaugeCouplings\>\"", "->", 
      RowBox[{"{", "0.1", "}"}]}], ",", 
     RowBox[{"\"\<MassFunctions\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<Bosons\>\"", "->", 
        RowBox[{"{", "m\[Phi]", "}"}]}], "}"}]}], ",", 
     RowBox[{"\"\<T0\>\"", "->", 
      RowBox[{"tr", "[", "\"\<Tn\>\"", "]"}]}], ",", 
     RowBox[{"\"\<T\>\"", "->", 
      RowBox[{"tr", "[", "\"\<Tp\>\"", "]"}]}]}], "}"}]}], ";"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[4]:=",
 CellID->1455351019,ExpressionUUID->"258f1454-c0a7-b048-afdb-a242b0c03a17"],

Cell["\<\
To compute the contribution from collisions, pass the collision data \
(including the potential) to the  option \"CollisionData\":\
\>", "ExampleText",
 CellID->592835544,ExpressionUUID->"da9f8037-6685-f346-9c9e-a2a55f912ce2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeGW", "[", 
   RowBox[{
    RowBox[{"tr", "//", "Normal"}], ",", 
    RowBox[{"\"\<CollisionData\>\"", "->", 
     RowBox[{"colData", "~", "Join", "~", 
      RowBox[{"{", 
       RowBox[{"\"\<Potential\>\"", "->", "V"}], "}"}]}]}]}], "]"}], "//", 
  "Dataset"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[5]:=",
 CellID->1261580125,ExpressionUUID->"86e35daa-5e37-6a46-9313-591cad1b0dc6"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "\[Kappa]col" -> 2.20642202654342*^-11, "Kcol" -> 
       3.4097989163484976`*^-14, "\[Alpha]eff" -> 0.001547789373800279, 
       "\[Kappa]sw" -> 0.00277777755840571, "Ksw" -> 2.575662170071409*^-6, 
       "fp" -> 0.005181045518281545, "Treh" -> 168.43055531464088`, "H*0" -> 
       0.000028084382941009768`, "HR" -> 0.001571915849210865, "f1sw" -> 
       0.0035746498555424104`, "f2sw" -> 0.024927844057918605`, 
       "\[CurlyEpsilon]" -> 0.5, "\[ScriptCapitalN]" -> 2, "\[CapitalOmega]s" -> 
       1.2878310850357045`*^-6, "f1mhd" -> 8.782812278718911*^-6, "f2mhd" -> 
       0.03932114841096652, "Amhd" -> 0.00435731177561978, 
       "h2Omega" -> <|
        "Collisions" -> (
          1.7606000282709423`*^-37 (0.10206143878645296` #^(-0.6) + 
            56.436594158268406` #^0.6)^(-4.)& ), 
         "Soundwaves" -> (
          6.364816488400996*^-14 #^3 ((1 + 78258.76385491327 #^2)^(-1)/(1 + 
           2.58976956856626*^6 #^4))& ), 
         "Turbulence" -> (
          3.080874519319717*^-13 #^3 (1 + 
            1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
            1.6806047958509*^20 #^4)^Rational[-1, 2]& ), 
         "Combined" -> (
          1.7606000282709423`*^-37 (0.10206143878645296` #^(-0.6) + 
             56.436594158268406` #^0.6)^(-4.) + #^3 (
            6.364816488400996*^-14 ((1 + 78258.76385491327 #^2)^(-1)/(1 + 
              2.58976956856626*^6 #^4)) + 
            3.080874519319717*^-13 (1 + 
               1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
               1.6806047958509*^20 #^4)^Rational[-1, 2])& )|>, 
       "\[CapitalDelta]mf" -> {}, "\[CapitalDelta]mv" -> {22.56736917564518}, 
       "nF" -> 1, "nV" -> 1, "gaugeCoup" -> {0.1}, "\[CapitalDelta]m2" -> 
       509.2861515098602, "g2\[CapitalDelta]mv" -> 0.22567369175645183`, "R0" -> 
       0.014511166918303564`, "R*" -> 3.945597239100717*^10, 
       "\[Alpha]\[Infinity]" -> 0.00002131563761624869, "\[Alpha]eq" -> 
       0.000038166435172738577`, "\[Gamma]eq" -> 39.995187638286616`, 
       "\[Gamma]*" -> 1.8126716991192778`*^12|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[56.00000000000001], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 31], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[56.00000000000001], 
         TypeSystem`PackageScope`UnknownShape[False]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 31], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     31, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Kappa]col", 
                  Style[
                  "\[Kappa]col", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Kappa]col"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]col"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000220642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]col"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Kcol", 
                  Style[
                  "Kcol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Kcol"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Kcol"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000034098"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Kcol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]eff", 
                  Style[
                  "\[Alpha]eff", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Alpha]eff"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]eff"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00154779"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Alpha]eff"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Kappa]sw", 
                  Style[
                  "\[Kappa]sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[Kappa]sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00277778"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[Kappa]sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Ksw", 
                  Style[
                  "Ksw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Ksw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ksw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000257566"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Ksw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["fp", 
                  Style[
                  "fp", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["fp"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["fp"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00518105"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["fp"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Treh", 
                  Style[
                  "Treh", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Treh"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Treh"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["168.431"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Treh"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["H*0", 
                  Style[
                  "H*0", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["H*0"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H*0"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000280844"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["H*0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HR", 
                  Style[
                  "HR", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HR"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HR"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00157192"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HR"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f1sw", 
                  Style[
                  "f1sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f1sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00357465"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f2sw", 
                  Style[
                  "f2sw", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f2sw"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2sw"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0249278"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2sw"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CurlyEpsilon]", 
                  Style[
                  "\[CurlyEpsilon]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CurlyEpsilon]"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CurlyEpsilon]"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CurlyEpsilon]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[ScriptCapitalN]", 
                  Style[
                  "\[ScriptCapitalN]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[ScriptCapitalN]"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[ScriptCapitalN]"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[ScriptCapitalN]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalOmega]s", 
                  Style[
                  "\[CapitalOmega]s", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CapitalOmega]s"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalOmega]s"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000128783"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalOmega]s"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f1mhd", 
                  Style[
                  "f1mhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f1mhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1mhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000878281"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f1mhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["f2mhd", 
                  Style[
                  "f2mhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["f2mhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2mhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0393211"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["f2mhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Amhd", 
                  Style[
                  "Amhd", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Amhd"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Amhd"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00435731"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Amhd"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["h2Omega", 
                  Style[
                  "h2Omega", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["h2Omega"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h2Omega"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"Collisions" -> (
                    1.7606000282709423`*^-37 (0.10206143878645296` #^(-0.6) + 
                    56.436594158268406` #^0.6)^(-4.)& ), 
                    "Soundwaves" -> (
                    6.364816488400996*^-14 #^3 ((1 + 
                    78258.76385491327 #^2)^(-1)/(1 + 
                    2.58976956856626*^6 #^4))& ), 
                    "Turbulence" -> (
                    3.080874519319717*^-13 #^3 (1 + 
                    1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
                    1.6806047958509*^20 #^4)^Rational[-1, 2]& ), 
                    "Combined" -> (
                    1.7606000282709423`*^-37 (0.10206143878645296` #^(-0.6) + 
                    56.436594158268406` #^0.6)^(-4.) + #^3 (
                    6.364816488400996*^-14 ((1 + 78258.76385491327 #^2)^(-1)/(
                    1 + 2.58976956856626*^6 #^4)) + 
                    3.080874519319717*^-13 (1 + 
                    1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
                    1.6806047958509*^20 #^4)^Rational[-1, 2])& )|>, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"Collisions" -> (
                    1.7606000282709423`*^-37 (0.10206143878645296` #^(-0.6) + 
                    56.436594158268406` #^0.6)^(-4.)& ), 
                    "Soundwaves" -> (
                    6.364816488400996*^-14 #^3 ((1 + 
                    78258.76385491327 #^2)^(-1)/(1 + 
                    2.58976956856626*^6 #^4))& ), 
                    "Turbulence" -> (
                    3.080874519319717*^-13 #^3 (1 + 
                    1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
                    1.6806047958509*^20 #^4)^Rational[-1, 2]& ), 
                    "Combined" -> (
                    1.7606000282709423`*^-37 (0.10206143878645296` #^(-0.6) + 
                    56.436594158268406` #^0.6)^(-4.) + #^3 (
                    6.364816488400996*^-14 ((1 + 78258.76385491327 #^2)^(-1)/(
                    1 + 2.58976956856626*^6 #^4)) + 
                    3.080874519319717*^-13 (1 + 
                    1050.881349222809 #^2.15)^(-1.7054263565891472`) (1 + 
                    1.6806047958509*^20 #^4)^Rational[-1, 2])& )|>, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["h2Omega"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h2Omega"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalDelta]mf", 
                  Style[
                  "\[CapitalDelta]mf", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CapitalDelta]mf"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalDelta]mf"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalDelta]mv", 
                  Style[
                  "\[CapitalDelta]mv", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CapitalDelta]mv"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalDelta]mv"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{22.56736917564518}, ShowStringCharacters -> False], 
                  Style[
                   Style[{22.56736917564518}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["\[CapitalDelta]mv"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["\[CapitalDelta]mv"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 31, 1], {1, 31 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 31, 1], {1, 31 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[31, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[31, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 31, 1], {1, 31 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 31, 1], {1, 31 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1557., {308.8515625, 314.1484375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1557., {308.8515625, 314.1484375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[5]=",
 CellID->620016211,ExpressionUUID->"3e120742-a73f-a54f-a880-2554025bca15"]
}, Open  ]],

Cell["\<\
The gravitational wave spectrum now includes the contribution from bubble \
wall collisions:\
\>", "ExampleText",
 CellID->328228104,ExpressionUUID->"3f5d43b0-2603-3e4f-87dc-48fb2d576b00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotGW", "[", 
  RowBox[{"GWData", "[", "\"\<h2Omega\>\"", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[6]:=",
 CellID->976546084,ExpressionUUID->"994df300-1fff-e740-a727-ff4dced3d447"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnXt0FVW+55mZf+bP4b/5dxZ3rbtmzVp3rdHYo9P2ON09Ld33TntX91wv
znKN3aigaR9Nq6gdsZVHwEgMAkGjgAQChkcSHjGAPCIQgjwCxAgCxgDhFULe
xJA3Z37JT7abvXfVqTqn6pyqOt/PqpV1TtWuXbsKdn3Ob+9du/7Tk3/+/fR/
O2HChJf/Pf35/dTXfv7SS1P/+n/+A3159MWXs595cdrTv3nxlWnPTHvp/if/
Ha38j/9mwoRsSj/2OQYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAOxob
GysrK0vGoQ9tbW3y1traWlpPf5W9eD2hZ8j5+FjiRKFTO3nyZLpLAQAAIMSQ
R3Jzc6drrFixQgiUFElr8vPzlX1pDScm88rrOX1hYWGKzsExVM6ZM2caXQ8A
AAA4gbz5wgsvkObIJiIW2717N8uU/oqU9JWko+xO+9JK2rRp0yZ5PeVGKwMY
dbLToU4AAACJQUEle9PYgMkRpdAfy1RuyKW9OIEekPK+SigaBKBOAAAAycCx
oZVH2IzCiZyYAlJld/IjWZUULO/L0ajVcWkXilJpd/qrWFv0kNKBOIHRv7QX
56B3y+qHEDlQ4sLCQo6maVPjONyHy522cm72nb8AAAAyk1mzZtnHhqQMsVWP
10hA7EfSkxy6snOtOjo5SpWRI1b2mtL3qjT8sv4EpGlZ6LE7TpcTcA5KtmxM
PqK8Uj8EZ4LBRQAAAIzdl/bpld5P9iO7UliV5ajojCER0yZSNhuZ/rKkhByF
p1hh9JeblMXg3hUrVrBtOQdazz8A5I5aPgSv4RwIkV4uKn8VfbW8C/8SoILx
LhRv8hrK0/m1AgAAED1EwKWsL9EQmzg6489sKOFHcpPIim1obOHkg8pjirhl
VcS2cugn78KRKZtXKbMS5PKwJTmUZpXzQY3qVJxIGVICpfwsaP2MAAAAZA5W
6pyuITZxQyiHZhz9Cb/wuCD+TPKyCtDYfeRZvZdTHF3flzLkvlSWoN45KxJQ
efST4rBRBKG6Ou0foqHd6RcCG9kmGQAAgMjDltEbbGsllFBLjhlnjSM2cZMm
JeBsSaxWx5X7Osl3pC05xjTaXES7Siemrnguoc3RjerUXUyKp0x4+JPxVwQA
AIDMRG/bVJBbaBmWne5HDifJQUpDrhFupKVAVYhJ7uuMq04qgN6qzPrzRJ18
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
i5tSlQZhtqGIHPlwIk7k3cXpsBnliJg+TxpHnJpIzChtwskg/hvbu8w5ijqV
jk4mrjqTBxVToS4AYVFb160vT11ds/3UvJJcNp28vLg4TxEiLQUVP+GtC8t/
kV/28Lurp7799tvzCsspJqVgUyTLL//vSm7k0KKKE6ea2kZGb6fg1IJwecOF
JzW0p+/q5bY6ZRkeHVSS0Ro9Ge2rZ3its0FJRmtScFyHcD8mC05p3uSGUNl6
DJuLPztUpyIXOQGpSojJeIicnBwhO47y2IasSPmz8ex4d6FOTi+iSLm1VnG6
gC6IOAX+sUF5et7LKU9q52GeUGcASde9vbu3m3RZ/NnXM5d+IUz3XMESXZ2v
Fb1Mm2Ys2jt7ZS2lrzz4Xd2Z61+errkozcF+4cIFUqdoK+7uHWhovPFZbcOi
iiffq3hAzu2t1Y//cKyFuym3c82dvp4m1OkWT2rol2eK9P9IuptojZ6M9tUz
XLnrfyvJaE0KjpsAZBBuDmWVsDp1R8i6dKhOmwRGW8l7sey4SBTxcXMr+yt2
x2tKzykns+qvpHMUbbaUUjT2ckBtBV8Hpa+Tdtd/WiSM6Nz0KepMrME2eaBO
hRTf2y/faN7wxQcFZY9T2Dh1XrkSS06dW1GwOYtuI+9V/DS/7NEPt71WfmDl
sTN1N/vU3+0KijplhkaGa7+upqwoPqWcZyyerxyUpFzy+bqGpuN+nC/U6Rao
0yEcaRoHt7A+2GUBUSen4ViYtMXGpASsPwoD5d3ZmLSS0vNoXqXBNnbHtnT6
cmOvfO55JuQ2XtIl7SWau73t64xJHYiuRgfpeDJMKHmgToXU3Nu/Pn+6+PP5
+WWPyPcKxWKvLds/FlQeqjh76bTb/G3UKUN+3LT3q5cWV8vH/cOcyoVlD461
/ZY9snpXXuPVc4mepQGo0y1Qp0OsWmIZRZ1uG2yVZs+46ozbYBsbjw0pDXd0
ctus0Lre+qr0RfJKZZQs78Wb5DFF+u6x8bCXaB+HdlG6ZR2OVU4MCgn1B0yc
o6vT+HCKcfSsh0CdCr7e25tbesqqz81c+sULiwr0e8WbxVNp0/ItXx093dLd
O5DMgRyqU3CuuXPdzm+eW7ib1Pni+/lKwd4rf2TjF8UdPf3JFImBOt3iSQ0d
GLpJelKW0dsjSjJaoyejffUMe29dV5LRmhQc1wZ2BDlLDzy5M5EjO5thQsog
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
8E2SAZ3M8PBwV1fX4GCyray3hwY7Xv4n9QfA679POEPjwykXrl0Ym/V3069/
HIgrPTCb8+GBrQca27puJXEeISZzaigAISLaFXNoePTMhfYNu+vnrl40Z82U
gs1Z8qQ3vMxc+kVZ9bnz19qGO65RCHl2zeK+ig9vLv/b2EDWVx8ZbvpayZOH
sCrLzQ9e14/eu3I25UD5/NjEagpOg89w8zkqvwg/vy8zNLYMnthHPwDijjKy
f67zhwFF5T/764rn9J83C9au2LR/ZQBfNOMr0a6hIKooc+6JF6aE+oEUmUhW
TIpQ9tY1F5Qem75gJ92ExZsxaflo/b1rV927ZNasWR/VVOz7Vm4PHDi03TCE
9dB2PX8l5KS4rHfNghSeX9oY7Wzt/6KcTKpv6po39Ycu0aWv9O/fYhVBO5kS
YWhk+KvGS0UV9cqAojklj479I9Lvn/KIT3IoE8kaCqINT76nQz6FOgPFyOjt
81e7dx4+v3TT8Rfe2yPfb3NW/Knq/axvXrnv4vNZ9kNYKSQ0DGGtKtYPd2vX
p2SHsVE6rZe8nU8gpJBS1Uv39P03i97QU7qaTWhoePTLU1e5V1o8VCtPrb90
82snz7WG9GU0DolGDQWZA48I0v3I62fOnBkcdQqnK0WSBzXF3df/YnrMzb7B
ujPXN+3+puiDisKchStefvPzP/+hfMYLSivfs/lFNfOydCeOWe9uRtqu0fob
0x7ggTq9xfP6KlcaIyygMPTtSTFLg1iMkXhiE/HRv/X2w9X5ZY8q9pz1yTR+
BWrxZ1+fa+5M+jyCRXjrJshYuJ3W6n3WgXp9pyxxuVTyA6fkUKuHT8NVMSkM
aWi8UbrrzKyPaqbOrvzq2d9ef/K/ybfr08/+Wkw8Pn/14a0HGr+73HW25EVd
nYZux9GR0d4uTLKaMGNdopUru95+/IcrfPqInubc6kV697FzLt9oXrP7x9eI
8wTCYpmxaG9Z9bnGKxeTOInAEa4aCjIckqb9RAcBabBVpjmSdamo32rKo1BU
TH4As6D0mPw4ydS5Faee+1+KEFuf+snGPWdPnmvt6//x/ZgUE1EERHd1HqhD
8abNA/7RUGd/f/+FCxd6e3vTcvSxLtG9G/SmbNGuO9Y7XDyP3JrwTAsNTcdX
VM2d8f5upZGB/lcUVPxk4abff7q38Gr79aRPJf2EooYCwNhPWhtYlDeKynM1
WLk+yI1CpL/9B77anLfo8J/+dd1fZio3yRffz6+dc6+QZvOfsk7NvK9h/q8S
fuSQiYY6PXyu00P6vyhXn9bJfqh//5Zk8jzV1LZ8y1diQNGMxfNFcy459L2y
qZtr1txM7r9Eughy3QTASFiiThm5kZnnPpK3Fo6j7xXAijk0PFpXd+6z9xYf
eu4x0R57ZvqvhTSfW7i7qKJ+38nz69c8uH3R2IjZZRX3lddmf31x89BwslOw
Qp3+cauq+MYzP1Nbzk3tum7hGYoWb6ibu/Zf9dkV/rKkgDbVnblOyZI/VooJ
YA0FwApWj9Wk7txMGih1kuh58BJ/1eerJ28a4+jgVMyR0dsNjTc4gjj9zG/0
3smCpZu3Hmg8f7VbjKjcfXLO2i/+74nv1vXe8qxpDur0leNHDg9+fai3eB7P
tEBRp96ue3ugr3/vhtHORJ7fvNHdWnbgQ3lAUX7FA3+Yu/WHMWN5u1ZuawjX
gKLg1FAAnMBPpugjhXiMUPLqVF6fLa9UZvljDyoYPcgpKc9wRZ1nLrTTDY1i
SRFXlv7lZan78r6G17IOrXxstLtd2XH0tvcPhkCdviJf3uGmrweO7dHTiAds
u+ZN7atcqY+FdsLlG83jMxQ98mbxVH12hb8WrfxkR27j1RAMnw5CDQ0FefFo
ampKLGfakXavqUnqJYOUQ2lpaTI5hAgO5XRITEk22IqZFmR1su+ErIU9nauT
y0zpQ9HXSfHjjpLyjTlvKre1P8yp/OCDf6Y75zev3Lej4N6P1t9LscPirffd
GvRsnjoboE5fcXJ59VfJdL7++4SfEjp/ra1015kZi/bK/8fIpz/EpGMDipYE
c4Yi9HW6YkI8EnYf7Ui7k/uSLN7kyZOTySFcKNoSgVsy6hRxq243WYjGsFTP
SumTFfKdro2wNT5rk/qKeb2jb8/mPZV/fbVx2i/5xvji30rFPe2lxdVl1ec2
7H+RjcnL0m33bzvyUtf3iUQfboE6fcXJ5e0pUB8man/mp8m/SPRUU9vKbQ3T
F+ycOrciv+KBu/pDN2cVlE/15L1yngN1OqRGoqioiFSVnZ0tr2xvV5utnOcM
daYddjH9ZYHKZtQbgeM2C3N0KdLIz29y/vp6hZRVTH5Nxrr8jxqeUacT/+Tl
N154b8+6nd+ITqizV3byPW1DzZNfX9ycmniTiYY6e3t7yZsdHR3pLoiKw8s7
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
MVAxFeLe28mYekvsYPs3arrRkRTrUqa3t5e82dHRYd48OkKhaNexhWOx5x2H
kuL1hPQLofvkssG2Bq8KBnW6BTUUABldncaHU4xztnsIKqZC3Ht7T32Rqs5P
/r6vyfDgTyigCJQ0St7Uh/XGpHbdy2vva9/3MplU7651BdTpFtRQAGR0dbIr
RZg5XZpQyD9QMRXo3k7RIqmwoybneuVjegJuieW+y46Db966uIvsk/pypgC6
Dnq77tWNv0wmT6jTLaihAMjo6oxZTMTnKxgALxhsa+iuK2gq/c1dsxOYRp8m
H3yFguGei23VMy6vuSfuPAzOm6ahTuegbgIQWFAxBd0nl+mdmDdPr0l3udLN
6MjA9WP0o6Jly+/Gpmswjddt2fzbq+sfGovBm6vtY3Co0y3BqaF5eXmlpaU2
CWgrpWlqUn9t0pqioqK8caqqqtrb261yoE2czCaNXB4dKoNSgJqaGlpPf/Vj
cYGNeynU19dzSjoR+hy3bCDyBKdipo7REWO/HkWdyrMkXUfe8XCETAQYuXXj
9siAvlLp+W2tetw4dVIM6nRP8jW0srJy5ca3nS9W+UyYMGHy5Mk2B6KtlEaW
FOlpypQpEzRycgzPGsfG5csJ7B0tymOFnD/5jtbQX3lfXqlA5deVTa6fNGmS
k5Qgo8icRqGR71t6z25o2/v8pdX/YJwnlri68Zfflj1OyTKhPdYrvm/c4nB+
3RjU6Qav6iar8+LNHU4Wb9XJa+gvqbBmHIra2ESKy5isrKxJ49CHuOfFFqu5
G8p/4sSJsnx1dfIaOgol5r0osSiqfAhWOWVIH9iVFJySl2kllRD2zGQyQZr9
V2t5Zld56WlYbkwcjXv75cuX33///dOnT6fgWBSHjo3RPTSbfniIy3uruVpP
Sb9J6veXUtSfglJFhvCqs76+3rgLGWfiOMp6shKlzx6HPsRtF2V16uspTmS1
8VddnXx0XXxcfnFcLo8xJdvTKnYGmUAmqFNpieWlrXqGMXE01Gk/JYJ/DPdc
7D3z6Y3d2XqP52h/J4/XvbzmHrr4FKt6Mvdg5AmvOumDVXTJnYzKSnZc1Tjs
UPvzslKnsklXp9WJcK+o6PRkgxubjkmmbFX7EoIIExl1UuxDkU7HwTfp7q1v
5Wl/6NZ9vfIx+2f8oU6fMLbr3jy1Kt3lCjrhVSdHbZMmTXLYsEkphYyMYale
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
INP4/8oSSao=
    "], {{0, 168.}, {370.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{370.2, 168.},
  PlotRange->{{0, 370.2}, {0, 168.}}]], "Output",
 CellLabel->"Out[6]=",
 CellID->128869212,ExpressionUUID->"1bac5018-1ea2-d642-8e15-c8dbc55fb28d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "2b9cab15-f562-094e-9cb2-a458313aeba9"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->64306314,ExpressionUUID->"8c7c3f0a-767e-c442-8166-70ad292cd1d5"],

Cell["\<\
To compute directly the collision efficiency (\[Kappa]col) we must include \
the transition parameters and potential:\
\>", "ExampleText",
 CellID->1952677013,ExpressionUUID->"0e9311e2-77d0-3643-93de-718795782aa5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Append", "[", 
    RowBox[{
     RowBox[{"KeyDrop", "[", 
      RowBox[{
       RowBox[{"tr", "[", "Association", "]"}], ",", "\"\<\[Kappa]col\>\""}], 
      "]"}], ",", 
     RowBox[{"colData", "~", "Join", "~", 
      RowBox[{"{", 
       RowBox[{"\"\<Potential\>\"", "->", "V"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[1]:=",
 CellID->771391918,ExpressionUUID->"b1f3e676-44c8-794e-9e30-1798284efa81"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["kappaCollision"]], "paclet:PT2GW/ref/kappaCollision"},
   "RefLink",
   BaseStyle->{"InlineFormula", "TI"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "83a086e0-62d9-d64b-9876-14d0527a8737"],
 " returns the collision efficiency and, optionally, the transition \
parameters computed along the way"
}], "ExampleText",
 CellID->2114746447,ExpressionUUID->"751c9ab3-d6e2-534b-85a0-65eb357e9bd9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"kappaCollision", "[", 
   RowBox[{"data", ",", 
    RowBox[{"Return", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Kappa]col\>\"", ",", "\"\<Data\>\""}], "}"}]}]}], "]"}], 
  "//", "Dataset"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[2]:=",
 CellID->98371081,ExpressionUUID->"2b6c804d-b790-a046-99a2-c299351dcd0f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      2.20642202654342*^-11, <|
       "\[CapitalDelta]mf" -> {}, "\[CapitalDelta]mv" -> {22.56736917564518}, 
        "nF" -> 1, "nV" -> 1, "gaugeCoup" -> {0.1}, "\[CapitalDelta]m2" -> 
        509.2861515098602, "g2\[CapitalDelta]mv" -> 0.22567369175645183`, 
        "R0" -> 0.014511166918303564`, "R*" -> 3.945597239100717*^10, 
        "\[Alpha]\[Infinity]" -> 0.00002131563761624869, "\[Alpha]eq" -> 
        0.000038166435172738577`, "\[Gamma]eq" -> 39.995187638286616`, 
        "\[Gamma]*" -> 1.8126716991192778`*^12|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`RowShape[{
         TypeSystem`PackageScope`AtomShape[60], 
         TypeSystem`PackageScope`HeaderShape[<|{2, "\[CapitalDelta]mf"} -> 
           1, {2, "\[CapitalDelta]mv"} -> 1, {2, "nF"} -> 1, {2, "nV"} -> 
           1, {2, "gaugeCoup"} -> 1, {2, "\[CapitalDelta]m2"} -> 
           1, {2, "g2\[CapitalDelta]mv"} -> 1, {2, "R0"} -> 1, {2, "R*"} -> 
           1, {2, "\[Alpha]\[Infinity]"} -> 1, {2, "\[Alpha]eq"} -> 
           1, {2, "\[Gamma]eq"} -> 1, {2, "\[Gamma]*"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "\[CapitalDelta]mf" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`UnknownShape[False]], 0, 
               DirectedInfinity[1], {2, "\[CapitalDelta]mf"}], 
             "\[CapitalDelta]mv" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`AtomShape[60]], 1, 
               DirectedInfinity[1], {2, "\[CapitalDelta]mv"}], "nF" -> 
             TypeSystem`PackageScope`AtomShape[34], "nV" -> 
             TypeSystem`PackageScope`AtomShape[34], "gaugeCoup" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`AtomShape[60]], 1, 
               DirectedInfinity[1], {2, "gaugeCoup"}], "\[CapitalDelta]m2" -> 
             TypeSystem`PackageScope`AtomShape[60], "g2\[CapitalDelta]mv" -> 
             TypeSystem`PackageScope`AtomShape[60], "R0" -> 
             TypeSystem`PackageScope`AtomShape[60], "R*" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Alpha]\[Infinity]" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Alpha]eq" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Gamma]eq" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Gamma]*" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {2}]]}], 
       DirectedInfinity[1], 2, {}], "InitialType" -> TypeSystem`Tuple[{
        TypeSystem`Atom[Real], 
        TypeSystem`Struct[{
         "\[CapitalDelta]mf", "\[CapitalDelta]mv", "nF", "nV", "gaugeCoup", 
          "\[CapitalDelta]m2", "g2\[CapitalDelta]mv", "R0", "R*", 
          "\[Alpha]\[Infinity]", "\[Alpha]eq", "\[Gamma]eq", "\[Gamma]*"}, {
          TypeSystem`Vector[TypeSystem`UnknownType, TypeSystem`AnyLength], 
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 1], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 1], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`RowShape[{
         TypeSystem`PackageScope`AtomShape[60], 
         TypeSystem`PackageScope`HeaderShape[<|{2, "\[CapitalDelta]mf"} -> 
           1, {2, "\[CapitalDelta]mv"} -> 1, {2, "nF"} -> 1, {2, "nV"} -> 
           1, {2, "gaugeCoup"} -> 1, {2, "\[CapitalDelta]m2"} -> 
           1, {2, "g2\[CapitalDelta]mv"} -> 1, {2, "R0"} -> 1, {2, "R*"} -> 
           1, {2, "\[Alpha]\[Infinity]"} -> 1, {2, "\[Alpha]eq"} -> 
           1, {2, "\[Gamma]eq"} -> 1, {2, "\[Gamma]*"} -> 1|>, 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "\[CapitalDelta]mf" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`UnknownShape[False]], 0, 
               DirectedInfinity[1], {2, "\[CapitalDelta]mf"}], 
             "\[CapitalDelta]mv" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`AtomShape[60]], 1, 
               DirectedInfinity[1], {2, "\[CapitalDelta]mv"}], "nF" -> 
             TypeSystem`PackageScope`AtomShape[34], "nV" -> 
             TypeSystem`PackageScope`AtomShape[34], "gaugeCoup" -> 
             TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`ColumnShape[
                TypeSystem`PackageScope`AtomShape[60]], 1, 
               DirectedInfinity[1], {2, "gaugeCoup"}], "\[CapitalDelta]m2" -> 
             TypeSystem`PackageScope`AtomShape[60], "g2\[CapitalDelta]mv" -> 
             TypeSystem`PackageScope`AtomShape[60], "R0" -> 
             TypeSystem`PackageScope`AtomShape[60], "R*" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Alpha]\[Infinity]" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Alpha]eq" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Gamma]eq" -> 
             TypeSystem`PackageScope`AtomShape[60], "\[Gamma]*" -> 
             TypeSystem`PackageScope`AtomShape[60]|>], 
           DirectedInfinity[1], 10, {2}]]}], 
       DirectedInfinity[1], 2, {}], "Type" -> TypeSystem`Tuple[{
        TypeSystem`Atom[Real], 
        TypeSystem`Struct[{
         "\[CapitalDelta]mf", "\[CapitalDelta]mv", "nF", "nV", "gaugeCoup", 
          "\[CapitalDelta]m2", "g2\[CapitalDelta]mv", "R0", "R*", 
          "\[Alpha]\[Infinity]", "\[Alpha]eq", "\[Gamma]eq", "\[Gamma]*"}, {
          TypeSystem`Vector[TypeSystem`UnknownType, TypeSystem`AnyLength], 
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 1], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 1], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Real]}]}], "Path" -> {}, "DisplayedRowCount" -> 
     DirectedInfinity[1], "DisplayedColumnCount" -> 2, "DataRowCount" -> 2, 
     "DataColumnCount" -> 2, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000220642"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalDelta]mf", 
                  Style[
                  "\[CapitalDelta]mf", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "\[CapitalDelta]mf"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "\[CapitalDelta]mf"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalDelta]mv", 
                  Style[
                  "\[CapitalDelta]mv", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "\[CapitalDelta]mv"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "\[CapitalDelta]mv"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["nF", 
                  Style[
                  "nF", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "nF"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, "nF"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["nV", 
                  Style[
                  "nV", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "nV"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, "nV"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["gaugeCoup", 
                  Style[
                  "gaugeCoup", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "gaugeCoup"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "gaugeCoup"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[CapitalDelta]m2", 
                  Style[
                  "\[CapitalDelta]m2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "\[CapitalDelta]m2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "\[CapitalDelta]m2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["g2\[CapitalDelta]mv", 
                  Style[
                  "g2\[CapitalDelta]mv", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "g2\[CapitalDelta]mv"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "g2\[CapitalDelta]mv"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["R0", 
                  Style[
                  "R0", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "R0"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, "R0"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["R*", 
                  Style[
                  "R*", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "R*"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, "R*"}, 
                "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["\[Alpha]\[Infinity]", 
                  Style[
                  "\[Alpha]\[Infinity]", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   2, "\[Alpha]\[Infinity]"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                2, "\[Alpha]\[Infinity]"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Tooltip["\:203a", 
                   Row[{13, " total"}]], 
                  Style[
                   Tooltip["\:203a", 
                    Row[{13, " total"}]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2}, 
                   3]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, 14, ContextMenu -> {
                 MenuItem["Show 1 More Column at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {2}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Columns at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {2}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Column at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {2}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Columns at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {2}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show All Columns at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Columns", All& , {2}]], MenuEvaluator -> Automatic]}}, 
             Alignment -> {Left, Baseline}, Background -> GrayLevel[0.98]]}, {
           SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["\[CapitalDelta]mf"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["\[CapitalDelta]mf"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["22.5674"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["\[CapitalDelta]mv"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["nF"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["nV"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["gaugeCoup"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["509.286"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["\[CapitalDelta]m2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.225674"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["g2\[CapitalDelta]mv"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0145112"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["R0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39455972391."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["R*"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000213156"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["\[Alpha]\[Infinity]"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{797., {33.8515625, 39.1484375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{797., {33.8515625, 39.1484375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[2]=",
 CellID->848266271,ExpressionUUID->"f575aa7f-0cd4-c649-bf4d-e8a2f53ca2d0"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"f2a0466b-bb4d-456a-85d4-13dc910b1a4c"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"2535060f-280a-4f45-9e6a-83b960a55a63"],
 "\"Sources\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "28adc072-bf2c-4a8d-a051-17feb6fe0334"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->367699337,ExpressionUUID->"ee6c8d95-7044-4ba5-9288-df9955778f38"],

Cell["\<\
Select the sources to include, among \"Soundwaves\", \"Turbulence\" and \
\"Collisions\":\
\>", "ExampleText",
 CellID->91378339,ExpressionUUID->"b78eafe0-557b-494d-a9c7-741112983fed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeGW", "[", 
   RowBox[{
    RowBox[{"tr", "//", "Normal"}], ",", 
    RowBox[{"\"\<Sources\>\"", "->", "\"\<Turbulence\>\""}]}], "]"}], 
  ";"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[1]:=",
 CellID->193296486,ExpressionUUID->"89e71c79-0235-c140-b4e2-927b9a9f4b31"],

Cell[BoxData["\<\"No GWs from bubble collisions: \\!\\(\\*SubscriptBox[\\(\
\[Kappa]\\), \\(col\\)]\\) is Indeterminate. \\n    Collisions' efficiency \
must be provided or computed via mass functions.\"\>"], "Print",
 CellLabel->"During evaluation of In[60]:=",
 CellID->771983044,ExpressionUUID->"25b6d837-796a-2f4d-ab45-636e42acbffe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotGW", "[", 
  RowBox[{"GWData", "[", "\"\<h2Omega\>\"", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[2]:=",
 CellID->161161166,ExpressionUUID->"89227559-53bf-2a41-b2f8-61f9377d5f6b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnd+TVUWe4Jndl3lc3vZ1g3+Bh3ndiI0w5nUmNnibWMdppicm7HGcrXCW
ILbt6S572WlbCKpbXGREaw1GRVYtQUKRQvAqbVc3JY2ilkgjYuGAUyiBNIje
/U59ITvJzHNu1rkn78lz7ucTJ4hb554feZLK/NQ3M0/mf/rzv/mT9f9u1apV
f/eH8s+f3Hnff7733jv/x5/+B/nhv37v7/7qL7/3nb/44+/99+/85Xfu/aM/
//ey8z/+wapV/0WO/7fPfQAAAAAAAAAAAAAAAAAAAAAAAAAAgHaysLAwMzMz
vYx8uHDhgv1tr9eT/fKvc5buF/wL6nUSprgq8mjHjh1rOhUAAFAnUrFPTk6u
93j00UeN0cRZsucnP/mJc67s0YNFhfZ+PX5qampEzxCNpHNiYiIoXwAAaCki
srvvvlu8I9W7iVZeeeUVtZv8a46UH8UCzulyruyUr5555hl7v1xNdmYYl6lk
cRkAQGeQsEtFFmxz05jL+EjtZrc9yll6gB+y6blOsJYDuAwAoGNo9FRUsauq
jKT0YAnZnNNFWKI5caJ9rsZrRfeVUySOk9PlX0ejppdNbqQHBIUoZ+kV/K49
/xbmCnLw1NSUxpvy1cIy2g+oHX/21co7EAEAIBM2btxYHj1JHW6+9SMaMYIK
S3xhB3cqwaLOMo3jbOyYTkXj9N85bZXqI4N40zZs/5Zk7QP0Cs5lVWF6R3un
fwu9CCNGAAAyJNgFVn6804OmwlJ5Gc2prRy/KGJG+UocqoqUf9UaxlZGHOoU
+VdbQc0QykcffVT1p1eQ/Wpku7NPb6F79AqCOd5Oqv5o+vv0FFWzJExPkYhM
98g14/MKAABGgAlJnP3THuYrjV/0syrDCEtkYS6lego2yulN7YEi2hhooj87
OLJP0dhNVeik2QkDdSyKHWyqW/WmQZc5kpILygFO+tWY/hMBAECDFLlsvYf5
StvuNHjR+MhU+DrYQz+LTYpCGJWRiM/vKTN398+VC2p/nFrJ7+AzB0h6/IfS
wMqEab7Lyt8dkNNF2arIksMAAGD0aLXvtzH2LJxgxI6qNi5jvtJWODlALyum
K7qv3V8mAhKP2FFYUK8mHnQ6wnznagpL7h50mS9Hca5cRMe0BLUOAACZ4DfH
OdiNioraxxeWBlwiBaftMYi2K0ooZ0xh95cNdJkkwG8IVR/V4jJ9hPW3hjtq
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
xEBJUWyXKZ0M0JrySLMua6nFFEooQAz0Lyu+ywzdCNCajYmaclnbLUbZBIiE
kqKUuExpr9GatVhTLmu1xWwooQAxUFKUgS67yeKptuiscX815bLOWEyhhALE
QElRYl2mLNeT2RqtcXM14rLbFNYJiymUUIAYKCnKylym3Ko2G5dXtgobjcu6
ajGFEgoQA/3LShWXKbeqUKlUUdiIXdZ5i1E2ASKhpCjVXaZYNapWsygsqcu6
bTEbSihADJQUZViXKZ7R6vVa40rKwWXjYzGFEgo1Mj09Lb9R8m/TCakfSopS
j8sMt9e3foXcbXOlcJmrsDGwmEIJhRpZWFhYfzud8RolRanZZYZBUhuTbRiX
ja3FFEoopGNqaqozXqN/WUnlMoNXITful/xdhsUomzBKWq0zSoqS3GWGsZTa
ilwWUNiYWcwmnxK6adOmXbt2lRwg38oxp065/1myZ9u2bZuW2bt378WLF4uu
IF/pYSXH2OnxkTQ4CThy5Ijsl3/9e2mCg2c5zM/P65HyIPJ5YNpaxMzMjPmr
ST43nZzq5FNSmmV0LrMZG69FugyL+QxfQqWC2vH0/fFb0XVWrVp1xx13lNxI
vpVjbGuIL9atW7fKY8OGDcEriFP0gHJpmvQUYV9fBCR75F/7XN3pIOn3HSry
XbNmTcyR7aLX63WjadGAy5RmXGbTaa+VuyyssLG3mFKXy3775UsxW70u0z3y
r7jpyDIS16gaHLkoa9euXbOMfBj4XKqVI7cj11+9erVtQ99lukfuIgfrWXKw
Sap9C3WrXFA+qLwkfBNRyk5JYUt1ZhQ2NTXVdFrqBJcpzbvMpnNeK3IZFhtI
e102Pz8fPEUUsHoZZ79oQo7/q2Xkw8CmPHWZv18iKXWN/ui7TO/um0jTb+6r
6QkeqTorii5zRkKwiYmJplORBFym5OUym054zXFZocKwmEd7XSYfiuIv7ahy
dqp09i6jUit/riKXOV/5Lit6EO1ZMx1nqtRga6fYTTVXnsI8MR1kxGWdJF+X
2bTWa+qyMoVhsQLa6zKNa9asWRPZFidHGjsEAzc/PUGXOaLxXaaNnAPjPm2r
LPpWhOuPJ2kXZkB+q4d8GHCZ0g6X2bTHa5K2dw++iMKq0V6X9W+FNiIF+VA+
VlAbJE0sVhIT2ekJukbltW7dOvtH22VmhIkcUzQusaiBtJNMTEyo1BYWFppO
S3VwmdI+l9nk6jWTnrDLIIJWu6y/rBINcBSJicRTvtRUXhLs6I8xKtELOmPy
165dq/Y0hgqOY3RGJ8rx4jU75dpAOiYuM7R6TCMuU9rtMkNB7NOIv+ztNpfB
Smi7yxRxx4YNG1Q0ihNz+Y2K6pqSUG5VAXIXOw1Blyn61pgmWzGB4Zi4zJn3
o9WNjcwtoHTEZQ4j9Fp5X9hNl8FKqKts5uAyg74NreIwntJGP5GXH2GVjBXU
izhj8v2+uRKX2Uga7MH82tnXPZfZr5V1wF82WEzppstsEoRsA8ZyWIFY97M3
Ge11mcRiRQZx/BJ8n9q0SZakp2RsRtG9NBYLhntOLFY+9kPVOfDuucE8+Z1n
vCrbSAcNuVmMV/bWSntdpj+WWEP9osMOg87S0Mx0ovnpqeAy/bFoVIn9jOXj
TzRtHZvPqtXgMmV8K9tk/rIZ3+wdmva6bNu2basKpnvSQEwlpYcF2xK17dGM
SPTTUy0u08EevmSdlJS8K60Ji5mcJE/MG9POEjC9Xq/ppFUHlylUtr+nDnk5
kL2VycplOqzCRw9wXCYK0OBFO8KKZosqCXA0ZCsK7qq5rG+9KSDa0tfE5F+z
0zZXcA4rvaA9VLJdTE5Oml8qdZkOxc9nShBJodOLp2kWSlLI2A+FyjYpZG8F
Mhz7UYQeEJxbWB3hIDuNGso7xfT0YL9bZZf1vTcFFEm/ryczJsRG/NtSkenY
D/Meme2y/vKvXOOhmWrLdpnsMQqT/UU6w2IKlW1SyN7K5OOy4Borih5QsuZL
0eoqRQuyGHSoRrDTyr51CSVrvujolJiVXPQiHVjzRYIvUYP50XGZfNXgsBC7
wdO4TOVrG9aP2hRcplDZJoXsrUwtLlsRtSQb8sRxmUOzLpuamtK7+y5zDgvO
JInLFCrbpJC9laGEQo3oxMJF3+bQxtgPucyeXEuEi8tKoLJNCtlbGUoo1EvR
+2X5jP1w+sskVSaWVBcXuYyxH30q28SQvRWgbEIKNNJxdKCTWVWbW9gPnfq3
TzBi7mWWm7Hx2zz92UjM7MdTt/CTQUlRqGyTQvZWhhIKKXBmYqy8lpkZsGG7
TEVmfGSuX9llNkWdepQUhco2KWRvZSihkC06I5bvssllzI/BwK0Ex2V2L56q
M9ipR0lRqGyTQvZWhhIKeaJBlvyrRrNV5XfJFXXSBfHfLzNmdCzpnGWYG2Oe
ffbZppPQZcjelWIXzJVVMQAhnOmqjCyGH4fvuExv5Hd4xTdjlvSXlbxQQElR
5ggcUkL2VoYSCsNj5oByEO/U7jKns0xZkcuqQUlRqGyTQvZWhhIKQ6LDPHxh
6X6xDC7rElS2SSF7K0MJhWEItvgZalnOrPY2xmpQUhQq26SQvZWhhMIwlEzG
q9TextgfeuxHNSgpCpVtUsjeylBCYRjKJ2Cs6xYxY/JTz45FSVGobJNC9lYm
nxIanCE/OMW9mVW+fF59m4sXL5q59Pfu3esvf1k+o759x4Hz2MsB27ZtK0l/
5LM7c/6XJNJ+Ov8sP3k1zsnfSFym8jKXXT/Eu9jx5FNSmoXKNilkb2WGL6F1
zZNftHjZ6tWrdYVow6blJcMGrnemBNc40+Uv/Wv6HtwUWolszZo1RZKVr/yD
nfTHP/uq21fEDiYymBvB5bYlGX7ygkfGUx4T6TtitbusXzCHVVJwmUJlmxSy
tzK1uOzHT//fQ19+FrPJkUXX0arVXk7aLMcs2DrQ2lu+Ci5C7SzWqetKr1u3
zsQgpkq3dRbUhN5drmBCOV33We3m6MwsEm0WWdNwSQ8OLpFW8uyCxE3OuX4i
dY88jhxctLK2kzx7DWsRpT7gMDrzV7dUzKwdDa7zUiO4TKGyTQrZW5ncXObv
10rYXhu6KIbyKVo2Wqrx1cuY5rgiTYgE/cuKFp0kmQv6rXaiCVVnSXtj0bOL
Q9U1RYnUm/omUp2ZxOj62sEjVWd29FcB866xg0RPza5ZViPMLaBQ2SaF7K1A
XWUztcv6t2rmkvAkiFbgtnFstA6XcCZ4TanzizShiONsWag0i4IvsZgfKNmU
PLv9lf/gRZfVnjVj6pLkyQOq5orSFokzr69p9+uSy5pOQhZQ2SaF7K1MK1ym
4YlUyPpjpMvEUyWHST0vly2Ky5w7+jiNmdoYWJIYDc2KzFj07I5o/AfXyw4c
wlGePHnYyDEq4wwuU6hsk0L2VqYVLtM2PROAaJUuPwaH/5lqWUOn+JGEtib0
x/JOrqLkBSlPTNGzO+2cvsu0AVaPKRqXGJM8GAguU6hsk0L2VqYVLuvf3phW
Po7RVPXaMlnNZcFz/XcB9ICBTYjm+qZJM/jszsV11IrdBxcMSJ3RiXK8eM1O
eUzyYCC4TKGyTQrZW5n2uqxoHKNpNqzdZb5D9fi6XOYjOrPTUNK4qm+NabIV
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
sEb7sIqPkYY9hz5Qi4nUnj+8MLLBbx1zWW6UZ+/h+bP6n77lqbm6VnDrDFm5
zBn7IZixH8YOwbEfYhNttbMnGR5+DquBz+73l5kEi7b0NbHgCJZ+wRxWekHn
NYTxxMRQ6iBbVX4job8neLWgpGwzOpZ0brHiZ0iJ/Ol+389eGzi/X+3gsqSU
Z+/GR444E4hJ+DbOE13aZOWyIFKx24YqGpNf1DtmNGcTObfwwGcvmlvYv6Mk
Ozjnv3+k83IBOC7T0MkJryYmJoKdXAYzs4eNPfwj2LlmY584N0KeerH391tf
Ptx7a5Q3LeHZZ59tOgldpiR7e2++9b92HLzzh87qpXtl/yhTmBt2wRyyqqnL
ZcFlVvz+rKI1X0rc5Kz5EjNtrx488LCSNV/MHQeu5KIXiTlyPHFc5nSWKQNd
Njyjj8tOnLpg/g4f8qWwGpkjLkvJwOy9dPl3Tx94z/SW5vOL0Th1uWz4efIB
goyhy06evuiMUbxr8qVMpoPAZUmJzN6r127sP/rRxNbZ4Hz7mfyqjJh6XFbH
+mUAQWppYxyekbnsxjffSh1li+zuBw9IxZXJWpa4LCnDZ++Vq9flL5+f7vql
xPW1JKkt5NajDeBQy9iP4RllSTHD1bKymNIxly0tLc3Ozi4uLjadkJsMn71m
gKsODukd/2RMBofgMsgc32XBMfnBMYo1MsqSIpXPjx57IzeLKR1zWW7vSg+f
vff97DVnLqx7Hnp1HF5Jw2WQOb7LVF4mEFtfMOtUvaQoKWcWv9jy1FzREsN5
gsuSUksb4743Tom/7DbqcQjNcBlkju+yfsEcVkmpt6SoxUpWvcwWXJaUurJX
5NU7/omOgw2u8tM9cBlADHWVFNtit14R2tei0AyXJaX27D1x6kLwbfrnDy90
rCsNlwHEUFdJcaZuuGvypSf3v1v7bPbpwGVJGU32Xrr8O/kLSn797t1yMM9u
2QrgMoAY6ppbYO7kedtirXsVCJclZTTZu+vlk/YfVN/d9PLug++37lfRUFfZ
BBgHaiwpP9jRa6PFlI657OrVq6Kzy5dzGeY3muw99OuPnXcYZZO/skZw63Tg
MoAYVlpSzn9+Zdue+e5NZt4xl+XGyLL3xjffvvXO4ve3v64iE7WN5r7pwGUA
McSXFLHY9ufe1v6IBx4/mjRVoweXJWX02St/bm15au6Vt37rf3Xp8u9aNDgE
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
AzNpVlQ=
    "], {{0, 168.}, {348., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{348., 168.},
  PlotRange->{{0, 348.}, {0, 168.}}]], "Output",
 CellLabel->"Out[2]=",
 CellID->254695248,ExpressionUUID->"d749b18d-dc02-c849-837c-7712565bc83f"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "2"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"5df44d31-0d70-4538-b458-b4ff2405e482"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"d4b55e14-1108-4096-8f64-b7fd481f24da"],
 "\"SpeedOfSound\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "e4931dd6-4110-43cb-a915-c93555ad2397"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->272007896,ExpressionUUID->"3c3ed420-dc5f-43fc-ad87-4ad450742837"],

Cell[TextData[{
 "The default value for the speed of sound in the false vacuum, ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["c", "s"], "=", 
   RowBox[{"1", "/", 
    SqrtBox["3"]}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fd3bf19c-521b-a546-a596-7f8bac8ca788"],
 ", corresponds to the bag equation of state."
}], "ExampleText",
 CellID->260282364,ExpressionUUID->"6c2fccce-f58a-9644-a1d2-bb5f72e459c0"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "2"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "3"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"c771b695-eebc-4535-9f85-159d969c1c9e"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"656b1196-eaf6-4841-b89c-c34db137ef88"],
 "\"\[CurlyEpsilon]\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "d8572e82-6413-4c3c-b80e-559503395c38"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1077447208,ExpressionUUID->"1024fa63-6bc7-4590-a1e1-5155a536adae"],

Cell[TextData[{
 "\[CurlyEpsilon] is the fraction of kinetic energy in bulk motion that is \
converted to MHD turbulence: ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[CapitalOmega]", "s"], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[CapitalOmega]", "kin"], "+", 
     SubscriptBox["\[CapitalOmega]", "mag"]}], "\[Congruent]", 
    "\[CurlyEpsilon]K"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f0b2e269-77b4-3448-9b09-d48a0c19b5af"],
 ". The default value ",
 Cell[BoxData[
  RowBox[{"\[CurlyEpsilon]", "=", "0.5"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a0294d2f-6cce-8a49-be44-35b90eec5478"],
 " is an agnostic guess."
}], "ExampleText",
 CellID->814525994,ExpressionUUID->"5d52e990-7f5f-5646-851c-860369213e75"],

Cell["\<\
Larger  values  increase  the  contribution  of  turbulent  motion  to  the  \
GW  spectrum :\
\>", "ExampleText",
 CellID->887790242,ExpressionUUID->"aa378357-250b-b341-b20c-2b8db964078c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeGW", "[", 
   RowBox[{
    RowBox[{"tr", "//", "Normal"}], ",", 
    RowBox[{"\"\<\[CurlyEpsilon]\>\"", "->", ".1"}]}], "]"}], ";"}]], "Input",\

 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[1]:=",
 CellID->164254980,ExpressionUUID->"eaddc60d-8e11-d642-9ad1-513b5a38fd6f"],

Cell[BoxData["\<\"No GWs from bubble collisions: \
\!\(\*SubscriptBox[\(\[Kappa]\), \(col\)]\) is Indeterminate. \\\\n    \
Collisions' efficiency must \[LineSeparator]be provided or computed via mass \
functions.\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellLabel->"During evaluation of In[67]:=",
 CellID->333912393,ExpressionUUID->"67a65b76-67a9-aa41-96f0-f000d593011e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotGW", "[", 
  RowBox[{"GWData", "[", "\"\<h2Omega\>\"", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[2]:=",
 CellID->444862531,ExpressionUUID->"381db18a-7691-b848-accc-3b5299d2ffdf"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AoYT8RnmJqbFM5zXjpKJSfNi2kR8erbyRHxKhsq+DJdZOajNifjM5vFzHOtJ
a6OEUjH7+/t7nqW3t1ffa3BwsEdjZGRESTY6Oqono331DINz3GPHjoXufD+/
3Xu0rnnb/oaPNh7PWnPo9x/uq1r1f+pzv3U+72/O5n+rtvAfj2/5/dmjJX33
e/RDeAzUmShQJwgRaRV1yjOWFBUV/fFZli9fru916NChP2q0tbUpyeg+ryej
ffUMg3PcRYsWBf98OzuazlQVntg8s65g4vKl770+d7uebP2if7m0+qvtBX8m
lunzNi9YW3u4vmNw+LF+LG+AOu2D2YRA6OBp98wmdefZ4COjTvkrBfhlz1JZ
Wanv1dTUVKbR1dWlJBsYGNCT0b56hsE5ruE/axDOd+PmbXn5+flL36ld9ZIs
xM0rXp88d8c7c3PkZeWCt8meB1b8b5Hs+Krv/GxuBS/T3t+7bveF67fVgY4e
AHUmCtQJwgU/maKPFOIxQlFVJwjUvf3x6BeX2++R5jJXHiLl/Wp+iSxNXmpW
/S8W4tvLDmYXn1yz89z2w1d2bckjdW5f+/6JLe/WFv34fN7fFC9/Q6hTLJ9+
WnS53kDZ7hGoyxsKUENB6MjMzDR8rpOi0Sg12PpdhGARhHv745GRi6d3F2/Z
S+GhIrvPcl9kY7YVPHcm/6UTxa+f2pfXcr1HaYNta2sjdZ45c0asuXV3YG9t
65z8Y3JuJz9+EsCeXvOKZwINwuUNF6ihIIxw26w+3zvUGVX8vbdfb6k/UfLb
pvy/IqOtW/YrxZuT5+3e/slsCiSbTu580Gs1Xk5X55eHuN1XtOv8lKw9c7OX
ydGrNwKFOhMFNRSAAIKKqeDLvX146OFnlR+fLvgH2WX1uS+wMX+9eP+anefO
XL5tf3iPhTqZvoHhI+WrruR/TWn+rfjkndYb9x06LQOgzkRBDQXADXhEE6M8
UCMmErR40Aaj+BQ8vrff7x/aWnX5dx/saVz9vGKxC/nf2Ly7puV6z+PRLxLN
Nq46GQpda7fPkQU6c0EeyXrFprr2ToOHZVIH6rQP6iYALqGMBM7MzBSWzMnJ
EZ+zxjDMARVTwbN7O7kpv+zslKw9HFoWLP0dy6s5/y+OF09tqtudSub9/f3k
zbt379pJTDHvqV3ZJNA9K1+V24fdECjUmSiooSDIyLGb0okZ5Olqlakb+Cya
x5CVKtbrOaBiKnhwb7/UdH7B2lqlH3PavK0n839Qty/n4QMfnhmJjUWguw4c
fyO7UinY+k/X37x20amjQJ2JghoKAosyYy3P7i62BlmdCmaKhDrt4+q9/XJ9
5ek1r1zN/8qv5pfIelq84dS55jvuHdc+A4OPth++IgQ6eW55fe4LbQXPUSDc
2WHwgGqiQJ2JghoKAos+7V7mGOJzWNSZk5NjOAkSrRRjgxVQMRVcurefr9lc
m/+y6FIsWT6FxDQla0/RrvM3u/rdOGIq9A0Mb9h7kYqXs2SWKDML9M6NllRy
hjoTBTUUBBbDGWuFPcOiTn6ORpkBiV+RZhZyxjAUQcPxe3t9Q0N9wXeUIUAX
875edugCGcrZYznL/f6hw5vmUIwsl5y+Vpbm0qbk8oQ67YO6CQKO2SvGyKcs
UDfUadiIKne5ijhRebbUcNCs9dyAFu9QQ8VUcPDeXtd0a/bqam7zlKV5csc8
66cyA0VnRxMFmxRyCnW+lVU87f292w9fGRh8lGhuUGeioIaCIMPO0ls1XZqu
ll2mqJPLIHe5cnniqpMTmL1dlMkZQ1+PiqngyL2dpSm6MpcvnsPSPFWxZHjo
Yer5e8+N1vMnil4TTc28vJFdube29dHIqP18oM5EQQ0F4YU8ZdbgmQRiFlxF
ncojJBZje/TcFG/q+1LOUKcdUry3X7rwmSxNXv595cHTlXleSvP69evLly9v
bGx0Ntv2y6dzNx5Szu7NpQeOVFXYPDuoM1FQQ0EYkVtQDR9dSRQRIbLyZLvp
mcc9nGH/JiM/48nJMMLWDknf23n0bGvBczOyCoVWMlceOtpwPYk5DVLE5pQI
ydFyvUd+uGbavK2X875KMXX9/tzH2rtEFaDOREENBWGEzCXGrCoNpyk6VFGn
YXekxchYRswXJCNMKm+NO0yIqAN1ddu2bUt0l4M715zI+4HozeSJBd5asndd
WfWp026UMT779u0jdZaWlrp3iB37jr+bs5/OtOiD34hzP5v3QuWmhadPnTLb
K4nLm57IFTOV+wwAvkAu0wffsuacVafS0cnEVWfqoGIq1CUSFl260nJyzQ/1
0bNHT1/0PtKUcTXqlDnXfOdI/o+VK3Au/8WGumrD9AldXhBDDQWhQm4CJX85
2NEpgDqDic17e1NbNzda8nu7hDQDMhDIM3Uy52q2yw/gXM776rR5W2evrtbn
eYA6EwU1FIQIeSQPN3u6dIgUG2xTBxVTIe69vb2zd8WmOtHT94eFK0gWV/K/
drJ0ztBAjzeF1Bl61Nfd29J2u+b8tdITTblb9881VGd9y4aTl/ObOiru3L/0
aGTA2TI0HFlH8SZdjaIPfiOuD/3AoJ8ZIg3UmSiooSB0yAJlHBSZI8OEUgcV
U8Hi3t7e1ixLUzygcXTnSn+f02y5eWhZ2fPysqTk73I+ztZbS9YeeFVOtv7Q
awcbFjhYkscjI/UHC979cJdylRZvONXeeikGdSYOaigINbpGne3rjJk8nGI4
etZBUDEVDO/t7S0XqtdOaS14jmJMoYMpWXtKKpuSmBYgISicvNXT2Ni+8+iF
ZWW1vy3c/0Nao6ShEFJRJy0Ue+q55e/7vpKMZOp4mR+NjO6tbX1z6QFxrX41
v+Rq/ldOFv346L5Njh8u2qCGgsjA1nNcnexKka2zQa4ZqJgKijrbr109tO7X
rU/n0jny0fdYmhv2Xkx6Mjr71FxcpTvx5r1zSrJHIwNi64od3yC9bjk2lWyr
Z0jr11S+LOdmGHX2POh4OJxq4zMJdMfRZp5JvmT5FHkiXEdmkk8TUEMBkNHV
GTOZiM9VUDEVhDrbO3ur1r6lzOBKd/7t5ZVOSXP0i8fdvS1XbuynCNFQYWfb
tujqNHRiy81DlJXN7ks+LuVTdTabdtQTUHhLCt51amZr51FKnOBpPQNF5Tuq
zslv0+bLeGL91J57gXhZTMBBDQUggKBiKpA6xUCgPStflW/4dZ/+4l7nFUeO
cvJy/rqqH5GeZCeOjKqzwVOAKWLJ9Yde23363VNXCu/cv+RIGczof3hLLlj+
vu9TaVMMQvt7bpzYNEP+HVKf+8LUrApvgvdQgxoKQABBxZRpauueu/rLHrqZ
C/L+dJ/f8NO7HQ2J5kYOoqiNgkp90+HzS/RwUnciRZG0O0WIKYZ+CdHUUaGX
befJGannfK/r84OfvMECXb54jpddxuEFNRSAAIIZS5iGSzflyeXEXf3I5vcS
kub5a6VVZ7O3HJu6quIli3E4cksshXgUge46NZMU6dwJpQRJ/1jjh3l7visK
2XbbmeFqFNTfuX7p6IZ3pszbpQxUfvIqloFBR44SDVA3AQgsaV4xH42MHq7v
WLv6/frcF7IXZcnStG5LHBkd1ke6EhuP/FwP2fSW2Lv9beSmS5/vpUjTjYiy
q6urrKysvb09lUyoYFRC+hlgNgpXP6+4iK7kW3cHcrc3yPb8XVbR+byM4zsX
B2FOieCQ5jUUgGCSthWzb2CYwpwPP1wipgMie06eWz51wR79TZQ8roY8Ip4Q
ISHuq5+jZ0shp+JNCj9JlN6clMDZ2YQMRx+1dh6lsJR+ADwYSuCZVnUAszS/
ROmH/xy0SZmCQNrWUACCTBpWzHPNd1Zu+Wzxkmx5Dj1ejlbk15w4ZbhXzq5v
KU789PBP9WRNHRW0/mDDgvqWDW23axLSioN4MBFf6fHf8HVYufOb9CvCZmuz
8WOznb35G/eIJ4B4uZD3jfqDBXFfxRJ50rCGAhB80qdi3ro7QOHkjBVVSoxD
y6VP/vvxkr89djxz32d/KNj96tm2LfruJERFnSRT78/CJm6rs3fght4uTTKN
24RrMZsQv7VNtif9tvHrrW3BITg1NDs7u6SkxCIBbaU0V69eVdbTmtzc3Owx
KioqurtNf0/SJk5mkUYujw6VQSlAdXU1rae/+rG4wIZ7KTQ0NHBKOhH6HLds
IPJEfijC3d7BvbWtc9fUKEOAfpdV1FbwHEkzp/TrigIMW2JpJY/52XlyxrHG
D3ngq+dnYxcPos5bPY10KeTHWMpqfxt3r7gT8TWf2taw5u9ZnVnZi/gfa/bq
6rqmWw4VPDQ4VTfLE8Qsn3Hjxk2cONHiQLSV0siSIj1NmjRpnMasWbMMcyCF
cQJrR4vymCHnT76jNfRX3pdXKlD5dWWT6ydMmGAnJUgroirNlus9FGPOyT/2
8/fKf5ld+PaKBe8W/PqNxXl8K/714v0llU2fH1/ed6HQZkvs0KO+JEbF+IVn
b07pedBxsGHByp3fpOt2vSv+/LQ257BtPL5lb95U5dcOCVSeST5NcESdazb/
0f5ilk8S6uQ19JdUWD0GRW1sIsVlTEZGxoQx6EPc82KLVT8L5T9+/HhZvro6
eQ0dhRLzXpRYFFU+BKucMqQP7EoKTsnLtJJKCHumM1FS5+Dw41ONnUW7zs9Y
UUW6nF04JevTV5Zt/zIsmvnxrBWb6ijNo5FRsZdoiV1V8dKm6tc37n+nqaPC
x7NwBI9fOvZgqLuhdaO+fvSLx3XN6+QO34Smf6d/qcyVh2R7/mHhitNrXrnc
cMCBQocEp9R5rW+PncVBdTY0NBjuQsYZP4aynqxE6aePQR/itouyOvX1FCey
2virrk4+ui4+Lr84LpfHMCXb0yx2BulABNTZNzB8uL7jg5LTU7L2iHvsLxcV
GD3XP1vfvbXzKC29Azf4azRe7TEyMtLT0zM87HOYzLMrUExKkSnFp7HEL+/j
0S+ONlx/e9lB/mc98tH3uC33RNFr7ZdPu1PqYBFeddIHs+iSOxmVley4ijHY
odbnZaZOZZOuTrMT4V5R0enJBjdsOiaZslWtSwgiTHjVSZFjdUPzkk3L5ha/
9osFn8qxya/ml5Qsn/Jh6TPeXFPxd8caP4ybbTTUGRDWH3pNnvlh58kZVcc3
J5EPv4pl0YpVyohoEuiNloj/e4VXnRy1TZgwwWbDJqUUMjIMS/XyGKpT8Zqu
Tm4xjhvVcsOv2Vbyuz70CKQPYRwmdL9/6NP9e+av/9cPtv8135b/7aPZwptP
xmRumk331R0bv1q68S+PrP8fZ4v/8s7xPz5+aGuycajTKR4O94gHWL4UaNlf
Jz0d7vDQw1MVS5ry/0q2596cV/PLzt666/Bru4OAg8OEfFFn7GngRg6iD9aj
WLl1V0SaFhGfXB5DtbErJ02aJH+V1SkGI1EasxGzZq3NADDhkub1232ry8oX
bPwH5Yb8XvGPZq+u3nG0mW+ho8O919c9/+TW+smf3zsx36Y0GajTWe7cv7T7
9LtiIG7J/rdSzPBBb3ft9jniVSwzFzwZ+jV53m4S6N3eCM7jF2p1xsbMxeEb
QxEfaVF3KLuSQjn+asdcnKHycEpGRgbLWgjRcIStMm6W0pNG5ZJzazPUCcwI
izpbb9znaWcmz9+2ZNuLsjc/2vVqVUOekr6vcV33kZkjvdcSPRDU6QY9DzoO
n1+Ss+tb1bW7HcmQBbpj5U+UOYej9yqWsKuTIVXNmjWLvcYoEaXeQstqswhU
x5lAR5HLYKhOhp/W5GIzIuyFOoE1wVenPFcbL+8W/JqMubz029ur53Wc+aDv
QqGDh4M63ePRyIB+eYce9a2pfDnRCf0YsiS5Uh4eRsvCxYuPb5xx/+4Nh0rt
M9FQp4AnPWBPCS1yCyq5Uo8fLUaxcibKwyl6v6qFOmWoDPJTLdxRC3UCM4Ks
ztabXR9s2qS/zWTd3hMnGjf2XCz+fMML7QV/1rH2awk1yVoTDXUODg62tbX1
9/f7XRAV/fKeulIoJvTbf+Y9HoibECTQol3nJ8/b/aRRYm55fe6T/xVX8r9G
YSkFpw4V3DfCq06KNM2EpejMcNoE0cBrUR6LYTxmx+JI0zCYVSJN62FCbOq4
RwdRJZjDhNpv9SzfunTxlm8v2fbi5PnbxHupnjTH9Q48uLLtxua/l8eK3Dsx
36lDR0OdHj/XaR/l8o6MDsuvNhPvBk0iAr11dyC/7OyKpXPk/xgk0JOlc4YG
UnpPt1+EfZgQf7WQFOuMB8QaKpIDT9EBqpcnCXXyV7MBSPI5Wg9V4rJhUr60
JWjSvNnd93HZR9mbvryd/j7vtxRpbq26zG8zedBcpjyhcGvnPw3erHWqAFCn
q+iXlyf0k9VJMk164qYbLXVPHvl89n/IjlWv761tlefBCBHhVWdubu44kznr
OMxkJ3Iyw4ZZbsgVY2X18iQXdfK4IN3pSkkspkTggtmZ8ghEleCok6KG1WXl
sjT/NMv6jh8/M/Bj9LEIOTtLX3l4rdLZYkCdrmJ2eXsedOyrn8MT+p1oyk3x
KO2XT9cW/Zj/k7QWPPe7rKKfza2YsaIqjDPJB0qdPAJHhxMo6iTjcGjGnZhm
U95ZhG8ckJqFrsmpMyY9MkOW5Mcz6a9YKYvScCI+zlAexAvSkCCok8y4bveF
yfN2T56/bfHWL2eUXbnz/55rNTAjN9hS+OlGYaBOV7G+vA+Gug+fX2LYWtt2
uybRUPRyfeVna75X+uE/y33loXsVS6DUaQYnMJz+nZWkQCuFiaw7NHl3wz7T
pNUZ0x6ZYaj8ug3F8CEZ0j28meb4q86BwUfKCMl/+2j22IPz3z99edfgzdre
c/kGu40+frK4A9TpKsldXpLpih3fWFXxEgWkiXaDNl7pmL26Whlslr8q+1x1
MvMaeU9w1Gn4ki+GE1i8dMzs9V5mbwQT8Kgeww5H+dAWWLx0jAcy2XmVGGeC
l44BgV/qJGluqjr6Rnalck/7cOvJ2oulg10Xbu99nec0SOLZzFSAOl0luct7
9MIyqS3im1VnsxMdiFvXdGvWx0f5/9jr75U1rn4yY0Z9wXfO1u5JojxeEpw3
pwAABN6r89HI6NbDB7I+/acPSjOmLlwnpLliU117Z+9w98U7+6fLYzy6j8z0
snjRUGd/fz958+7du34XRCW5y6uMI+IZcW90J/bDgGeSz1x5KHfpTPk/WG3+
y+dP7U2iVN4QnPd1AgAEXqqTpFlWfXD+hn8RN8DZhVOENCnB0K3TytjI6+ue
v3/mI89KGIuKOgNL0pf3zv1Lu07NFBP6ral8efSLZBrtSaCf7c+/mPd15X/a
psKFwXwZaBBGIwAAFLypmHS/qjx18b3iaRRpPhM+lH67uaNTTtlZ+grfyjoK
/yLR6WcdAep0lRQvb8+Djqqz2St3frO+ZUMq+fBM8kKgl/O+Om3eVvoVt2Bt
Lf+KCw5QJwABxO2KKVrJfv5e+ULpwZMPSv+2/MSyoUd9SvqH1yrbP/nzu9Wz
vJcmA3W6iiOX98FQt+Fo24MNC05dKdT/U5nx8EEfzyRf9MFv5A530QwSBKBO
AAKIq7MJyWMzaPndh/PHIs2/3lq9+OGDG/2XNhnuNdL/uRuFsQnU6SruXV4K
SPlX2aqKl8yecDHkQW/3jqpz+oi1bZsKO2+2u1RaOwRzpi8AQMy137RnW27q
TwRk5hzcdHjR/f4bfRcK+aVgDs4C5BRQp6u4d3kp5FTGEe2rn9M7YHcS+IHB
R9sPXxECnTZv6+W8r17N/8rR9W/7LlAfjw4AMMTxinm+5drijf9vybYXf7mo
QEjzzaUHnjyHPjLS17iO52zn5XbFT5w9eupAna7i3uVt7Ty6qfp1ZSDu9a7E
DiceNC5e/ob4X/pEoJtm99zzpwcB6gQggDhYMZs7OlmafNf647rXWJo8fejo
4D1lznZW5xePBpwqgCNEQ53Xr19fvnx5Y2Oj3wVRcfvykivFkyyfHv5pcpnc
7x+q2fDrtoLn5P+rFITurtjBEyl7CdQJQABxpGK23by3fOvCxVu+rfzmLz16
QJ5zm0QpSzOArbWxqKgzYlMiJMqd+5f21c+hOFTf9GCo2+ZTLZ3XGk+u/Wfx
P7Zx9fOvv1f2Rnbl9sNXBofdmsxKB+oEIICkOBTh1t2B3O0NFF1mffqKLM2P
d/205YZqRnIlz9k+eKMm5YK7BdTpKr5f3i3Hpubv+359ywabM+K2Xz7Nr2LJ
XTpT7oDw4FUsGCYEQGBJumLe7x9as/Mcv1+Yll8t/Yil+dGu10iaQ7eNb9rB
jDRlfL+3OwLUacj1rjrx645nxH04bOtVnlcbT2avVYe9vb3s4Mljux+PjLha
ZqgTgACSRMXsGxhW5mynhb7mlv/+XGslyZEbZh1/HZg3QJ2u4u/l3X/mPaVP
YeXOb56/Vmpz96a27gVra7982CqrqLXguXP5L9YfTml+BmugTgACSEIVc2Dw
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
AAAAAAAAAAAAAAAASDf+PyNN0TM=
    "], {{0, 168.}, {370.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{370.2, 168.},
  PlotRange->{{0, 370.2}, {0, 168.}}]], "Output",
 CellLabel->"Out[2]=",
 CellID->40110886,ExpressionUUID->"a7801f2d-e94d-3d49-9053-a08bc7d9144a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ComputeGW", "[", 
   RowBox[{
    RowBox[{"tr", "//", "Normal"}], ",", 
    RowBox[{"\"\<\[CurlyEpsilon]\>\"", "->", ".9"}]}], "]"}], ";"}]], "Input",\

 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[3]:=",
 CellID->302608659,ExpressionUUID->"18c9bf85-1c74-f34c-8305-4b59292d1b25"],

Cell[BoxData["\<\"No GWs from bubble collisions: \
\!\(\*SubscriptBox[\(\[Kappa]\), \(col\)]\) is Indeterminate. \\\\n    \
Collisions' effici\[LineSeparator]ency must be provided or computed via mass \
functions.\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellLabel->"During evaluation of In[69]:=",
 CellID->234323629,ExpressionUUID->"e72dd6c0-eb8d-6844-a535-8135f4138d81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotGW", "[", 
  RowBox[{"GWData", "[", "\"\<h2Omega\>\"", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[4]:=",
 CellID->519115185,ExpressionUUID->"ae87a9ec-9cf2-694c-918b-10b34e8cf5fa"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AoYT8RnmJqbFM5zXjpKJSfNi2kR8erbyRHxKhsq+DJdZOajNifjM5vFzHOtJ
a6OEUjH7+/t7nqW3t1ffa3BwsEdjZGRESTY6Oqono331DINz3GPHjoXufD+/
3Xu0rnnb/oaPNh7PWnPo9x/uq1r1f+pzv3U+72/O5n+rtvAfj2/5/dmjJX33
e/RDeAzUmShQJwgRaRV1yjOWFBUV/fFZli9fru916NChP2q0tbUpyeg+ryej
ffUMg3PcRYsWBf98OzuazlQVntg8s65g4vKl770+d7uebP2if7m0+qvtBX8m
lunzNi9YW3u4vmNw+LF+LG+AOu2D2YRA6OBp98wmdefZ4COjTvkrBfhlz1JZ
Wanv1dTUVKbR1dWlJBsYGNCT0b56hsE5ruE/axDOd+PmbXn5+flL36ld9ZIs
xM0rXp88d8c7c3PkZeWCt8meB1b8b5Hs+Krv/GxuBS/T3t+7bveF67fVgY4e
AHUmCtQJwgU/maKPFOIxQlFVJwjUvf3x6BeX2++R5jJXHiLl/Wp+iSxNXmpW
/S8W4tvLDmYXn1yz89z2w1d2bckjdW5f+/6JLe/WFv34fN7fFC9/Q6hTLJ9+
WnS53kDZ7hGoyxsKUENB6MjMzDR8rpOi0Sg12PpdhGARhHv745GRi6d3F2/Z
S+GhIrvPcl9kY7YVPHcm/6UTxa+f2pfXcr1HaYNta2sjdZ45c0asuXV3YG9t
65z8Y3JuJz9+EsCeXvOKZwINwuUNF6ihIIxw26w+3zvUGVX8vbdfb6k/UfLb
pvy/IqOtW/YrxZuT5+3e/slsCiSbTu580Gs1Xk5X55eHuN1XtOv8lKw9c7OX
ydGrNwKFOhMFNRSAAIKKqeDLvX146OFnlR+fLvgH2WX1uS+wMX+9eP+anefO
XL5tf3iPhTqZvoHhI+WrruR/TWn+rfjkndYb9x06LQOgzkRBDQXADXhEE6M8
UCMmErR40Aaj+BQ8vrff7x/aWnX5dx/saVz9vGKxC/nf2Ly7puV6z+PRLxLN
Nq46GQpda7fPkQU6c0EeyXrFprr2ToOHZVIH6rQP6iYALqGMBM7MzBSWzMnJ
EZ+zxjDMARVTwbN7O7kpv+zslKw9HFoWLP0dy6s5/y+OF09tqtudSub9/f3k
zbt379pJTDHvqV3ZJNA9K1+V24fdECjUmSiooSDIyLGb0okZ5Olqlakb+Cya
x5CVKtbrOaBiKnhwb7/UdH7B2lqlH3PavK0n839Qty/n4QMfnhmJjUWguw4c
fyO7UinY+k/X37x20amjQJ2JghoKAosyYy3P7i62BlmdCmaKhDrt4+q9/XJ9
5ek1r1zN/8qv5pfIelq84dS55jvuHdc+A4OPth++IgQ6eW55fe4LbQXPUSDc
2WHwgGqiQJ2JghoKAos+7V7mGOJzWNSZk5NjOAkSrRRjgxVQMRVcurefr9lc
m/+y6FIsWT6FxDQla0/RrvM3u/rdOGIq9A0Mb9h7kYqXs2SWKDML9M6NllRy
hjoTBTUUBBbDGWuFPcOiTn6ORpkBiV+RZhZyxjAUQcPxe3t9Q0N9wXeUIUAX
875edugCGcrZYznL/f6hw5vmUIwsl5y+Vpbm0qbk8oQ67YO6CQKO2SvGyKcs
UDfUadiIKne5ijhRebbUcNCs9dyAFu9QQ8VUcPDeXtd0a/bqam7zlKV5csc8
66cyA0VnRxMFmxRyCnW+lVU87f292w9fGRh8lGhuUGeioIaCIMPO0ls1XZqu
ll2mqJPLIHe5cnniqpMTmL1dlMkZQ1+PiqngyL2dpSm6MpcvnsPSPFWxZHjo
Yer5e8+N1vMnil4TTc28vJFdube29dHIqP18oM5EQQ0F4YU8ZdbgmQRiFlxF
ncojJBZje/TcFG/q+1LOUKcdUry3X7rwmSxNXv595cHTlXleSvP69evLly9v
bGx0Ntv2y6dzNx5Szu7NpQeOVFXYPDuoM1FQQ0EYkVtQDR9dSRQRIbLyZLvp
mcc9nGH/JiM/48nJMMLWDknf23n0bGvBczOyCoVWMlceOtpwPYk5DVLE5pQI
ydFyvUd+uGbavK2X875KMXX9/tzH2rtEFaDOREENBWGEzCXGrCoNpyk6VFGn
YXekxchYRswXJCNMKm+NO0yIqAN1ddu2bUt0l4M715zI+4HozeSJBd5asndd
WfWp026UMT779u0jdZaWlrp3iB37jr+bs5/OtOiD34hzP5v3QuWmhadPnTLb
K4nLm57IFTOV+wwAvkAu0wffsuacVafS0cnEVWfqoGIq1CUSFl260nJyzQ/1
0bNHT1/0PtKUcTXqlDnXfOdI/o+VK3Au/8WGumrD9AldXhBDDQWhQm4CJX85
2NEpgDqDic17e1NbNzda8nu7hDQDMhDIM3Uy52q2yw/gXM776rR5W2evrtbn
eYA6EwU1FIQIeSQPN3u6dIgUG2xTBxVTIe69vb2zd8WmOtHT94eFK0gWV/K/
drJ0ztBAjzeF1Bl61Nfd29J2u+b8tdITTblb9881VGd9y4aTl/ObOiru3L/0
aGTA2TI0HFlH8SZdjaIPfiOuD/3AoJ8ZIg3UmSiooSB0yAJlHBSZI8OEUgcV
U8Hi3t7e1ixLUzygcXTnSn+f02y5eWhZ2fPysqTk73I+ztZbS9YeeFVOtv7Q
awcbFjhYkscjI/UHC979cJdylRZvONXeeikGdSYOaigINbpGne3rjJk8nGI4
etZBUDEVDO/t7S0XqtdOaS14jmJMoYMpWXtKKpuSmBYgISicvNXT2Ni+8+iF
ZWW1vy3c/0Nao6ShEFJRJy0Ue+q55e/7vpKMZOp4mR+NjO6tbX1z6QFxrX41
v+Rq/ldOFv346L5Njh8u2qCGgsjA1nNcnexKka2zQa4ZqJgKijrbr109tO7X
rU/n0jny0fdYmhv2Xkx6Mjr71FxcpTvx5r1zSrJHIwNi64od3yC9bjk2lWyr
Z0jr11S+LOdmGHX2POh4OJxq4zMJdMfRZp5JvmT5FHkiXEdmkk8TUEMBkNHV
GTOZiM9VUDEVhDrbO3ur1r6lzOBKd/7t5ZVOSXP0i8fdvS1XbuynCNFQYWfb
tujqNHRiy81DlJXN7ks+LuVTdTabdtQTUHhLCt51amZr51FKnOBpPQNF5Tuq
zslv0+bLeGL91J57gXhZTMBBDQUggKBiKpA6xUCgPStflW/4dZ/+4l7nFUeO
cvJy/rqqH5GeZCeOjKqzwVOAKWLJ9Yde23363VNXCu/cv+RIGczof3hLLlj+
vu9TaVMMQvt7bpzYNEP+HVKf+8LUrApvgvdQgxoKQABBxZRpauueu/rLHrqZ
C/L+dJ/f8NO7HQ2J5kYOoqiNgkp90+HzS/RwUnciRZG0O0WIKYZ+CdHUUaGX
befJGannfK/r84OfvMECXb54jpddxuEFNRSAAIIZS5iGSzflyeXEXf3I5vcS
kub5a6VVZ7O3HJu6quIli3E4cksshXgUge46NZMU6dwJpQRJ/1jjh3l7visK
2XbbmeFqFNTfuX7p6IZ3pszbpQxUfvIqloFBR44SDVA3AQgsaV4xH42MHq7v
WLv6/frcF7IXZcnStG5LHBkd1ke6EhuP/FwP2fSW2Lv9beSmS5/vpUjTjYiy
q6urrKysvb09lUyoYFRC+hlgNgpXP6+4iK7kW3cHcrc3yPb8XVbR+byM4zsX
B2FOieCQ5jUUgGCSthWzb2CYwpwPP1wipgMie06eWz51wR79TZQ8roY8Ip4Q
ISHuq5+jZ0shp+JNCj9JlN6clMDZ2YQMRx+1dh6lsJR+ADwYSuCZVnUAszS/
ROmH/xy0SZmCQNrWUACCTBpWzHPNd1Zu+Wzxkmx5Dj1ejlbk15w4ZbhXzq5v
KU789PBP9WRNHRW0/mDDgvqWDW23axLSioN4MBFf6fHf8HVYufOb9CvCZmuz
8WOznb35G/eIJ4B4uZD3jfqDBXFfxRJ50rCGAhB80qdi3ro7QOHkjBVVSoxD
y6VP/vvxkr89djxz32d/KNj96tm2LfruJERFnSRT78/CJm6rs3fght4uTTKN
24RrMZsQv7VNtif9tvHrrW3BITg1NDs7u6SkxCIBbaU0V69eVdbTmtzc3Owx
KioqurtNf0/SJk5mkUYujw6VQSlAdXU1rae/+rG4wIZ7KTQ0NHBKOhH6HLds
IPJEfijC3d7BvbWtc9fUKEOAfpdV1FbwHEkzp/TrigIMW2JpJY/52XlyxrHG
D3ngq+dnYxcPos5bPY10KeTHWMpqfxt3r7gT8TWf2taw5u9ZnVnZi/gfa/bq
6rqmWw4VPDQ4VTfLE8Qsn3Hjxk2cONHiQLSV0siSIj1NmjRpnMasWbMMcyCF
cQJrR4vymCHnT76jNfRX3pdXKlD5dWWT6ydMmGAnJUgroirNlus9FGPOyT/2
8/fKf5ld+PaKBe8W/PqNxXl8K/714v0llU2fH1/ed6HQZkvs0KO+JEbF+IVn
b07pedBxsGHByp3fpOt2vSv+/LQ257BtPL5lb95U5dcOCVSeST5NcESdazb/
0f5ilk8S6uQ19JdUWD0GRW1sIsVlTEZGxoQx6EPc82KLVT8L5T9+/HhZvro6
eQ0dhRLzXpRYFFU+BKucMqQP7EoKTsnLtJJKCHumM1FS5+Dw41ONnUW7zs9Y
UUW6nF04JevTV5Zt/zIsmvnxrBWb6ijNo5FRsZdoiV1V8dKm6tc37n+nqaPC
x7NwBI9fOvZgqLuhdaO+fvSLx3XN6+QO34Smf6d/qcyVh2R7/mHhitNrXrnc
cMCBQocEp9R5rW+PncVBdTY0NBjuQsYZP4aynqxE6aePQR/itouyOvX1FCey
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
v3/mI89KGIuKOgNL0pf3zv1Lu07NFBP6ral8efSLZBrtSaCf7c+/mPd15X/a
psKFwXwZaBBGIwAAFLypmHS/qjx18b3iaRRpPhM+lH67uaNTTtlZ+grfyjoK
/yLR6WcdAep0lRQvb8+Djqqz2St3frO+ZUMq+fBM8kKgl/O+Om3eVvoVt2Bt
Lf+KCw5QJwABxO2KKVrJfv5e+ULpwZMPSv+2/MSyoUd9SvqH1yrbP/nzu9Wz
vJcmA3W6iiOX98FQt+Fo24MNC05dKdT/U5nx8EEfzyRf9MFv5A530QwSBKBO
AAKIq7MJyWMzaPndh/PHIs2/3lq9+OGDG/2XNhnuNdL/uRuFsQnU6SruXV4K
SPlX2aqKl8yecDHkQW/3jqpz+oi1bZsKO2+2u1RaOwRzpi8AQMy137RnW27q
TwRk5hzcdHjR/f4bfRcK+aVgDs4C5BRQp6u4d3kp5FTGEe2rn9M7YHcS+IHB
R9sPXxECnTZv6+W8r17N/8rR9W/7LlAfjw4AMMTxinm+5drijf9vybYXf7mo
QEjzzaUHnjyHPjLS17iO52zn5XbFT5w9eupAna7i3uVt7Ty6qfp1ZSDu9a7E
DiceNC5e/ob4X/pEoJtm99zzpwcB6gQggDhYMZs7OlmafNf647rXWJo8fejo
4D1lznZW5xePBpwqgCNEQ53Xr19fvnx5Y2Oj3wVRcfvykivFkyyfHv5pcpnc
7x+q2fDrtoLn5P+rFITurtjBEyl7CdQJQABxpGK23by3fOvCxVu+rfzmLz16
QJ5zm0QpSzOArbWxqKgzYlMiJMqd+5f21c+hOFTf9GCo2+ZTLZ3XGk+u/Wfx
P7Zx9fOvv1f2Rnbl9sNXBofdmsxKB+oEIICkOBTh1t2B3O0NFF1mffqKLM2P
d/205YZqRnIlz9k+eKMm5YK7BdTpKr5f3i3Hpubv+359ywabM+K2Xz7Nr2LJ
XTpT7oDw4FUsGCYEQGBJumLe7x9as/Mcv1+Yll8t/Yil+dGu10iaQ7eNb9rB
jDRlfL+3OwLUacj1rjrx645nxH04bOtVnlcbT2avVYe9vb3s4Mljux+PjLha
ZqgTgACSRMXsGxhW5mynhb7mlv/+XGslyZEbZh1/HZg3QJ2u4u/l3X/mPaVP
YeXOb56/Vmpz96a27gVra7982CqrqLXguXP5L9YfTml+BmugTgACSEIVc2Dw
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
AAAAAAAAAAAAAAAASDf+PyNN0TM=
    "], {{0, 168.}, {370.2, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->120.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{370.2, 168.},
  PlotRange->{{0, 370.2}, {0, 168.}}]], "Output",
 CellLabel->"Out[4]=",
 CellID->77689156,ExpressionUUID->"ef0fc31e-4d87-7a41-b107-43b9b29aee4f"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "3"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "4"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"e21b84b4-cf44-4d2c-a047-9e3de802915b"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"bf6c4d09-2daf-4e46-8d86-7e741801a545"],
 "\"\[ScriptCapitalN]\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "6623e3be-4ca3-43e9-891a-d1feca9f1a30"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->420778635,ExpressionUUID->"710590e2-1edc-490f-9c72-ada377b8a565"],

Cell["\[ScriptCapitalN] parametrizes the number of eddy turnover times.", \
"ExampleText",
 CellID->67382089,ExpressionUUID->"3db760b6-fc80-6747-bca2-3ee1996c775f"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "4"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "5"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"c7c8d265-144f-48a1-8606-537ee336af29"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"fb05d9ce-9ee3-4d9b-8920-89e3b65d8f9c"],
 "\"ShapeParameters\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "288a4072-8347-4a65-98a6-addcfb9fc9a5"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1298665013,ExpressionUUID->"0ec5bcf8-84db-4906-95e9-04fef79dc048"],

Cell[TextData[{
 "The default shape parameters for the broken and double broken power laws \
match the values of arXiv ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["2403.03723"]], "https://arxiv.org/abs/2403.03723"},
   "WebLink",
   BaseStyle->{"ExampleText"}]],ExpressionUUID->
  "c126fc65-5373-47df-8607-49b342d0171d"],
 "."
}], "ExampleText",
 CellID->709927339,ExpressionUUID->"ef925a29-b401-0348-b936-61e72e29f66b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<ShapeParameters\>\"", "/.", 
  RowBox[{"Options", "[", "ComputeGW", "]"}]}]], "Input",
 CellProlog:>Needs["PT2GW`"],
 CellLabel->"In[1]:=",
 CellID->339041741,ExpressionUUID->"0be1ec46-7819-f946-a04b-48b767d41309"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Collisions" -> <|
        "n1" -> 2.4, "n2" -> -2.4, "n3" -> Null, "a1" -> 1.2, "a2" -> Null|>, 
       "Soundwaves" -> <|
        "n1" -> 3, "n2" -> 1, "n3" -> -3, "a1" -> 2, "a2" -> 4|>, 
       "Turbulence" -> <|
        "n1" -> 3, "n2" -> 1, "n3" -> Rational[-8, 3], "a1" -> 4, "a2" -> 
         2.15|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "n1"} -> 
        1, {All, "n2"} -> 1, {All, "n3"} -> 1, {All, "a1"} -> 1, {All, "a2"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n1" -> TypeSystem`PackageScope`AtomShape[60], "n2" -> 
             TypeSystem`PackageScope`AtomShape[60], "n3" -> 
             TypeSystem`PackageScope`UnknownShape[False], "a1" -> 
             TypeSystem`PackageScope`AtomShape[60], "a2" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 5, {All}]]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"n1", "n2", "n3", "a1", "a2"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`AnyType, 
         TypeSystem`Atom[Real], TypeSystem`AnyType}], 3], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, "n1"} -> 
        1, {All, "n2"} -> 1, {All, "n3"} -> 1, {All, "a1"} -> 1, {All, "a2"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[112.00000000000001`], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "n1" -> TypeSystem`PackageScope`AtomShape[60], "n2" -> 
             TypeSystem`PackageScope`AtomShape[60], "n3" -> 
             TypeSystem`PackageScope`UnknownShape[False], "a1" -> 
             TypeSystem`PackageScope`AtomShape[60], "a2" -> 
             TypeSystem`PackageScope`UnknownShape[False]|>], 
           DirectedInfinity[1], 5, {All}]]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Struct[{"n1", "n2", "n3", "a1", "a2"}, {
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], TypeSystem`AnyType, 
         TypeSystem`Atom[Real], TypeSystem`AnyType}], 3], "Path" -> {}, 
     "DisplayedRowCount" -> 3, "DisplayedColumnCount" -> 5, "DataRowCount" -> 
     3, "DataColumnCount" -> 5, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n1", 
                  Style[
                  "n1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "n1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n2", 
                  Style[
                  "n2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "n2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["n3", 
                  Style[
                  "n3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "n3"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "n3"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a1", 
                  Style[
                  "a1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "a1"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "a1"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["a2", 
                  Style[
                  "a2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "a2"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "a2"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Collisions", 
                  Style[
                  "Collisions", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Collisions"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Collisions"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Collisions"], 
                 Key["n1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-2.4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Collisions"], 
                 Key["n2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "Null", FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Collisions"], 
                 Key["n3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Collisions"], 
                 Key["a1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                "Null", FontFamily -> "Source Code Pro", FontSize -> 13]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Collisions"], 
                 Key["a2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Soundwaves", 
                  Style[
                  "Soundwaves", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Soundwaves"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Soundwaves"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Soundwaves"], 
                 Key["n1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Soundwaves"], 
                 Key["n2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Soundwaves"], 
                 Key["n3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Soundwaves"], 
                 Key["a1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Soundwaves"], 
                 Key["a2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Turbulence", 
                  Style[
                  "Turbulence", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Turbulence"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Turbulence"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Turbulence"], 
                 Key["n1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Turbulence"], 
                 Key["n2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-8/3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Turbulence"], 
                 Key["n3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Turbulence"], 
                 Key["a1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Turbulence"], 
                 Key["a2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{461., {61.8515625, 67.1484375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{461., {61.8515625, 67.1484375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[1]=",
 CellID->333758073,ExpressionUUID->"eaf7d78a-3c57-fe4c-a4be-03cd3044cf68"]
}, Open  ]],

Cell[TextData[{
 "Pass a modified version of this ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Dataset"]], "paclet:ref/Dataset"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "64335de7-5a35-6446-afb5-3cc80f313019"],
 " to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ComputeGW"]], "paclet:PT2GW/ref/ComputeGW", 
    "PT2GW Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ff14894e-ccf4-5a42-9ad9-d1e18f82e93b"],
 " to obtain the corresponding spectra."
}], "ExampleText",
 CellID->67923352,ExpressionUUID->"61939e53-2ad9-184e-8ee3-02509c899d8d"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "5"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["kappaCollision"]], "paclet:PT2GW/ref/kappaCollision"},
          "RefLink",
          BaseStyle->{"InlineFormula", "TI"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "9c62eedf-81b0-4c9c-b6da-97c706b39af0"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["KCollision"]], "paclet:PT2GW/ref/KCollision", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "bf9c89e1-b8c3-4548-be6b-19906d9eb45e"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["KSoundwaves"]], "paclet:PT2GW/ref/KSoundwaves", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"5c539e25-de36-4816-8ed3-02a39adaf3c6",ExpressionUUID->
         "0d2824f2-1563-4f39-a0e2-5ec93066edea"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["kappaSoundwaves"]], "paclet:PT2GW/ref/KSoundwaves", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"5c539e25-de36-4816-8ed3-02a39adaf3c6",ExpressionUUID->
         "7da20c5f-7e62-4198-92af-707c2b6e79fb"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["HRFun"]], "paclet:PT2GW/ref/HRFun", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "37d78532-dcc1-4bd3-89d7-9496522d7bad"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["nBFun"]], "paclet:PT2GW/ref/nBFun"},
          "RefLink",
          BaseStyle->{"InlineFormula", "TI"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "e56b66cb-65df-41dd-87be-62c517083de0"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["HRFromBetaH"]], "paclet:PT2GW/ref/HRFromBetaH", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "8ae6fe1b-a8b7-4681-b317-1d480a9e9024"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["BetaHFromHR"]], "paclet:PT2GW/ref/BetaHFromHR", 
           "PT2GW Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"e339fdc4-fe28-41ab-8f83-85262d0df088",ExpressionUUID->
         "cc57c089-443f-41d5-8f70-c310ef28c335"]
       }], "SeeAlso",ExpressionUUID->"6a96c797-460c-455b-9974-215f94772d3d"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"fe3f70ea-f558-4046-8bc3-\
0f194f35b66b"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedTechNote.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Tech", " ", "Notes"}], "TechNotesSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Coupled Fluid-Field Model"]], 
           "paclet:PT2GW/tutorial/CoupledFluid-FieldModel"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "3fe454bd-ff56-4c82-b43c-ab662c91ae6a"]}]}
     }]}
  }]], "TechNotesSection",ExpressionUUID->"6606f876-abea-48e3-befe-\
7a8096673b4f"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Gravitational Wave Template"]], 
           "paclet:PT2GW/guide/GravitationalWaveTemplate"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "5a58cf3c-287d-43a6-a8f7-ed67dd313fb7"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["PT2GWFinder"]], "paclet:PT2GW/guide/PT2GWFinder"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "ba1f098e-4f2e-459b-8ceb-dee70721eebd"]}]}
     }]}
  }]], "MoreAboutSection",ExpressionUUID->"601cef7c-3288-4182-8212-\
4b6738cda836"],

Cell[" ", "FooterCell",ExpressionUUID->"bed28a73-5f35-44ad-be00-f0889c1f0809"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830.25},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"ComputeGW",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open, "1" -> Closed}, "AllOptsTable" -> 
    Closed, "NotesSection" -> Closed, 
    "ExampleSubsection" -> {
     "0" -> Closed, "1" -> Closed, "2" -> Closed, "3" -> Closed, "4" -> 
      Closed, "5" -> Closed}}, "NewStyles" -> True, 
  "CitationPopupData" -> $Failed, "ShowCitation" -> False, "HasOptions" -> 
  True, "RootCaptions" -> "", "HeaderCoreAreaLink" -> {}, 
  "Metadata" -> {
   "built" -> "{2025, 5, 8, 12, 42, 26.208749}", 
    "history" -> {"XX", "", "", ""}, "context" -> "PT2GW`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "P T2G W Symbol", "language" -> "en", "paclet" -> "PT2GW", 
    "status" -> "None", "summary" -> 
    "ComputeGW[T, \\[Alpha], \\[Beta]/H, \\[Xi]w, g*, $Unit] computes the \
stochastic gravitational wave background for given phase transition \
parameters. ComputeGW[T, \\[Alpha], \\[Beta]/H, \\[Xi]w, g*, $Unit, \
\"CollisionData\" -> association] includes the contribution from bubble wall \
collisions. ComputeGW[association] extracts the relevant parameters from an \
Association.", "synonyms" -> {}, "tabletags" -> {}, "title" -> "ComputeGW", 
    "titlemodifier" -> "", "metadescription" -> "", "windowtitle" -> 
    "ComputeGW", "type" -> "Symbol", "uri" -> "PT2GW/ref/ComputeGW"}},
CellContext->"Global`",
FrontEndVersion->"14.0 for Linux x86 (64-bit) (December 12, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "14.0 for Linux x86 (64-bit) (December 12, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"cc5c8ada-55d8-4abe-85d7-2a68ea61fadd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[15750, 393, 1419, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"ae1bdc4c-87b8-4f83-96aa-ef033f25ad1b",
   CellTags->"PrimaryExamplesSection",
   CellID->60121153]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 460355, 8921}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[581, 21, 6894, 168, 57, "AnchorBarGrid",ExpressionUUID->"89355532-4f38-4544-8fb7-faef9d020753",
 CellID->1],
Cell[7478, 191, 88, 0, 23, "ContextNameCell",ExpressionUUID->"a3a06750-93f7-4f50-b38b-e00c9445c304"],
Cell[CellGroupData[{
Cell[7591, 195, 552, 14, 59, "ObjectNameGrid",ExpressionUUID->"80ab3d82-e8be-4f36-946b-0c1c6957ba61"],
Cell[8146, 211, 1918, 43, 260, "Usage",ExpressionUUID->"6db6ec0a-7333-46f3-87c2-9c219b795069",
 CellID->186103519]
}, Open  ]],
Cell[CellGroupData[{
Cell[10101, 259, 1920, 48, 37, "NotesSection",ExpressionUUID->"a95aba45-fe05-4249-9336-76b82c4119a1",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1797595199],
Cell[12024, 309, 375, 11, 70, "Notes",ExpressionUUID->"b5a0da20-fbde-6544-a463-a7ea2425a837",
 CellID->23380038],
Cell[12402, 322, 214, 4, 70, "Notes",ExpressionUUID->"20e40e02-5e0f-774e-975f-6edaa9252e8a",
 CellID->4807250],
Cell[12619, 328, 240, 4, 70, "Notes",ExpressionUUID->"445c7261-71de-4e49-8c76-f4365dcf8585",
 CellID->229311797],
Cell[12862, 334, 128, 1, 70, "Notes",ExpressionUUID->"0af5761e-2c4b-4f74-b4ba-5a692b703cdb",
 CellID->240075433],
Cell[12993, 337, 2630, 50, 70, "3ColumnTableMod",ExpressionUUID->"463054de-0792-449b-9903-7d6dfd784fb0",
 CellID->1505614016]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[15750, 393, 1419, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"ae1bdc4c-87b8-4f83-96aa-ef033f25ad1b",
 CellTags->"PrimaryExamplesSection",
 CellID->60121153],
Cell[17172, 432, 195, 3, 27, "Input",ExpressionUUID->"d681469b-948d-48ae-8e2f-54c2c2a2d260",
 CellID->2073788670],
Cell[CellGroupData[{
Cell[17392, 439, 1398, 36, 30, "ExampleSection",ExpressionUUID->"7dfda84d-398d-47e8-b542-556b7e1d240f",
 CellID->859040811],
Cell[18793, 477, 461, 13, 41, "ExampleText",ExpressionUUID->"2b9974f7-b8bc-6f42-b953-43f9fbb4d844",
 CellID->1802083417],
Cell[CellGroupData[{
Cell[19279, 494, 696, 19, 60, "Input",ExpressionUUID->"e61f6d0f-b8ed-4640-bef4-0520f467cb26",
 CellID->436753814],
Cell[19978, 515, 245, 4, 23, "Print",ExpressionUUID->"22f1b8e5-e4c9-504a-8441-cee22bd8ead9",
 CellID->110892428],
Cell[20226, 521, 25435, 471, 70, "Output",ExpressionUUID->"ab83a36a-9101-414e-868f-27459f38ca82",
 CellID->4970362]
}, Open  ]],
Cell[45676, 995, 748, 21, 41, "ExampleText",ExpressionUUID->"5eb811d6-73ce-5843-991e-e8b323ae3ad3",
 CellID->89755690],
Cell[CellGroupData[{
Cell[46449, 1020, 269, 7, 27, "Input",ExpressionUUID->"332544f1-1e87-194a-84ec-aacfcc839296",
 CellID->151779823],
Cell[46721, 1029, 337, 4, 40, "Print",ExpressionUUID->"cf704080-56cc-7143-9d5d-4cb195b20ff6",
 CellID->226095267]
}, Open  ]],
Cell[47073, 1036, 117, 1, 39, "ExampleText",ExpressionUUID->"2325a2cf-745f-2f4c-8347-23f806df34fc",
 CellID->190385744],
Cell[CellGroupData[{
Cell[47215, 1041, 202, 4, 70, "Input",ExpressionUUID->"d0c07938-98f5-f040-b226-8004844c0f7d",
 CellID->2059106148],
Cell[47420, 1047, 2345, 66, 156, "Output",ExpressionUUID->"e3094d7e-00e8-4140-84f6-2ba4ef52d58c",
 CellID->704863717]
}, Open  ]],
Cell[49780, 1116, 134, 1, 70, "ExampleText",ExpressionUUID->"37430a2f-40b5-1548-9d71-fb2fcb54e83b",
 CellID->57857835],
Cell[CellGroupData[{
Cell[49939, 1121, 234, 5, 70, "Input",ExpressionUUID->"8d55486b-2a22-2849-9a65-e35afdaa7f99",
 CellID->217156973],
Cell[50176, 1128, 22953, 381, 189, "Output",ExpressionUUID->"f1bdb915-a013-f146-90bd-10070bd8623c",
 CellID->362321055]
}, Open  ]],
Cell[73144, 1512, 126, 1, 70, "ExampleText",ExpressionUUID->"f7e52852-77fa-c14a-bbd4-c9380c739270",
 CellID->1373189798],
Cell[CellGroupData[{
Cell[73295, 1517, 189, 4, 70, "Input",ExpressionUUID->"0e84b454-e1bd-964f-863b-280f8e78275a",
 CellID->553953049],
Cell[73487, 1523, 63409, 1175, 70, "Output",ExpressionUUID->"b4693e49-004f-2f4d-8911-f6248b97b5ed",
 CellID->555644279]
}, Open  ]],
Cell[136911, 2701, 426, 11, 70, "ExampleText",ExpressionUUID->"fd75679c-93f1-d847-a4cf-9547d35cb1b6",
 CellID->1147522641],
Cell[CellGroupData[{
Cell[137362, 2716, 188, 4, 70, "Input",ExpressionUUID->"badad2fc-3eec-fe41-8f32-a2b28c36cb55",
 CellID->685969004],
Cell[137553, 2722, 129, 2, 36, "Output",ExpressionUUID->"92242ec9-f0d6-0448-9b7b-da7ac195d373",
 CellID->483517730]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[137831, 2732, 1415, 37, 70, "ExampleSection",ExpressionUUID->"d9be4058-e3a2-40a8-8ac1-25d87aab02f8",
 CellID->2064310248],
Cell[CellGroupData[{
Cell[139271, 2773, 1434, 37, 70, "ExampleSubsection",ExpressionUUID->"0409f560-54cf-4fc5-aee8-02e3ed9a7393",
 CellID->1151142186],
Cell[140708, 2812, 371, 8, 70, "ExampleText",ExpressionUUID->"24d76ea6-5e9c-a94c-bcd0-cf076319bee2",
 CellID->130795962],
Cell[141082, 2822, 262, 7, 70, "ExampleText",ExpressionUUID->"533b7177-be9a-f347-8ad8-1d8352cd600e",
 CellID->49741612],
Cell[CellGroupData[{
Cell[141369, 2833, 214, 5, 70, "Input",ExpressionUUID->"e97308b5-972c-4045-9f81-a898dc77faf4",
 CellID->146660263],
Cell[141586, 2840, 640, 17, 38, "Output",ExpressionUUID->"158f437f-1ab8-cf45-b771-5584f566f15d",
 CellID->12849945]
}, Open  ]],
Cell[142241, 2860, 149, 1, 70, "ExampleText",ExpressionUUID->"3f1bbc1a-3149-144a-b027-04f3e6abd233",
 CellID->555880485],
Cell[CellGroupData[{
Cell[142415, 2865, 768, 21, 70, "Input",ExpressionUUID->"fe973c8a-ad7b-a847-bada-3c0edaf055fc",
 CellID->1855751815],
Cell[143186, 2888, 452, 12, 42, "Output",ExpressionUUID->"fcc103df-7275-c746-802a-9d6b854a52f3",
 CellID->253923255]
}, Open  ]],
Cell[CellGroupData[{
Cell[143675, 2905, 553, 17, 70, "Input",ExpressionUUID->"b122b058-6f92-7544-8173-cee7a2fe3ca3",
 CellID->925166502],
Cell[144231, 2924, 18237, 361, 70, "Output",ExpressionUUID->"c64bf0ed-f246-d34b-b6f0-fa0ae727d9f5",
 CellID->65649865]
}, Open  ]],
Cell[162483, 3288, 132, 1, 70, "ExampleText",ExpressionUUID->"1d214be9-c325-bf47-bdba-d9699c6e7ea6",
 CellID->704656635],
Cell[162618, 3291, 654, 17, 70, "Input",ExpressionUUID->"258f1454-c0a7-b048-afdb-a242b0c03a17",
 CellID->1455351019],
Cell[163275, 3310, 236, 4, 70, "ExampleText",ExpressionUUID->"da9f8037-6685-f346-9c9e-a2a55f912ce2",
 CellID->592835544],
Cell[CellGroupData[{
Cell[163536, 3318, 443, 12, 70, "Input",ExpressionUUID->"86e35daa-5e37-6a46-9313-591cad1b0dc6",
 CellID->1261580125],
Cell[163982, 3332, 85206, 1575, 70, "Output",ExpressionUUID->"3e120742-a73f-a54f-a880-2554025bca15",
 CellID->620016211]
}, Open  ]],
Cell[249203, 4910, 198, 4, 70, "ExampleText",ExpressionUUID->"3f5d43b0-2603-3e4f-87dc-48fb2d576b00",
 CellID->328228104],
Cell[CellGroupData[{
Cell[249426, 4918, 234, 5, 70, "Input",ExpressionUUID->"994df300-1fff-e740-a727-ff4dced3d447",
 CellID->976546084],
Cell[249663, 4925, 25682, 426, 189, "Output",ExpressionUUID->"1bac5018-1ea2-d642-8e15-c8dbc55fb28d",
 CellID->128869212]
}, Open  ]],
Cell[CellGroupData[{
Cell[275382, 5356, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"8c7c3f0a-767e-c442-8166-70ad292cd1d5",
 CellID->64306314],
Cell[275626, 5363, 224, 4, 70, "ExampleText",ExpressionUUID->"0e9311e2-77d0-3643-93de-718795782aa5",
 CellID->1952677013],
Cell[275853, 5369, 510, 15, 70, "Input",ExpressionUUID->"b1f3e676-44c8-794e-9e30-1798284efa81",
 CellID->771391918],
Cell[276366, 5386, 490, 12, 70, "ExampleText",ExpressionUUID->"751c9ab3-d6e2-534b-85a0-65eb357e9bd9",
 CellID->2114746447],
Cell[CellGroupData[{
Cell[276881, 5402, 367, 10, 70, "Input",ExpressionUUID->"2b6c804d-b790-a046-99a2-c299351dcd0f",
 CellID->98371081],
Cell[277251, 5414, 55077, 1004, 70, "Output",ExpressionUUID->"f575aa7f-0cd4-c649-bf4d-e8a2f53ca2d0",
 CellID->848266271]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[332492, 6427, 1427, 37, 70, "ExampleSubsection",ExpressionUUID->"ee6c8d95-7044-4ba5-9288-df9955778f38",
 CellID->367699337],
Cell[333922, 6466, 194, 4, 70, "ExampleText",ExpressionUUID->"b78eafe0-557b-494d-a9c7-741112983fed",
 CellID->91378339],
Cell[CellGroupData[{
Cell[334141, 6474, 324, 9, 70, "Input",ExpressionUUID->"89e71c79-0235-c140-b4e2-927b9a9f4b31",
 CellID->193296486],
Cell[334468, 6485, 337, 4, 70, "Print",ExpressionUUID->"25b6d837-796a-2f4d-ab45-636e42acbffe",
 CellID->771983044]
}, Open  ]],
Cell[CellGroupData[{
Cell[334842, 6494, 234, 5, 70, "Input",ExpressionUUID->"89227559-53bf-2a41-b2f8-61f9377d5f6b",
 CellID->161161166],
Cell[335079, 6501, 14878, 249, 189, "Output",ExpressionUUID->"d749b18d-dc02-c849-837c-7712565bc83f",
 CellID->254695248]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed]]]],
Cell[CellGroupData[{
Cell[350109, 6758, 1432, 37, 70, "ExampleSubsection",ExpressionUUID->"3c3ed420-dc5f-43fc-ad87-4ad450742837",
 CellID->272007896],
Cell[351544, 6797, 436, 11, 70, "ExampleText",ExpressionUUID->"6c2fccce-f58a-9644-a1d2-bb5f72e459c0",
 CellID->260282364]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "2"}, Closed]]]],
Cell[CellGroupData[{
Cell[352120, 6815, 1436, 37, 70, "ExampleSubsection",ExpressionUUID->"1024fa63-6bc7-4590-a1e1-5155a536adae",
 CellID->1077447208],
Cell[353559, 6854, 788, 20, 70, "ExampleText",ExpressionUUID->"5d52e990-7f5f-5646-851c-860369213e75",
 CellID->814525994],
Cell[354350, 6876, 199, 4, 70, "ExampleText",ExpressionUUID->"aa378357-250b-b341-b20c-2b8db964078c",
 CellID->887790242],
Cell[CellGroupData[{
Cell[354574, 6884, 315, 9, 70, "Input",ExpressionUUID->"eaddc60d-8e11-d642-9ad1-513b5a38fd6f",
 CellID->164254980],
Cell[354892, 6895, 399, 7, 70, "Print",ExpressionUUID->"67a65b76-67a9-aa41-96f0-f000d593011e",
 CellID->333912393]
}, Open  ]],
Cell[CellGroupData[{
Cell[355328, 6907, 234, 5, 70, "Input",ExpressionUUID->"381db18a-7691-b848-accc-3b5299d2ffdf",
 CellID->444862531],
Cell[355565, 6914, 22830, 379, 189, "Output",ExpressionUUID->"a7801f2d-e94d-3d49-9053-a08bc7d9144a",
 CellID->40110886]
}, Open  ]],
Cell[CellGroupData[{
Cell[378432, 7298, 315, 9, 70, "Input",ExpressionUUID->"18c9bf85-1c74-f34c-8305-4b59292d1b25",
 CellID->302608659],
Cell[378750, 7309, 399, 7, 70, "Print",ExpressionUUID->"e72dd6c0-eb8d-6844-a535-8135f4138d81",
 CellID->234323629]
}, Open  ]],
Cell[CellGroupData[{
Cell[379186, 7321, 234, 5, 70, "Input",ExpressionUUID->"ae87a9ec-9cf2-694c-918b-10b34e8cf5fa",
 CellID->519115185],
Cell[379423, 7328, 22830, 379, 189, "Output",ExpressionUUID->"ef0fc31e-4d87-7a41-b107-43b9b29aee4f",
 CellID->77689156]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "3"}, Closed]]]],
Cell[CellGroupData[{
Cell[402405, 7715, 1437, 37, 70, "ExampleSubsection",ExpressionUUID->"710590e2-1edc-490f-9c72-ada377b8a565",
 CellID->420778635],
Cell[403845, 7754, 164, 2, 70, "ExampleText",ExpressionUUID->"3db760b6-fc80-6747-bca2-3ee1996c775f",
 CellID->67382089]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "4"}, Closed]]]],
Cell[CellGroupData[{
Cell[404149, 7763, 1436, 37, 70, "ExampleSubsection",ExpressionUUID->"0ec5bcf8-84db-4906-95e9-04fef79dc048",
 CellID->1298665013],
Cell[405588, 7802, 434, 12, 70, "ExampleText",ExpressionUUID->"ef925a29-b401-0348-b936-61e72e29f66b",
 CellID->709927339],
Cell[CellGroupData[{
Cell[406047, 7818, 242, 5, 70, "Input",ExpressionUUID->"0be1ec46-7819-f946-a04b-48b767d41309",
 CellID->339041741],
Cell[406292, 7825, 44218, 834, 70, "Output",ExpressionUUID->"eaf7d78a-3c57-fe4c-a4be-03cd3044cf68",
 CellID->333758073]
}, Open  ]],
Cell[450525, 8662, 734, 22, 70, "ExampleText",ExpressionUUID->"61939e53-2ad9-184e-8ee3-02509c899d8d",
 CellID->67923352]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "5"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[451604, 8695, 4526, 121, 70, "SeeAlsoSection",ExpressionUUID->"fe3f70ea-f558-4046-8bc3-0f194f35b66b"],
Cell[456133, 8818, 751, 20, 70, "TechNotesSection",ExpressionUUID->"6606f876-abea-48e3-befe-7a8096673b4f"],
Cell[456887, 8840, 1069, 27, 70, "MoreAboutSection",ExpressionUUID->"601cef7c-3288-4182-8212-4b6738cda836"],
Cell[457959, 8869, 78, 0, 70, "FooterCell",ExpressionUUID->"bed28a73-5f35-44ad-be00-f0889c1f0809"]
}
]
*)

(* End of internal cache information *)

